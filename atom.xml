<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ACrazyDragon的博客</title>
  
  
  <link href="http://www.acrazydragon.github.io/atom.xml" rel="self"/>
  
  <link href="http://www.acrazydragon.github.io/"/>
  <updated>2020-11-19T01:50:23.822Z</updated>
  <id>http://www.acrazydragon.github.io/</id>
  
  <author>
    <name>Long Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android学习</title>
    <link href="http://www.acrazydragon.github.io/2020/11/12/2020-11-12-Android%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.acrazydragon.github.io/2020/11/12/2020-11-12-Android%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-11-12T01:47:12.000Z</published>
    <updated>2020-11-19T01:50:23.822Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Android应用开发学习"><a href="#Android应用开发学习" class="headerlink" title="Android应用开发学习"></a>Android应用开发学习</h2><a id="more"></a><h2 id="1-安卓项目目录结构了解"><a href="#1-安卓项目目录结构了解" class="headerlink" title="1.安卓项目目录结构了解"></a>1.安卓项目目录结构了解</h2><h2 id="2-UI组件"><a href="#2-UI组件" class="headerlink" title="2.UI组件"></a>2.UI组件</h2><h3 id="2-1布局管理器"><a href="#2-1布局管理器" class="headerlink" title="2.1布局管理器"></a>2.1布局管理器</h3><h4 id="2-1-1线性布局（LinearLayout）"><a href="#2-1-1线性布局（LinearLayout）" class="headerlink" title="2.1.1线性布局（LinearLayout）"></a>2.1.1线性布局（LinearLayout）</h4><ul><li>比较常用的属性</li></ul><p><img src="/2020/11/12/2020-11-12-Android%E5%AD%A6%E4%B9%A0/C:%5CUsers%5Clong%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201112090721094.png" alt="image-20201112090721094"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:layout_weight&#x3D;&quot;1&quot;     占比权重，一个布局中总权重（weight）是2，是将布局中剩余内容进行分配</span><br></pre></td></tr></table></figure><h4 id="2-1-2相对布局（RelativeLayout）"><a href="#2-1-2相对布局（RelativeLayout）" class="headerlink" title="2.1.2相对布局（RelativeLayout）"></a>2.1.2相对布局（RelativeLayout）</h4><ul><li>比较常用的属性</li></ul><p><img src="/2020/11/12/2020-11-12-Android%E5%AD%A6%E4%B9%A0/assets/2020-11-12-Android%E5%AD%A6%E4%B9%A0/image-20201117082738067.png" alt="image-20201117082738067"></p><p>案例实验：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/view_1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/view_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">&quot;@+id/view_1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#0000ff&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;800dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;600dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;#ff0000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">&quot;@+id/view_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:padding</span>=<span class="string">&quot;40dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/view_3&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;#0000ff&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;#ffff00&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;30dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/view_4&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;#000000&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;200dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_toRightOf</span>=<span class="string">&quot;@+id/view_4&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;20dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实验结果：</p><p><img src="/2020/11/12/2020-11-12-Android%E5%AD%A6%E4%B9%A0/assets/2020-11-12-Android%E5%AD%A6%E4%B9%A0/image-20201117085831012.png" alt="image-20201117085831012"></p><h3 id="2-2TextView"><a href="#2-2TextView" class="headerlink" title="2.2TextView"></a>2.2TextView</h3><h4 id="2-2-1可以使用的情况："><a href="#2-2-1可以使用的情况：" class="headerlink" title="2.2.1可以使用的情况："></a>2.2.1可以使用的情况：</h4><ul><li><p>文字大小，颜色</p></li><li><p>显示不下使用</p></li><li><p>文字+icon</p></li><li><p>中划线，下划线</p></li><li><p>跑马灯</p></li></ul><p>案例：（从上往下依次为各个）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;哈哈哈哈&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_2&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;150dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:maxLines</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ellipsize</span>=<span class="string">&quot;end&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;哈哈哈哈&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;筛选&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawableRight</span>=<span class="string">&quot;@drawable/icon&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawablePadding</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_4&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;哈哈哈哈&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_5&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;哈哈哈哈&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_6&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_7&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;#000000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;50sp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ellipsize</span>=<span class="string">&quot;marquee&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">&quot;marquee_forever&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>其中下划线和中划线需要用java代码实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Paint;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.text.Html;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TextViewActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView mTV4;</span><br><span class="line">    <span class="keyword">private</span> TextView mTV5;</span><br><span class="line">    <span class="keyword">private</span> TextView mTV6;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_text_view);</span><br><span class="line">        mTV4=(TextView) findViewById(R.id.tv_4);</span><br><span class="line">        mTV5=(TextView) findViewById(R.id.tv_5);</span><br><span class="line">        mTV6=(TextView) findViewById(R.id.tv_6);</span><br><span class="line"></span><br><span class="line">        mTV4.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);<span class="comment">//中划线</span></span><br><span class="line">        mTV4.getPaint().setAntiAlias(<span class="keyword">true</span>);<span class="comment">//去除锯齿</span></span><br><span class="line"></span><br><span class="line">        mTV5.getPaint().setFlags(Paint.UNDERLINE_TEXT_FLAG);<span class="comment">//下划线</span></span><br><span class="line">        mTV5.getPaint().setAntiAlias(<span class="keyword">true</span>);<span class="comment">//去除锯齿</span></span><br><span class="line"></span><br><span class="line">        mTV6.setText(Html.fromHtml(<span class="string">&quot;&lt;u&gt;hahaha&lt;/u&gt;&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他的相关配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button mBtnTextView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        mBtnTextView=(Button)findViewById(R.id.btn_TextView);</span><br><span class="line">        mBtnTextView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//跳转到TextView演示界面</span></span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,TextViewActivity.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现效果：</p><p><img src="/2020/11/12/2020-11-12-Android%E5%AD%A6%E4%B9%A0/assets/2020-11-12-Android%E5%AD%A6%E4%B9%A0/image-20201119093343671.png" alt="image-20201119093343671"></p><h4 id="2-3Button"><a href="#2-3Button" class="headerlink" title="2.3Button"></a>2.3Button</h4><ul><li><p>文字大小，颜色</p></li><li><p>自定义背景形状</p></li><li><p>自定义按压效果</p></li><li><p>点击事件</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Android应用开发学习&quot;&gt;&lt;a href=&quot;#Android应用开发学习&quot; class=&quot;headerlink&quot; title=&quot;Android应用开发学习&quot;&gt;&lt;/a&gt;Android应用开发学习&lt;/h2&gt;</summary>
    
    
    
    <category term="Android" scheme="http://www.acrazydragon.github.io/categories/Android/"/>
    
    
    <category term="Android" scheme="http://www.acrazydragon.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>python学习笔记</title>
    <link href="http://www.acrazydragon.github.io/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.acrazydragon.github.io/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-11T12:21:52.000Z</published>
    <updated>2020-11-21T03:58:49.328Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python学习"><a href="#Python学习" class="headerlink" title="Python学习"></a>Python学习</h2><a id="more"></a><h3 id="1列表："><a href="#1列表：" class="headerlink" title="1列表："></a>1列表：</h3><h4 id="1列表定义方法："><a href="#1列表定义方法：" class="headerlink" title="1列表定义方法："></a>1列表定义方法：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix = [<span class="string">&#x27;1&#x27;</span>,<span class="number">1</span>,[<span class="number">1</span>,<span class="string">&#x27;1&#x27;</span>]];</span><br></pre></td></tr></table></figure><h4 id="2列表的添加元素方法："><a href="#2列表的添加元素方法：" class="headerlink" title="2列表的添加元素方法："></a>2列表的添加元素方法：</h4><ul><li>append() 在列表的末尾添加一个元素<ul><li>括号中的元素就是要添加的元素</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.append(<span class="string">&#x27;long Li&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>extend() 在列表的末尾添加多个元素<ul><li>括号中的元素就是要添加的多个元素，将多个元素组成一个列表进行同时添加</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.extend([<span class="number">1</span>,<span class="string">&#x27;long Li&#x27;</span>])</span><br></pre></td></tr></table></figure><ul><li>insert() 在列表中插入一个元素<ul><li>第一个参数代表第几个位置，从零开始。第二个参数代表插入的元素</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mix.insert(<span class="number">1</span>,<span class="string">&#x27;long Li&#x27;</span>)  </span><br><span class="line"><span class="comment">#第一个参数代表第几个位置，从零开始。第二个参数代表插入的元素</span></span><br></pre></td></tr></table></figure><h4 id="3从列表中移出元素"><a href="#3从列表中移出元素" class="headerlink" title="3从列表中移出元素"></a>3从列表中移出元素</h4><ul><li>remove()   从列表中删除一个元素<ul><li>括号中的元素就是要删除的元素</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.remove(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li>del   列表名[列表元素序号]     <ul><li>直接删除相应列表名的相对应的数据</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> mix[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><ul><li>pop()  从列表中取出尾部的元素，返回并删除<ul><li>括号中可以添加索引值，代表取出第几个元素</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.pop()</span><br></pre></td></tr></table></figure><h4 id="4切片slice"><a href="#4切片slice" class="headerlink" title="4切片slice"></a>4切片slice</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mix[<span class="number">1</span>:<span class="number">3</span>]   <span class="comment">#取出序列号从1到3的元素</span></span><br><span class="line">mix[:<span class="number">3</span>]<span class="comment">#取出从开始到序列号为3的列表拷贝</span></span><br><span class="line">mix[<span class="number">1</span>:]<span class="comment">#取出从列表序列号为1到最后的拷贝</span></span><br><span class="line">mix[:]<span class="comment">#取出整个列表的拷贝</span></span><br></pre></td></tr></table></figure><h4 id="5列表的一些常用操作符"><a href="#5列表的一些常用操作符" class="headerlink" title="5列表的一些常用操作符"></a>5列表的一些常用操作符</h4><p>比较操作符 ：&lt;  , &gt; 等</p><ul><li>比较列表中的第一个元素然后输出结果</li></ul><p>逻辑运算符 ：and   or  等</p><p>连接运算符：+  </p><ul><li>连接两个列表</li></ul><p>重复操作符：</p><ul><li>可以使里列表重复</li></ul><p>成员关系操作符：in    , not   in 等</p><ul><li>元素    in    列表名[索引值]    此方法中的括号可以不写，写了则是判断列表中的列表</li></ul><h4 id="6列表中的其他方法"><a href="#6列表中的其他方法" class="headerlink" title="6列表中的其他方法"></a>6列表中的其他方法</h4><ul><li>count(元素)   判断列表中的元素出现的次数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.count(<span class="string">&#x27;1&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>index(元素，起始值，结尾值)   返回元素在列表中的位置，后边两个参数是需要在列表中查询的范围。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.index(<span class="string">&#x27;1&#x27;</span>,<span class="number">0</span>,<span class="number">2</span>)</span><br></pre></td></tr></table></figure><ul><li>reverse()    将列表逆序输出</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix.reverse()</span><br></pre></td></tr></table></figure><ul><li>sort(reverse=True)   用指定的方式对列表进行排队，reverse默认为false，将他设置为True，则逆序排序</li></ul><h4 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h4><p>slice切片赋值的列表是从一个列表赋值出第二份元素，然后将第二份元素赋值给相应的名字。</p><p>直接赋值是将第二个名字指向同一份元素</p><h3 id="2元组-tuple-："><a href="#2元组-tuple-：" class="headerlink" title="2元组(tuple)："></a>2元组(tuple)：</h3><p>元组和列表是及其相似的</p><ul><li><p>元组是不可以被修改的</p></li><li><p>元组的定义用（）</p></li><li><p>逗号是标志元组的标志</p><ul><li>如果创建只有一个元素的元组    mix = （1，）  也可以不加括号</li><li>mix =  1,2,3       此时mix仍然是元组</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix = (<span class="number">1</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">345</span>,<span class="string">&#x27;long li&#x27;</span>)</span><br></pre></td></tr></table></figure><p>元组的拼接可以实现元组的修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str2 = str1[:<span class="number">1</span>] + (<span class="string">&#x27;mi&#x27;</span>,) + str1[<span class="number">4</span>:]</span><br></pre></td></tr></table></figure><ul><li>del 可以实现删除元组（很少使用）</li></ul><h3 id="3字符串"><a href="#3字符串" class="headerlink" title="3字符串"></a>3字符串</h3><ul><li>字符串可以直接用下标法来直接取出其中一个字符</li><li>字符串不可以修改</li></ul><h4 id="1字符串的内置函数"><a href="#1字符串的内置函数" class="headerlink" title="1字符串的内置函数"></a>1字符串的内置函数</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201111212000800.png" alt="image-20201111212000800"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201111212211573.png" alt="image-20201111212211573"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201111212231623.png" alt="image-20201111212231623"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201111212322693.png" alt="image-20201111212322693"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201111212406206.png" alt="image-20201111212406206"></p><h4 id="2字符串的格式化"><a href="#2字符串的格式化" class="headerlink" title="2字符串的格式化"></a>2字符串的格式化</h4><ul><li>format（）函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&#123;0&#125; love &#123;1&#125;&quot;</span>.format(<span class="string">&quot;I&quot;</span>, <span class="string">&quot;com&quot;</span>)</span><br><span class="line">输出结果：<span class="string">&#x27;I love com&#x27;</span></span><br><span class="line"><span class="string">&quot;&#123;a&#125; love &#123;b&#125;&quot;</span>.format(a=<span class="string">&quot;I&quot;</span>, b=<span class="string">&quot;com&quot;</span>)</span><br><span class="line">输出结果：<span class="string">&#x27;I love com&#x27;</span></span><br></pre></td></tr></table></figure><p>上方示例第一种为未知参数方法，第二种是关键字参数方法：</p><p>未知参数方法可以和关键字参数方法一同使用，未知参数必须在关键字参数的前边。、</p><h4 id="3字符串的转义"><a href="#3字符串的转义" class="headerlink" title="3字符串的转义"></a>3字符串的转义</h4><ul><li><p>字符串的转义</p><ul><li>一般用  \   进行转义。</li><li>如果打印  <code>&#123;&#125;</code>  ，则需要用两个花括号表示  <code>&#123;&#123;&#125;&#125;</code>  </li></ul></li><li><p>：冒号表示格式化符号的开始</p></li></ul><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201111214358654.png" alt="image-20201111214358654"></p><p>使用案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;%c %c %c&#x27;</span> % (<span class="number">97</span>, <span class="number">98</span>, <span class="number">99</span>)</span><br><span class="line">输出结果： <span class="string">&#x27;a b c&#x27;</span></span><br><span class="line"><span class="string">&#x27;%s&#x27;</span> % <span class="string">&#x27;i love&#x27;</span></span><br><span class="line">输出结果： <span class="string">&#x27;i love&#x27;</span></span><br><span class="line"><span class="string">&#x27;%d+%d=%d&#x27;</span> % (<span class="number">4</span>,<span class="number">5</span>,<span class="number">9</span>)</span><br><span class="line">输出结果： <span class="string">&#x27;4+5=9&#x27;</span></span><br><span class="line"><span class="string">&#x27;%o&#x27;</span> % <span class="number">10</span></span><br><span class="line">输出结果： <span class="string">&#x27;12&#x27;</span></span><br><span class="line"><span class="string">&#x27;%x&#x27;</span> % <span class="number">10</span></span><br><span class="line">输出结果： <span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="string">&#x27;%f&#x27;</span> % <span class="number">27.545</span></span><br><span class="line">输出结果： <span class="string">&#x27;27.545000&#x27;</span></span><br><span class="line"><span class="string">&#x27;%e&#x27;</span> % <span class="number">27.545</span></span><br><span class="line">输出结果： <span class="string">&#x27;2.754500e+01&#x27;</span></span><br><span class="line"><span class="string">&#x27;%g&#x27;</span> % <span class="number">27.545</span></span><br><span class="line">输出结果： <span class="string">&#x27;27.545&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201112110307261.png" alt="image-20201112110307261"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;%5.1f&#x27;</span> % <span class="number">27.545</span></span><br><span class="line">输出结果： <span class="string">&#x27; 27.5&#x27;</span></span><br><span class="line"><span class="string">&#x27;%.2e&#x27;</span> % <span class="number">27.545</span></span><br><span class="line">输出结果： <span class="string">&#x27;2.75e+01&#x27;</span></span><br><span class="line"><span class="string">&#x27;%10d&#x27;</span> % <span class="number">5</span></span><br><span class="line">输出结果： <span class="string">&#x27;         5&#x27;</span></span><br><span class="line"><span class="string">&#x27;%-10d&#x27;</span> % <span class="number">5</span></span><br><span class="line">输出结果： <span class="string">&#x27;5         &#x27;</span></span><br><span class="line"><span class="string">&#x27;%+d&#x27;</span> % <span class="number">5</span></span><br><span class="line">输出结果： <span class="string">&#x27;+5&#x27;</span></span><br><span class="line"><span class="string">&#x27;%+d&#x27;</span> % <span class="number">-5</span></span><br><span class="line">输出结果： <span class="string">&#x27;-5&#x27;</span></span><br><span class="line"><span class="string">&#x27;%#o&#x27;</span> % <span class="number">8</span></span><br><span class="line">输出结果： <span class="string">&#x27;0o10&#x27;</span></span><br><span class="line"><span class="string">&#x27;%#x&#x27;</span> % <span class="number">108</span></span><br><span class="line">输出结果： <span class="string">&#x27;0x6c&#x27;</span></span><br><span class="line"><span class="string">&#x27;%#d&#x27;</span> % <span class="number">108</span></span><br><span class="line">输出结果： <span class="string">&#x27;108&#x27;</span></span><br><span class="line"><span class="string">&#x27;%010d&#x27;</span> % <span class="number">5</span></span><br><span class="line">输出结果： <span class="string">&#x27;0000000005&#x27;</span></span><br><span class="line"><span class="string">&#x27;%-010d&#x27;</span> % <span class="number">5</span></span><br><span class="line">输出结果： <span class="string">&#x27;5         &#x27;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201112111345627.png" alt="image-20201112111345627"></p><h3 id="4序列"><a href="#4序列" class="headerlink" title="4序列"></a>4序列</h3><ul><li>列表，元组和字符串的共同点<ul><li>都可以通过索引得到每一个元素</li><li>默认索引值总是从0开始</li><li>可以通过分片的方法得到一个范围内的元素的集合</li><li>有很多共同的操作符（重复操作符，拼接操作符，成员关系操作符）</li></ul></li></ul><h4 id="1序列的内置方法"><a href="#1序列的内置方法" class="headerlink" title="1序列的内置方法"></a>1序列的内置方法</h4><h5 id="将参数转化成列表的方法："><a href="#将参数转化成列表的方法：" class="headerlink" title="将参数转化成列表的方法："></a>将参数转化成列表的方法：</h5><ul><li>list 方法<ul><li>list()</li><li>list(iterable)    将元素转化成列表</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a= list()</span><br><span class="line">输出：a</span><br><span class="line">输出结果： []</span><br><span class="line"></span><br><span class="line">b= <span class="string">&#x27;i love you&#x27;</span></span><br><span class="line">b=list(b)</span><br><span class="line">输出：b</span><br><span class="line">输出结果：[<span class="string">&#x27;i&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;v&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;u&#x27;</span>]</span><br></pre></td></tr></table></figure><h5 id="将参数转化成元组的方法："><a href="#将参数转化成元组的方法：" class="headerlink" title="将参数转化成元组的方法："></a>将参数转化成元组的方法：</h5><ul><li>tuple 方法<ul><li>tuple() </li><li>tuple(iterable) </li></ul></li></ul><h5 id="将参数转化成字符串的方法："><a href="#将参数转化成字符串的方法：" class="headerlink" title="将参数转化成字符串的方法："></a>将参数转化成字符串的方法：</h5><ul><li>str 方法<ul><li>str(obj)</li></ul></li></ul><h5 id="返回参数长度的方法："><a href="#返回参数长度的方法：" class="headerlink" title="返回参数长度的方法："></a>返回参数长度的方法：</h5><ul><li>len()</li></ul><h5 id="返回序列或者参数集合中的最大值："><a href="#返回序列或者参数集合中的最大值：" class="headerlink" title="返回序列或者参数集合中的最大值："></a>返回序列或者参数集合中的最大值：</h5><ul><li>max()</li></ul><h5 id="返回序列或者参数集合中的最小值："><a href="#返回序列或者参数集合中的最小值：" class="headerlink" title="返回序列或者参数集合中的最小值："></a>返回序列或者参数集合中的最小值：</h5><ul><li>min()</li></ul><p>返回序列或者参数集合的总合：</p><ul><li>sum(iterable,num)<ul><li>第一个参数是元素</li><li>第二个参数是可以与结果陆续相加的元素</li></ul></li></ul><p>返回一个排序：</p><ul><li>sorted()   和list.sort() 的实现方式一致</li></ul><p>返回一个迭代器对象：</p><ul><li>reversed() </li><li>可以用list方式转化为列表：list(reversed(mix))</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">45</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">234</span>]</span><br><span class="line">list(reversed(mix))</span><br><span class="line">输出结果： [<span class="number">234</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">45</span>, <span class="number">2</span>, <span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>枚举：</p><ul><li>enumerate()</li><li>可以用list转化为列表：list(enumerate(mix))</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">45</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">234</span>]</span><br><span class="line">list(enumerate(mix))</span><br><span class="line">输出结果： [(<span class="number">0</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">2</span>), (<span class="number">2</span>, <span class="number">45</span>), (<span class="number">3</span>, <span class="number">6</span>), (<span class="number">4</span>, <span class="number">2</span>), (<span class="number">5</span>, <span class="number">234</span>)]</span><br></pre></td></tr></table></figure><p>打包，返回由各个参数序列所组成的元组：</p><ul><li>zip()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">45</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">234</span>]</span><br><span class="line">mix2=[<span class="number">45</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">4</span>]</span><br><span class="line">zip(mix,mix2)</span><br><span class="line">&lt;zip object at <span class="number">0x0000027067576B80</span>&gt;</span><br><span class="line">list(zip(mix,mix2))</span><br><span class="line">输出结果： [(<span class="number">1</span>, <span class="number">45</span>), (<span class="number">2</span>, <span class="number">6</span>), (<span class="number">45</span>, <span class="number">7</span>), (<span class="number">6</span>, <span class="number">4</span>)]</span><br></pre></td></tr></table></figure><h3 id="5函数"><a href="#5函数" class="headerlink" title="5函数"></a>5函数</h3><h4 id="1函数的创建和调用："><a href="#1函数的创建和调用：" class="headerlink" title="1函数的创建和调用："></a>1函数的创建和调用：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">函数定义：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">myFirstFunction</span>():</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line">函数调用：    </span><br><span class="line">myFirstFunction()</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>注意：其余用法与C语言一致，可以添加参数，可以返回值。</p><h4 id="2参数：形参和实参"><a href="#2参数：形参和实参" class="headerlink" title="2参数：形参和实参"></a>2参数：形参和实参</h4><p>def MyFunction（name）：</p><ul><li><p>函数定义过程中的name是叫做形参，因为他知识一个形式，表示占据一个参数位置</p></li><li><p>print(‘传递进来的’+name+’叫做实参，因为Ta是具体的参数值！’)</p></li></ul><h4 id="3函数文档："><a href="#3函数文档：" class="headerlink" title="3函数文档："></a>3函数文档：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MyFirstFunction</span>(<span class="params">name</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="string">&#x27;函数定义过程中的name是叫形参&#x27;</span></span><br><span class="line"><span class="meta">... </span>    <span class="comment">#因为他只是一个形式，表示占据一个参数位置</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;传递进来的&#x27;</span>+name+<span class="string">&#x27;叫做实参，因为Ta是具体的参数值&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">MyFirstFunction(<span class="string">&#x27;long Li&#x27;</span>)</span><br><span class="line">输出结果： 传递进来的long Li叫做实参，因为Ta是具体的参数值</span><br><span class="line">MyFirstFunction.__doc__</span><br><span class="line">输出结果： <span class="string">&#x27;函数定义过程中的name是叫形参&#x27;</span></span><br><span class="line">help(MyFirstFunction)</span><br><span class="line">输出：   Help on function MyFirstFunction <span class="keyword">in</span> module __main__:</span><br><span class="line">        MyFirstFunction(name)</span><br><span class="line">            函数定义过程中的name是叫形参</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4关键字参数"><a href="#4关键字参数" class="headerlink" title="4关键字参数"></a>4关键字参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">some</span>(<span class="params">name,age</span>):</span></span><br><span class="line"><span class="meta">... </span>    print(name+age)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">some(<span class="string">&#x27;long&#x27;</span>,<span class="string">&#x27;12&#x27;</span>)</span><br><span class="line">long12</span><br><span class="line">some(<span class="string">&#x27;12&#x27;</span>,<span class="string">&#x27;long&#x27;</span>)</span><br><span class="line"><span class="number">12l</span>ong</span><br><span class="line">some(age=<span class="string">&#x27;12&#x27;</span>,name=<span class="string">&#x27;long&#x27;</span>)</span><br><span class="line">long12</span><br></pre></td></tr></table></figure><h4 id="5默认参数"><a href="#5默认参数" class="headerlink" title="5默认参数"></a>5默认参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">some</span>(<span class="params">name=<span class="string">&#x27;long&#x27;</span>,age=<span class="string">&#x27;12&#x27;</span></span>):</span></span><br><span class="line"><span class="meta">... </span>    print(name+age)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">some()</span><br><span class="line">long12</span><br><span class="line">some(<span class="string">&#x27;longlong&#x27;</span>,<span class="string">&#x27;13&#x27;</span>)</span><br><span class="line">longlong13</span><br></pre></td></tr></table></figure><h4 id="6收集参数"><a href="#6收集参数" class="headerlink" title="6收集参数"></a>6收集参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test2</span>(<span class="params">*params</span>):</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;长度是：&#x27;</span>,len(params));</span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;第二个是；&#x27;</span>,params[<span class="number">1</span>]);</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">test2(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">        长度是： <span class="number">3</span></span><br><span class="line">        第二个是； <span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="7函数和过程"><a href="#7函数和过程" class="headerlink" title="7函数和过程"></a>7函数和过程</h4><p>python是没有过程的，所有的方法都是函数，即使没有参数也会返回none</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">temp = hello()</span><br><span class="line">hello world</span><br><span class="line">print(temp)</span><br><span class="line">    <span class="literal">None</span></span><br><span class="line">type(temp)</span><br><span class="line">    &lt;<span class="class"><span class="keyword">class</span> &#x27;<span class="title">NoneType</span>&#x27;&gt;</span></span><br></pre></td></tr></table></figure><h4 id="8返回值"><a href="#8返回值" class="headerlink" title="8返回值"></a>8返回值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">back</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">3.21</span>]</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">back()</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">3.21</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">back</span>():</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> <span class="number">1</span>,<span class="string">&#x27;23&#x27;</span>,<span class="number">2345</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line">back()</span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;23&#x27;</span>, <span class="number">2345</span>)</span><br></pre></td></tr></table></figure><h3 id="6内嵌函数和闭包"><a href="#6内嵌函数和闭包" class="headerlink" title="6内嵌函数和闭包"></a>6内嵌函数和闭包</h3><h4 id="1局部变量和全局变量"><a href="#1局部变量和全局变量" class="headerlink" title="1局部变量和全局变量"></a>1局部变量和全局变量</h4><ul><li>局部变量只能在相应的函数内进行访问</li><li>全局变量可以在任何地方进行访问</li><li>当一个函数想要对全局变量进行修改时，函数会自动创建一个与全局变量名字和值相同的局部变量进行修改。</li></ul><h5 id="注意：-1"><a href="#注意：-1" class="headerlink" title="注意："></a>注意：</h5><ul><li>如果想要修改真正的全局变量，则需要在变量名前边添加一个global关键字</li></ul><h3 id="2嵌套函数"><a href="#2嵌套函数" class="headerlink" title="2嵌套函数"></a>2嵌套函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span>():</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;fun1()正在被调用&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span>():</span></span><br><span class="line"><span class="meta">... </span>        print(<span class="string">&#x27;fun2正在被调用&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    fun2()</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">fun1()</span><br><span class="line">fun1()正在被调用</span><br><span class="line">fun2正在被调用</span><br></pre></td></tr></table></figure><h3 id="3闭包"><a href="#3闭包" class="headerlink" title="3闭包"></a>3闭包</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funx</span>(<span class="params">x</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">funy</span>(<span class="params">y</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> x*y</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> funy</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">i = funx(<span class="number">5</span>)</span><br><span class="line">i</span><br><span class="line">输出结果： &lt;function funx.&lt;locals&gt;.funy at <span class="number">0x0000027F711FF4C0</span>&gt;</span><br><span class="line">i(<span class="number">8</span>)</span><br><span class="line">输出结果： <span class="number">40</span></span><br><span class="line">funx(<span class="number">5</span>)(<span class="number">8</span>)</span><br><span class="line">输出结果： <span class="number">40</span></span><br></pre></td></tr></table></figure><ul><li>nonlocal关键字，可以表示该函数内的变量不是该函数的局部变量，而是外部的变量，用法类似于global</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span>():</span></span><br><span class="line"><span class="meta">... </span>    x = <span class="number">5</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span>():</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">nonlocal</span> x</span><br><span class="line"><span class="meta">... </span>        x *= x</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> x</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> fun2()</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">fun1()</span><br><span class="line">输出结果： <span class="number">25</span></span><br></pre></td></tr></table></figure><h3 id="4Lambda"><a href="#4Lambda" class="headerlink" title="4Lambda"></a>4Lambda</h3><h4 id="1-用法"><a href="#1-用法" class="headerlink" title="1.用法"></a>1.用法</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">funx</span>(<span class="params">x</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x*x</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">funx(<span class="number">5</span>)</span><br><span class="line"><span class="number">25</span></span><br><span class="line">g= <span class="keyword">lambda</span> x : x*x</span><br><span class="line">g(<span class="number">5</span>)</span><br><span class="line"><span class="number">25</span></span><br></pre></td></tr></table></figure><ul><li>多个参数用法相同</li></ul><h4 id="2-lambda表达式的作用"><a href="#2-lambda表达式的作用" class="headerlink" title="2.lambda表达式的作用"></a>2.lambda表达式的作用</h4><ul><li>python写一些执行脚本时，使用lambda就可以省下定义函数过程，比如说我们知识需要写个简单的脚本来管理服务器时间，我们就不需要专门定义一个函数然后再写调用，使用lambda就可以使得代码更加简洁。</li><li>对于一些比较抽象并且整个程序执行下来只需要调用一两次的函数，有时候给函数起个名字也是比较头疼的问题，使用lambda就不需要考虑命名问题了。</li><li>简化代码的可读性，由于普通的屌丝函数经常要跳到开头def定一部分，使用lambda函数可以省去这样的步骤。</li></ul><h3 id="5两个牛逼的BIF"><a href="#5两个牛逼的BIF" class="headerlink" title="5两个牛逼的BIF"></a>5两个牛逼的BIF</h3><h4 id="1-filter过滤器"><a href="#1-filter过滤器" class="headerlink" title="1.filter过滤器"></a>1.filter过滤器</h4><h5 id="1适用方法"><a href="#1适用方法" class="headerlink" title="1适用方法"></a>1适用方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">filter(<span class="literal">None</span>,[<span class="number">1</span>,<span class="number">0</span>,<span class="literal">False</span>,<span class="literal">True</span>])</span><br><span class="line">&lt;filter object at <span class="number">0x000002AB9A9422B0</span>&gt;</span><br><span class="line">list(filter(<span class="literal">None</span>,[<span class="number">1</span>,<span class="number">0</span>,<span class="literal">False</span>,<span class="literal">True</span>]))</span><br><span class="line">[<span class="number">1</span>, <span class="literal">True</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd</span>(<span class="params">x</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">return</span> x%<span class="number">2</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line">temp= range(<span class="number">10</span>)</span><br><span class="line">show = filter(odd,temp)</span><br><span class="line">list(show)</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><h5 id="2-特殊用法"><a href="#2-特殊用法" class="headerlink" title="2.特殊用法"></a>2.特殊用法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list(filter(<span class="keyword">lambda</span> x: x%<span class="number">2</span>,range(<span class="number">10</span>)))</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><h4 id="2-map"><a href="#2-map" class="headerlink" title="2.map"></a>2.map</h4><h5 id="1map的使用方法"><a href="#1map的使用方法" class="headerlink" title="1map的使用方法"></a>1map的使用方法</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list(map(<span class="keyword">lambda</span> x:x*<span class="number">2</span>,range(<span class="number">10</span>)))</span><br><span class="line">[<span class="number">0</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>]</span><br></pre></td></tr></table></figure><h3 id="6递归的使用"><a href="#6递归的使用" class="headerlink" title="6递归的使用"></a>6递归的使用</h3><h4 id="1递归的要素："><a href="#1递归的要素：" class="headerlink" title="1递归的要素："></a>1递归的要素：</h4><ul><li>调用了函数自身</li><li>返回了自身正确返回值</li></ul><h4 id="2递归的简单实现"><a href="#2递归的简单实现" class="headerlink" title="2递归的简单实现"></a>2递归的简单实现</h4><ul><li>一个函数的非递归版本：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factories</span>(<span class="params">n</span>):</span></span><br><span class="line">    result = n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):</span><br><span class="line">        result *= i</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">number = int(input(<span class="string">&#x27;请输入一个值：&#x27;</span>))</span><br><span class="line">result = factories(number)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><ul><li>一个函数的递归版本：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factories</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n*factories(n<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">number = int(input(<span class="string">&#x27;请输入一个值&#x27;</span>))</span><br><span class="line">result = factories(number)</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h4 id="3斐波那契数列的递归实现"><a href="#3斐波那契数列的递归实现" class="headerlink" title="3斐波那契数列的递归实现"></a>3斐波那契数列的递归实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fei</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n&lt;=<span class="number">0</span>:</span><br><span class="line">        print(<span class="string">&#x27;输入有误&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">elif</span> n==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> n==<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fei(n<span class="number">-1</span>)+fei(n<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line">number =fei(<span class="number">12</span>)</span><br><span class="line">print(number)</span><br></pre></td></tr></table></figure><h4 id="4汉诺塔"><a href="#4汉诺塔" class="headerlink" title="4汉诺塔"></a>4汉诺塔</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanoi</span>(<span class="params">n,x,y,z</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        print(x,<span class="string">&#x27; --&gt; &#x27;</span>,z)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n<span class="number">-1</span>,x,z,y)        <span class="comment">#将前n-1个盘子从x移动到y上</span></span><br><span class="line">        print(x,<span class="string">&#x27; --&gt; &#x27;</span>,z)      <span class="comment">#将最底下的最后一个盘子移动到z上</span></span><br><span class="line">        hanoi(n<span class="number">-1</span>,y,x,z)       <span class="comment">#将y上的n-1个盘子移动到z上</span></span><br><span class="line"></span><br><span class="line">n = int(input(<span class="string">&#x27;请输入几层汉诺塔：&#x27;</span>))</span><br><span class="line">hanoi(n,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="7字典"><a href="#7字典" class="headerlink" title="7字典"></a>7字典</h3><h4 id="1创造和访问字典"><a href="#1创造和访问字典" class="headerlink" title="1创造和访问字典"></a>1创造和访问字典</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">dic1=&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>,<span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line">print(<span class="string">&#x27;1的对应值为:&#x27;</span>,dic1[<span class="number">1</span>])</span><br><span class="line">输出结果： <span class="number">1</span>的对应值为: a</span><br><span class="line">    其他的创建方法：</span><br><span class="line">dic2=dict(((<span class="number">1</span>,<span class="string">&#x27;a&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;b&#x27;</span>)))</span><br><span class="line">dic2</span><br><span class="line">输出结果： &#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">dic3=dict(a=<span class="string">&#x27;a&#x27;</span>,b=<span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">dic3</span><br><span class="line">输出结果： &#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">字典数值的修改：</span><br><span class="line">dic3[<span class="string">&#x27;a&#x27;</span>]=<span class="string">&#x27;b&#x27;</span></span><br><span class="line">dic3</span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line">dic3[<span class="string">&#x27;c&#x27;</span>]=<span class="string">&#x27;c&#x27;</span></span><br><span class="line">dic3</span><br><span class="line">&#123;<span class="string">&#x27;a&#x27;</span>: <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;b&#x27;</span>: <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>: <span class="string">&#x27;c&#x27;</span>&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>标志性的东西是大括号</li></ul><p>注意：在修改字典内容的时候，如果字典能够找到对应的值，则直接修改，如果找不到，则会创建一个新的键值对。</p><h4 id="2使用fromkeys方法批量创建"><a href="#2使用fromkeys方法批量创建" class="headerlink" title="2使用fromkeys方法批量创建"></a>2使用fromkeys方法批量创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dict.fromkeys(range(<span class="number">10</span>),<span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">&#123;<span class="number">0</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">1</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">3</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">5</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">6</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">7</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">8</span>: <span class="string">&#x27;赞&#x27;</span>, <span class="number">9</span>: <span class="string">&#x27;赞&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>keys（），values（），items（）的使用方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">dict1=dict.fromkeys(range(<span class="number">10</span>),<span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> eachkey <span class="keyword">in</span> dict1.keys():</span><br><span class="line"><span class="meta">... </span>    print(eachkey)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="keyword">for</span> eachkey <span class="keyword">in</span> dict1.values():</span><br><span class="line"><span class="meta">... </span>    print(eachkey)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line">赞</span><br><span class="line"><span class="keyword">for</span> eachkey <span class="keyword">in</span> dict1.items():</span><br><span class="line"><span class="meta">... </span>    print(eachkey)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">(<span class="number">0</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">1</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">2</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">3</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">5</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">6</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">7</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">8</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br><span class="line">(<span class="number">9</span>, <span class="string">&#x27;赞&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>get（）方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dict1.get(<span class="number">10</span>)</span><br><span class="line">print(dict1.get(<span class="number">10</span>))</span><br><span class="line"><span class="literal">None</span></span><br><span class="line">dict1.get(<span class="number">10</span>,<span class="string">&#x27;qwer&#x27;</span>)<span class="comment">#此方法并不会将该键值对添加进dict1中</span></span><br><span class="line"><span class="string">&#x27;qwer&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>建议使用 in 关键字判断建是否在字典中</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span> <span class="keyword">in</span> dict1</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="number">9</span> <span class="keyword">in</span> dict1</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>使用clear（） 方法清除字典</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dict1.clear()</span><br><span class="line">dict1</span><br><span class="line">输出结果： &#123;&#125;</span><br></pre></td></tr></table></figure><ul><li>copy（） 浅拷贝</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">a= &#123;<span class="number">1</span>:<span class="string">&#x27;a&#x27;</span>,<span class="number">2</span>:<span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line">b=a.copy()</span><br><span class="line">c=a</span><br><span class="line">c</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line">b</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br><span class="line">id(a)</span><br><span class="line"><span class="number">2098004586304</span></span><br><span class="line">id(b)</span><br><span class="line"><span class="number">2098006992064</span></span><br><span class="line">id(c)</span><br><span class="line"><span class="number">2098004586304</span></span><br><span class="line"></span><br><span class="line">c[<span class="number">4</span>]=<span class="string">&#x27;four&#x27;</span></span><br><span class="line">c</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;four&#x27;</span>&#125;</span><br><span class="line">a</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;four&#x27;</span>&#125;</span><br><span class="line">b</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">2</span>: <span class="string">&#x27;b&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>pop（），popitem（） 方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a.pop(<span class="number">2</span>)</span><br><span class="line"><span class="string">&#x27;b&#x27;</span></span><br><span class="line">a</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="number">4</span>: <span class="string">&#x27;four&#x27;</span>&#125;</span><br><span class="line">a.popitem()        <span class="comment">#注意，这里是随机弹出一个数据，因为字典里边是没有顺序的</span></span><br><span class="line">(<span class="number">4</span>, <span class="string">&#x27;four&#x27;</span>)</span><br><span class="line">a</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>setdefault（）方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a.setdefault(<span class="string">&#x27;xiao&#x27;</span>)</span><br><span class="line">a</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;xiao&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">a.setdefault(<span class="string">&#x27;long&#x27;</span>,<span class="string">&#x27;li&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;li&#x27;</span></span><br><span class="line">a</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;xiao&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;long&#x27;</span>: <span class="string">&#x27;li&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>update（）利用一个字典或映射对另一个字典进行修改</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b=&#123;<span class="string">&#x27;xiaobai&#x27;</span>:<span class="string">&#x27;gou&#x27;</span>&#125;</span><br><span class="line">a.update(b)</span><br><span class="line">a</span><br><span class="line">&#123;<span class="number">1</span>: <span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;xiao&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;long&#x27;</span>: <span class="string">&#x27;li&#x27;</span>, <span class="string">&#x27;xiaobai&#x27;</span>: <span class="string">&#x27;gou&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="8集合（唯一）"><a href="#8集合（唯一）" class="headerlink" title="8集合（唯一）"></a>8集合（唯一）</h3><ul><li>集合中所有的元素都是唯一的，集合会自动将不唯一的数字删除</li><li>集合时无序的，所以不支持索引</li></ul><h4 id="1创建方式"><a href="#1创建方式" class="headerlink" title="1创建方式"></a>1创建方式</h4><ul><li>一种是直接把一堆元素用花括号括起来</li><li>一种是使用set（）工厂函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">set1=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">2</span>&#125;</span><br><span class="line">set1</span><br><span class="line">输出结果： &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">set2=set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>])</span><br><span class="line">set2</span><br><span class="line">输出结果： &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">34</span>, <span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="2如何访问集合中的值"><a href="#2如何访问集合中的值" class="headerlink" title="2如何访问集合中的值"></a>2如何访问集合中的值</h4><ul><li>可以使用for把集合中的数据一个个读取出来</li><li>可以通过in和not in判断一个元素是否在集合中已经存在</li></ul><h4 id="3添加移出集合中的值"><a href="#3添加移出集合中的值" class="headerlink" title="3添加移出集合中的值"></a>3添加移出集合中的值</h4><ul><li>add（）方法添加数据</li><li>remove（） 方法移出数据</li></ul><h4 id="4不可变集合"><a href="#4不可变集合" class="headerlink" title="4不可变集合"></a>4不可变集合</h4><ul><li>frozen：冰冻的，冻结的</li><li>定义不可变集合：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">不可变集合定义方式： </span><br><span class="line">num2=frozenset([<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line">试图添加：</span><br><span class="line">num2.add(<span class="number">6</span>)</span><br><span class="line">以下为出错信息：</span><br><span class="line"> <span class="comment">#Traceback (most recent call last):</span></span><br><span class="line"> <span class="comment"># File &quot;&lt;input&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"> <span class="comment">#AttributeError: &#x27;frozenset&#x27; object has no attribute &#x27;add&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="9文件"><a href="#9文件" class="headerlink" title="9文件"></a>9文件</h3><h4 id="1文件打开方式"><a href="#1文件打开方式" class="headerlink" title="1文件打开方式"></a>1文件打开方式</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201115211636958.png" alt="image-20201115211636958"></p><h4 id="2文件的操作方法"><a href="#2文件的操作方法" class="headerlink" title="2文件的操作方法"></a>2文件的操作方法</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201115212123615.png" alt="image-20201115212123615"></p><ul><li>可以直接用for方法对文件进行输出。</li></ul><h3 id="10模块"><a href="#10模块" class="headerlink" title="10模块"></a>10模块</h3><ul><li>模块是一个包含所有你定义的函数和变量的文件，其后缀名是 .py 。模块合一被别的程序引入，已使用该模块中的函数等功能。</li></ul><h4 id="1OS模块"><a href="#1OS模块" class="headerlink" title="1OS模块"></a>1OS模块</h4><ul><li>有了OS模块，我们不需要关心操作系统下使用什么模块，OS模块会帮你选择正确的模块并调用。</li></ul><h5 id="1-OS模块中关于文件-目录常用的函数使用方法"><a href="#1-OS模块中关于文件-目录常用的函数使用方法" class="headerlink" title="1.OS模块中关于文件/目录常用的函数使用方法"></a>1.OS模块中关于文件/目录常用的函数使用方法</h5><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201115214726215.png" alt="image-20201115214726215"></p><ul><li>mkdir不能创建嵌套目录</li><li>如果removedirs/remove0删除的目录中有文件则无法删除，必须先删除文件，再删除目录</li></ul><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201115215128012.png" alt="image-20201115215128012"></p><h5 id="2-OS-path模块中关于路径常用的函数使用方法"><a href="#2-OS-path模块中关于路径常用的函数使用方法" class="headerlink" title="2.OS.path模块中关于路径常用的函数使用方法"></a>2.OS.path模块中关于路径常用的函数使用方法</h5><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201115215351520.png" alt="image-20201115215351520"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201115215836837.png" alt="image-20201115215836837"></p><h3 id="11pickle模块"><a href="#11pickle模块" class="headerlink" title="11pickle模块"></a>11pickle模块</h3><ul><li>pickle提供了一个简单的持久化功能。可以将对象以文件的形式存放在磁盘上。</li><li>pickle模块只能在python中使用，python中几乎所有的数据类型（列表，字典，集合，类等）都可以用pickle来序列化，</li><li>pickle序列化后的数据，可读性差，人一般无法识别。</li></ul><p>pickle.dump(obj, file[, protocol])</p><ul><li>序列化对象，并将结果数据流写入到文件对象中。参数protocol是序列化模式，默认值为0，表示以文本的形式序列化。protocol的值还可以是1或2，表示以二进制的形式序列化。</li></ul><p>pickle.load(file)</p><ul><li>反序列化对象。将文件中的数据解析为一个Python对象。</li></ul><h3 id="12Exception"><a href="#12Exception" class="headerlink" title="12Exception"></a>12Exception</h3><h4 id="1-Python标准异常总结"><a href="#1-Python标准异常总结" class="headerlink" title="1.Python标准异常总结"></a>1.Python标准异常总结</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116104855651.png" alt="image-20201116104855651"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116104917549.png" alt="image-20201116104917549"></p><h4 id="2-异常处理语句"><a href="#2-异常处理语句" class="headerlink" title="2.异常处理语句"></a>2.异常处理语句</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>：</span><br><span class="line">监测范围</span><br><span class="line">exception Exception[<span class="keyword">as</span> reason]:</span><br><span class="line">    出现异常（Exception）后的处理代码</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    无论如何都会执行的代码</span><br><span class="line">    </span><br><span class="line"><span class="keyword">raise</span> 错误名</span><br><span class="line"><span class="comment">#用于自动引出异常</span></span><br></pre></td></tr></table></figure><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    sum=<span class="number">1</span>+<span class="string">&#x27;1&#x27;</span></span><br><span class="line">    f= open(<span class="string">&#x27;我是一个没有的文件.txt&#x27;</span>)</span><br><span class="line">    print(f.read())</span><br><span class="line">    f.close()</span><br><span class="line">    <span class="comment">#第一种方式</span></span><br><span class="line"><span class="comment"># except OSError as reason:</span></span><br><span class="line"><span class="comment">#     print(&#x27;文件出错了T-T:\n&#x27;+str(reason))</span></span><br><span class="line"><span class="comment"># except TypeError as reason:</span></span><br><span class="line"><span class="comment">#     print(&#x27;类型出错了T-T:\n&#x27; + str(reason))</span></span><br><span class="line">    <span class="comment">#第二种方式</span></span><br><span class="line"><span class="comment"># except:</span></span><br><span class="line"><span class="comment">#     print(&#x27;出错了&#x27;)</span></span><br><span class="line">    <span class="comment">#第三种方式</span></span><br><span class="line"><span class="keyword">except</span> (OSError,TypeError):</span><br><span class="line">    print(<span class="string">&#x27;出错了&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="13丰富的else语句和简介的with语句"><a href="#13丰富的else语句和简介的with语句" class="headerlink" title="13丰富的else语句和简介的with语句"></a>13丰富的else语句和简介的with语句</h3><p>案例一：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showx</span>(<span class="params">num</span>):</span></span><br><span class="line">    count = num //<span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> count&gt;<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">if</span> num %count==<span class="number">0</span>:</span><br><span class="line">            print(<span class="string">&#x27;%d是最大公因数&#x27;</span> % count)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        count -=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&#x27;%d是素数&#x27;</span> % num)</span><br><span class="line">num= int(input(<span class="string">&#x27;请输入一个数：&#x27;</span>))</span><br><span class="line">showx(num)</span><br></pre></td></tr></table></figure><p>案例二：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    int(<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> ValueError <span class="keyword">as</span> reason:</span><br><span class="line">    print(<span class="string">&#x27;出错了&#x27;</span> + str(reason))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;没有任何异常&#x27;</span>)</span><br></pre></td></tr></table></figure><p>with语句案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">&#x27;data.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> each_file <span class="keyword">in</span> f:</span><br><span class="line">            print(each_file)</span><br><span class="line"><span class="keyword">except</span> OSError <span class="keyword">as</span> reason:</span><br><span class="line">    print(<span class="string">&#x27;出错了&#x27;</span>+str(reason))</span><br></pre></td></tr></table></figure><h3 id="14图形用户界面入门：EasyGui"><a href="#14图形用户界面入门：EasyGui" class="headerlink" title="14图形用户界面入门：EasyGui"></a>14图形用户界面入门：EasyGui</h3><h4 id="1-安装easyGui"><a href="#1-安装easyGui" class="headerlink" title="1.安装easyGui"></a><strong>1.安装easyGui</strong></h4><p>打开cmd<br>改变目录到easygui解压的文件夹<br>在cmd中输入<br><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131163418568" alt="这里写图片描述"><br>注：前面的D：\python34\python.exe是python安装的文件夹</p><h4 id="2-导入easygui"><a href="#2-导入easygui" class="headerlink" title="2.导入easygui"></a><strong>2.导入easygui</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方法<span class="number">1</span>：<span class="keyword">import</span> easygui</span><br><span class="line">easygui.msgbox(<span class="string">&#x27;嗨，美女&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131163833828" alt="这里写图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">方法2：</span><br><span class="line">from easygui import *</span><br><span class="line">msgbox(&#39;啦啦啦&#39;)123</span><br><span class="line">推荐方法3：</span><br><span class="line">import easygui as g</span><br><span class="line">g.msgbox(&#39;啦啦啦&#39;)123</span><br></pre></td></tr></table></figure><h4 id="3-使用easygui"><a href="#3-使用easygui" class="headerlink" title="3.使用easygui"></a><strong>3.使用easygui</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> easygui <span class="keyword">as</span> g</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        g.msgbox(<span class="string">&quot;嗨，欢迎进入第一个界面小游戏^_^&quot;</span>)</span><br><span class="line"></span><br><span class="line">        msg =<span class="string">&quot;请问你希望在鱼C工作室学习到什么知识呢？&quot;</span></span><br><span class="line">        title = <span class="string">&quot;小游戏互动&quot;</span></span><br><span class="line">        choices = [<span class="string">&quot;谈恋爱&quot;</span>, <span class="string">&quot;编程&quot;</span>,  <span class="string">&quot;琴棋书画&quot;</span>]</span><br><span class="line"></span><br><span class="line">        choice = g.choicebox(msg, title, choices)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># note that we convert choice to string, in case</span></span><br><span class="line">        <span class="comment"># the user cancelled the choice, and we got None.</span></span><br><span class="line">        g.msgbox(<span class="string">&quot;你的选择是: &quot;</span> + str(choice), <span class="string">&quot;结果&quot;</span>)</span><br><span class="line"></span><br><span class="line">        msg = <span class="string">&quot;你希望重新开始小游戏吗？&quot;</span></span><br><span class="line">        title = <span class="string">&quot;请选择&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> g.ccbox(msg, title):     <span class="comment"># show a Continue/Cancel dialog</span></span><br><span class="line">                <span class="keyword">pass</span>  <span class="comment"># user chose Continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                sys.exit(<span class="number">0</span>)     <span class="comment"># user chose Cance</span></span><br></pre></td></tr></table></figure><p>1）msgbox()<br>显示一个消息和提供一个ok按钮，你可以制定任何的消息和标题，甚至可以重写OK<br>按钮内容<br>msgbox（‘内容’，‘标题’，‘按钮内容’）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import easygui as g #下同</span><br><span class="line">g.msgbox()12</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131171633268" alt="这里写图片描述"></p><p>2）ccbox()<br>提供一个选择：continue或者cancle<br>格式：ccbox（‘内容’，‘标题’，choice=（continue，cancle））</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.ccbox(&#39;请选择&#39;,&#39;哈喽&#39;,(&#39;yes&#39;,&#39;no&#39;))1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131171441941" alt="这里写图片描述"><br>3）buttonbox()<br>可以定义一组按钮，buttonbox（）会显示一组你定义好的按钮<br>格式：buttonbox（msg，title，choice=(choice1,choice2,…),image,）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.buttonbox(&#39;请选择&#39;,&#39;哈喽&#39;,(1,2,3))1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131171244371" alt="这里写图片描述"><br>4)multchoicebox()<br>提供一个可选择的列表，可以支持用户选择0，1或者同时选择多个选项<br>格式：multichoicebox(‘msg’,title,choice)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.multchoicebox(&#39;名字如下&#39;,&#39;哈喽&#39;,(&#39;张三&#39;,&#39;李四&#39;,&#39;王五&#39;,&#39;张飞&#39;))1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131171045065" alt="这里写图片描述"><br>5）enterbox()<br>格式：enterbox(msg,title,default,strip,image,root)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import easygui as g</span><br><span class="line">g.enterbox(&#39;请输入一句话&#39;,&#39;哈喽&#39;)12</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131170603652" alt="这里写图片描述"><br>6）integerbox（）<br>为用户提供一个简单的输入框，用户只能输入范围内的整数型<br>integerbox（msg,title,lowerbound,upperbound）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.integerbox(&#39;猜0-10之间数字&#39;,&#39;哈喽&#39;,0,10)1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131172008878" alt="这里写图片描述"></p><p>7)multenterbox()<br>为用户提供多个简单的输入框<br>格式：multenterbox(msg,title,fields,value)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.multenterbox(&#39;请输入必填几项&#39;,&#39;账号注册&#39;,(&#39;姓名&#39;,&#39;手机号&#39;,&#39;住址&#39;))1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131172502815" alt="这里写图片描述"></p><p>8)passwordbox()<br>和enterbox差不多，但是passwordbox是通过*表示，输入密码是方便<br>格式：passwordbox（msg,title,）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.passwordbox(&#39;请输入密码&#39;,&#39;密码&#39;)1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131172736685" alt="这里写图片描述"></p><p>9)multpasswordbox()<br>和multenterbox差不多，最后一个输入框显示为密码形式<br>格式：（msg，title，fields，value）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.multpasswordbox(&#39;请输入用户名和密码：&#39;,&#39;登录&#39;,(&#39;用户名&#39;,&#39;密码&#39;))1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131173112048" alt="这里写图片描述"></p><p>10）textbox()<br>格式：textbox（msg，title，text）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.textbox(&#39;文件内容如下&#39;，‘显示文件内容’，‘这是个啥’)1</span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20180131173414675" alt="这里写图片描述"></p><h3 id="15面向对象（OO：Object-Oriented）"><a href="#15面向对象（OO：Object-Oriented）" class="headerlink" title="15面向对象（OO：Object Oriented）"></a>15面向对象（OO：Object Oriented）</h3><p><strong>对象=属性+方法</strong></p><p>面向对象的特征：封装，继承，多态</p><p>封装案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">First</span>:</span>  <span class="comment">#python中类名约定大写字母开头</span></span><br><span class="line">    <span class="comment">#类属性</span></span><br><span class="line">    color = <span class="string">&#x27;green&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#类方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;hahaha&#x27;</span>)</span><br><span class="line">first=First()</span><br><span class="line">first.add()</span><br></pre></td></tr></table></figure><p>继承案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lists</span>(<span class="params">list</span>):</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">first= Lists()</span><br><span class="line">first.append(<span class="number">1</span>)</span><br><span class="line">print(first)</span><br></pre></td></tr></table></figure><h4 id="1self是什么东西"><a href="#1self是什么东西" class="headerlink" title="1self是什么东西"></a>1self是什么东西</h4><ul><li><p>__init__(self)</p></li><li><p>相当于this指针</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ball</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name</span>):</span></span><br><span class="line">        self.name=name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">prin</span>(<span class="params">self</span>):</span></span><br><span class="line">        print(<span class="string">&#x27;我叫&#x27;</span>+self.name)</span><br><span class="line"></span><br><span class="line">ball=Ball(<span class="string">&#x27;guoxiulong&#x27;</span>)</span><br><span class="line">ball.prin()</span><br></pre></td></tr></table></figure><ul><li>在python中定义私有变量只需要在变量名前加上“__”两个下划线几可以了，name这个函数或者变量就会变为私有。</li><li>在python中，类中变量的私有是伪私有，（比如：类中定义 __name  变量 ，在函数外是无法通过name和__name访问的，但是可以通过 对象名._类名__name 进行访问。</li></ul><h3 id="16继承"><a href="#16继承" class="headerlink" title="16继承"></a>16继承</h3><p>注意：</p><ul><li>如果子类定义与父类相同的属性和方法，那么会自动覆盖父类中的属性和方法。</li></ul><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116184911879.png" alt="image-20201116184911879"></p><p>为使得父类的方法不被覆盖：</p><ul><li>调用未绑定的父类方法</li><li>使用super函数：使用方法   super().父类的方法名()</li></ul><p>python也可以多重继承。</p><h3 id="17拾遗"><a href="#17拾遗" class="headerlink" title="17拾遗"></a>17拾遗</h3><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116190252167.png" alt="image-20201116190252167"></p><h4 id="1类，类对象，实例对象"><a href="#1类，类对象，实例对象" class="headerlink" title="1类，类对象，实例对象"></a>1类，类对象，实例对象</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116190712172.png" alt="image-20201116190712172"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116190844551.png" alt="image-20201116190844551"></p><ul><li>不要试图在一个类里边定义出所有的能想到的特性和方法，应该利用继承和组合机制来进行拓展。</li><li>用不同的词性命名，如属性名，方法名用动词。</li></ul><h4 id="2什么是绑定"><a href="#2什么是绑定" class="headerlink" title="2什么是绑定?"></a>2什么是绑定?</h4><ul><li>Python严格要求方法需要有实例才能被调用，这种限制其实就是python所谓的绑定概念。</li></ul><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116191624337.png" alt="image-20201116191624337"></p><h3 id="18一些相关的BIF"><a href="#18一些相关的BIF" class="headerlink" title="18一些相关的BIF"></a>18一些相关的BIF</h3><h4 id="1、issubclass（class，classinfo）"><a href="#1、issubclass（class，classinfo）" class="headerlink" title="1、issubclass（class，classinfo）"></a>1、issubclass（class，classinfo）</h4><p>1.一个类被认为是其自身的子类</p><p>2.classinfo可以使类对象组成的元组，只要class与其中任何一个候选类的子类，则返回True。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>(<span class="params">A</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line">issubclass(A,B)</span><br><span class="line"><span class="literal">False</span></span><br><span class="line">issubclass(B,A)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">issubclass(B,B)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">issubclass(B,object)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="2、isinstance（object，classinfo）"><a href="#2、isinstance（object，classinfo）" class="headerlink" title="2、isinstance（object，classinfo）"></a>2、isinstance（object，classinfo）</h4><p>1.如果第一个参数不是对象，则永远返回false</p><p>2.如果第二个参数不是由类或者是由类对象组成的元素，则会抛出一个TypeError异常</p><p>3.第二个参数如果传入的是由类对象组成的元组，则如果第一个参数中的对象是第二个参数元组中的任意一个元素的对象，则就会返回True，如果全部都不满足，才会返回false</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>(<span class="params">A</span>):</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span></span><br><span class="line">a= A()</span><br><span class="line">b=B()</span><br><span class="line">isinstance(b,A)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">isinstance(b,B)</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">isinstance(a,(A,B))</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="3、hasattr（object，name）"><a href="#3、hasattr（object，name）" class="headerlink" title="3、hasattr（object，name）"></a>3、hasattr（object，name）</h4><ul><li>注意，第二个参数中的变量必须要由单引号包含起来，要不然会有NameError异常 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,x=<span class="number">0</span></span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=x</span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line">c=C()</span><br><span class="line">hasattr(c,<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><h4 id="4、getattr（object，name-default"><a href="#4、getattr（object，name-default" class="headerlink" title="4、getattr（object，name[, default])"></a>4、getattr（object，name[, default])</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,x=<span class="number">0</span></span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=x</span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line">c=C()</span><br><span class="line">getattr(c,<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="number">0</span></span><br><span class="line">getattr(c,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;值不存在&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;值不存在&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5、setattr（object，name，value）"><a href="#5、setattr（object，name，value）" class="headerlink" title="5、setattr（object，name，value）"></a>5、setattr（object，name，value）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,x=<span class="number">0</span></span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=x</span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line">c=C()</span><br><span class="line">setattr(c,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;我是新建的&#x27;</span>)</span><br><span class="line">getattr(c,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;y不存在&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;我是新建的&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="6、delattr（object，name）"><a href="#6、delattr（object，name）" class="headerlink" title="6、delattr（object，name）"></a>6、delattr（object，name）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,x=<span class="number">0</span></span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=x</span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line">c=C()</span><br><span class="line">setattr(c,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;我是新建的&#x27;</span>)</span><br><span class="line">delattr(c,<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">getattr(c,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;y不存在&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;y不存在&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="7、property（fget-None，fset-None，fdel-None，doc-None）"><a href="#7、property（fget-None，fset-None，fdel-None，doc-None）" class="headerlink" title="7、property（fget=None，fset=None，fdel=None，doc=None）"></a>7、property（fget=None，fset=None，fdel=None，doc=None）</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116194703938.png" alt="image-20201116194703938"></p><h3 id="19构造和析构"><a href="#19构造和析构" class="headerlink" title="19构造和析构"></a>19构造和析构</h3><ul><li><p>魔法方法总是被双下划线所包围，例如__init__</p></li><li><p>魔法方法是面向对象python的一切，如果你不知道魔法方法，说明你还没有意识到面向对象python的强大</p></li><li><p>魔法方法的’魔力‘体现在他们总是能够在最适合的时候被调用</p></li></ul><h4 id="1、-init-self-…"><a href="#1、-init-self-…" class="headerlink" title="1、__init__(self[,….])"></a>1、__init__(self[,….])</h4><p>用法类似于构造方法。</p><h4 id="2、-new-cls-…"><a href="#2、-new-cls-…" class="headerlink" title="2、__new(cls[,…])__"></a>2、__new(cls[,…])__</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116200019085.png" alt="image-20201116200019085"></p><h4 id="3、-del-self"><a href="#3、-del-self" class="headerlink" title="3、__del(self)__"></a>3、__del(self)__</h4><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116200322838.png" alt="image-20201116200322838"></p><h3 id="20魔法方法"><a href="#20魔法方法" class="headerlink" title="20魔法方法"></a>20魔法方法</h3><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116201108901.png" alt="image-20201116201108901"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116201129270.png" alt="image-20201116201129270"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116202153136.png" alt="image-20201116202153136"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116202241532.png" alt="image-20201116202241532"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201116202354071.png" alt="image-20201116202354071"></p><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201118162848358.png" alt="image-20201118162848358"></p><h3 id="21属性访问"><a href="#21属性访问" class="headerlink" title="21属性访问"></a>21属性访问</h3><h4 id="1-属性访问的几种基本方法"><a href="#1-属性访问的几种基本方法" class="headerlink" title="1.属性访问的几种基本方法"></a>1.属性访问的几种基本方法</h4><ul><li>直接进行访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=<span class="string">&#x27;hahaha&#x27;</span></span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">c=C()</span><br><span class="line">c.x</span><br><span class="line"><span class="string">&#x27;hahaha&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>使用魔法方法进行访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=<span class="string">&#x27;hahaha&#x27;</span></span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line">c=C()</span><br><span class="line">getattr(c,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;这个属性不在呦&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;hahaha&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>使用property进行访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=<span class="string">&#x27;hahaha&#x27;</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">setx</span>(<span class="params">self,x</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.x=x</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">getx</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> self.x</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">delx</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">del</span> self.x</span><br><span class="line"><span class="meta">... </span>    a=property(getx,setx,delx)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">c=C()</span><br><span class="line">c.a=<span class="string">&#x27;1&#x27;</span></span><br><span class="line">c.a</span><br><span class="line"><span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="2-属性访问的方法"><a href="#2-属性访问的方法" class="headerlink" title="2.属性访问的方法"></a>2.属性访问的方法</h4><ul><li>__getattr__(self,name)<ul><li>定义当前用户试图获得一个不存在的属性时的行为</li></ul></li><li>__getattribute__(self,name)<ul><li>定义当该类的属性被访问时的行为</li></ul></li><li>__setattr__(self,name,value)<ul><li>定义当一个属性被设置时的行为</li></ul></li><li>__delattr__(self,name)<ul><li>定义当一个属性被删除时的行为</li></ul></li></ul><p>注意：在使用过程中不要让程序进入无线递归</p><h3 id="22描述符"><a href="#22描述符" class="headerlink" title="22描述符"></a>22描述符</h3><h4 id="1-定义："><a href="#1-定义：" class="headerlink" title="1.定义："></a>1.定义：</h4><ul><li><p>描述符就是将某种特殊类型的类的实例指派给另一个类的属性。</p></li><li><p>__get__(self,instance,owner)</p><ul><li>用于访问属性，他返回属性的值</li></ul></li><li><p>__set__(self,instance,owner)</p><ul><li>将在属性分配操作中调用，不返回任何内容</li></ul></li><li><p>__delete__(self,instance)</p><ul><li>控制删除操作，不返回任何内容</li></ul></li></ul><p>测试案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProperty</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,fget=None,fset=None,fdel=None</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.fget=fget</span><br><span class="line"><span class="meta">... </span>        self.fset=fset</span><br><span class="line"><span class="meta">... </span>        self.fdel=fdel</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__get__</span>(<span class="params">self,instance,owner</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> self.fget(instance)</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__set__</span>(<span class="params">self,instance,value</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.fset(instance,value)</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__delete__</span>(<span class="params">self,instance</span>):</span></span><br><span class="line"><span class="meta">... </span>        self.fdel(instance)</span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self._x=<span class="literal">None</span></span><br><span class="line"><span class="meta">... </span>        </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        self._x=<span class="literal">None</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">getx</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">return</span> self._x</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">setx</span>(<span class="params">self,value</span>):</span></span><br><span class="line"><span class="meta">... </span>        self._x=value</span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">delx</span>(<span class="params">self</span>):</span></span><br><span class="line"><span class="meta">... </span>        <span class="keyword">del</span> self._x</span><br><span class="line"><span class="meta">... </span>    a=MyProperty(getx,setx,delx)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">test=Test()</span><br><span class="line">test.a</span><br><span class="line">test.a=<span class="string">&#x27;hahaha&#x27;</span></span><br><span class="line">test.a</span><br><span class="line"><span class="string">&#x27;hahaha&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="23定制序列"><a href="#23定制序列" class="headerlink" title="23定制序列"></a>23定制序列</h3><h4 id="1-什么是协议？"><a href="#1-什么是协议？" class="headerlink" title="1.什么是协议？"></a>1.什么是协议？</h4><ul><li>协议（protocols）与其它编程语言中的接口很相似，他规定你哪些方法必须要定义。然而，在Python中的协议就显得不那么正式。事实上，在python中，协议更像是一种指南。</li></ul><h4 id="2-容器类型的协议"><a href="#2-容器类型的协议" class="headerlink" title="2.容器类型的协议"></a>2.容器类型的协议</h4><ul><li>如果说你希望定制的容器是不可变得话，你只需要定义__len__()和__getitem__()方法。</li><li>如果你希望定制的容器是可变的话，除了__len__()和__getitem__()方法，你还需要定义__setitem__()和__delitem__()两个方法。</li></ul><h4 id="3-序列定制案例"><a href="#3-序列定制案例" class="headerlink" title="3.序列定制案例"></a>3.序列定制案例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class CountList:</span><br><span class="line">...     def __init__(self,*args):</span><br><span class="line">...         self.values&#x3D;[x for x in args]</span><br><span class="line">...         self.count&#x3D;&#123;&#125;.fromkeys(range(len(self.values)),0)</span><br><span class="line">...     def __len__(self):</span><br><span class="line">...         return len(self.values)</span><br><span class="line">...     def __getitem__(self,key):</span><br><span class="line">...         self.count[key]+&#x3D;1</span><br><span class="line">...         return self.values[key]</span><br><span class="line">...     </span><br><span class="line">c1&#x3D;CountList(1,3,5,7)</span><br><span class="line">... </span><br><span class="line">c2&#x3D;CountList(2,4,6,8)</span><br><span class="line">... </span><br><span class="line">c1[1]</span><br><span class="line">3</span><br><span class="line">c2[1]</span><br><span class="line">4</span><br><span class="line">c1.count</span><br><span class="line">&#123;0: 0, 1: 1, 2: 0, 3: 0&#125;</span><br></pre></td></tr></table></figure><h3 id="24迭代器"><a href="#24迭代器" class="headerlink" title="24迭代器"></a>24迭代器</h3><h4 id="1-两个迭代函数"><a href="#1-两个迭代函数" class="headerlink" title="1.两个迭代函数"></a>1.两个迭代函数</h4><ul><li><p>iter()：__iter__</p></li><li><p>next():__next__</p></li></ul><p>案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&#x27;12345&#x27;</span></span><br><span class="line">s=iter(str)</span><br><span class="line">next(s)</span><br><span class="line"><span class="string">&#x27;1&#x27;</span></span><br><span class="line">next(s)</span><br><span class="line"><span class="string">&#x27;2&#x27;</span></span><br><span class="line">next(s)</span><br><span class="line"><span class="string">&#x27;3&#x27;</span></span><br><span class="line">next(s)</span><br><span class="line"><span class="string">&#x27;4&#x27;</span></span><br><span class="line">next(s)</span><br><span class="line"><span class="string">&#x27;5&#x27;</span></span><br><span class="line">next(s)</span><br><span class="line"><span class="comment">#以下为出错信息</span></span><br><span class="line"><span class="comment">#Traceback (most recent call last):</span></span><br><span class="line"><span class="comment"># File &quot;&lt;input&gt;&quot;, line 1, in &lt;module&gt;</span></span><br><span class="line"><span class="comment">#StopIteration</span></span><br></pre></td></tr></table></figure><p>for循环工作原理：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&#x27;iamguoxiulong&#x27;</span></span><br><span class="line">s=iter(str)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">try</span>:</span><br><span class="line"><span class="meta">... </span>        each=next(s)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">except</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">break</span></span><br><span class="line"><span class="meta">... </span>    print(each)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">i</span><br><span class="line">a</span><br><span class="line">m</span><br><span class="line">g</span><br><span class="line">u</span><br><span class="line">o</span><br><span class="line">x</span><br><span class="line">i</span><br><span class="line">u</span><br><span class="line">l</span><br><span class="line">o</span><br><span class="line">n</span><br><span class="line">g</span><br></pre></td></tr></table></figure><h3 id="25生成器"><a href="#25生成器" class="headerlink" title="25生成器"></a>25生成器</h3><h4 id="1-什么是协同程序？"><a href="#1-什么是协同程序？" class="headerlink" title="1.什么是协同程序？"></a>1.什么是协同程序？</h4><p>所谓的协同程序就是可以运行的独立函数调用，函数可以暂停或者挂起，并在需要的时候从程序离开的地方据需或者重新开始。</p><ul><li>生成器是一种特殊的迭代器。想·</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen</span>():</span></span><br><span class="line"><span class="meta">... </span>    print(<span class="string">&#x27;haaaa&#x27;</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line"><span class="meta">... </span>    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">g=gen()</span><br><span class="line">next(g)</span><br><span class="line">haaaa</span><br><span class="line"><span class="number">1</span></span><br><span class="line">next(g)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="comment">#也可以用下面的方法</span></span><br><span class="line">g=gen()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> gen():</span><br><span class="line"><span class="meta">... </span>    print(i)</span><br><span class="line"><span class="meta">... </span>    </span><br><span class="line">haaaa</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201118171705717.png" alt="image-20201118171705717"></p><ul><li>也可以在sum函数中添加生成器推导式</li></ul><h3 id="26模块"><a href="#26模块" class="headerlink" title="26模块"></a>26模块</h3><h4 id="1-什么是模块"><a href="#1-什么是模块" class="headerlink" title="1.什么是模块"></a>1.什么是模块</h4><ul><li><p>容器-&gt;数据的封装</p></li><li><p>函数-&gt;语句的封装</p></li><li><p>类-&gt;方法和属性的封装</p></li><li><p>模块-&gt;模块就是程序</p></li></ul><h4 id="2-命名空间"><a href="#2-命名空间" class="headerlink" title="2.命名空间"></a>2.命名空间</h4><h4 id="3-导入模块"><a href="#3-导入模块" class="headerlink" title="3.导入模块"></a>3.导入模块</h4><ul><li>第一种：import  模块名</li><li>第二种：from 模块名 import 函数名</li><li>第三种：import 模块名 as  新名字</li></ul><h4 id="4-模块！模块！"><a href="#4-模块！模块！" class="headerlink" title="4.模块！模块！"></a>4.模块！模块！</h4><ul><li>if \ <em>_name_\</em> == ‘__main__‘</li></ul><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201118173541322.png" alt="image-20201118173541322"></p><ul><li>搜索路径</li></ul><p><img src="/2020/11/11/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/assets/2020-11-11-python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20201118174154542.png" alt="image-20201118174154542"></p><ul><li>包（package）</li></ul><p>1.创建一个文件夹，用于存放相关的模块，文件夹的名字就是包的名字。</p><p>2.在文件夹中创建一个__init__.py的模块文件，内容可以为空。</p><p>3.将相关的模块放入文件夹中。</p><h3 id="27论一只爬虫的自我修养"><a href="#27论一只爬虫的自我修养" class="headerlink" title="27论一只爬虫的自我修养"></a>27论一只爬虫的自我修养</h3><h4 id="1-python如何访问互联网"><a href="#1-python如何访问互联网" class="headerlink" title="1.python如何访问互联网"></a>1.python如何访问互联网</h4><ul><li>URL的一般格式为（带方括号[]的为可选项）：<ul><li>protocol：//hostname[:port]/path/[;parameters][?query]#fragment</li></ul></li><li>URL由三部分组成：<ul><li>第一部分是协议： http ，https ， ftp ，file ， ed2k…</li><li>第二部分是存放资源的服务器的域名系统或IP地址（有时候要包含端口号，各种传输协议都有默认的端口号，如http的默认端口为80）。</li></ul></li></ul><p>访问网页案例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(<span class="string">&quot;http://www.fishc.com&quot;</span>)</span><br><span class="line">html = response.read()</span><br><span class="line">html=html.decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure><h4 id="2-访问网页抓取图片案例"><a href="#2-访问网页抓取图片案例" class="headerlink" title="2.访问网页抓取图片案例"></a>2.访问网页抓取图片案例</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">response = urllib.request.urlopen(<span class="string">&quot;http://www.placekitten.com/g/500/600&quot;</span>)</span><br><span class="line">html = response.read()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">&#x27;venv/cat_500_600.jpg&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><h4 id="3-翻译案例（输入内容爬取有道翻译实现功能）"><a href="#3-翻译案例（输入内容爬取有道翻译实现功能）" class="headerlink" title="3.翻译案例（输入内容爬取有道翻译实现功能）"></a>3.翻译案例（输入内容爬取有道翻译实现功能）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">content=input(<span class="string">&quot;请输入要翻译的内容:&quot;</span>)</span><br><span class="line">url=<span class="string">&#x27;http://fanyi.youdao.com/translate?smartresult=dict,rule&#x27;</span></span><br><span class="line"></span><br><span class="line">data=&#123;&#125;</span><br><span class="line">data[<span class="string">&#x27;i&#x27;</span>]=content</span><br><span class="line">data[<span class="string">&#x27;from&#x27;</span>]=<span class="string">&#x27;AUTO&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;to&#x27;</span>]=<span class="string">&#x27;AUTO&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;smartresult&#x27;</span>]=<span class="string">&#x27;dict&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;client&#x27;</span>]=<span class="string">&#x27;fanyideskweb&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;salt&#x27;</span>]=<span class="string">&#x27;16057447401566&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;sign&#x27;</span>]=<span class="string">&#x27;0b1a2dfaac630a0e73212229ba9def1d&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;lts&#x27;</span>]=<span class="string">&#x27;1605744740156&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;bv&#x27;</span>]=<span class="string">&#x27;e2a78ed30c66e16a857c5b6486a1d326&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;doctype&#x27;</span>]=<span class="string">&#x27;json&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;version&#x27;</span>]=<span class="string">&#x27;2.1&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;keyfrom&#x27;</span>]=<span class="string">&#x27;fanyi.web&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;action&#x27;</span>]=<span class="string">&#x27;FY_BY_CLICKBUTTION&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data=urllib.parse.urlencode(data).encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">response =urllib.request.urlopen(url,data)</span><br><span class="line"></span><br><span class="line">html=response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">tar=json.loads(html)</span><br><span class="line"></span><br><span class="line">print(tar[<span class="string">&#x27;translateResult&#x27;</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">&#x27;tgt&#x27;</span>])</span><br></pre></td></tr></table></figure><h4 id="4隐藏"><a href="#4隐藏" class="headerlink" title="4隐藏"></a>4隐藏</h4><h5 id="1-修改headers"><a href="#1-修改headers" class="headerlink" title="1.修改headers"></a>1.修改headers</h5><ul><li>通过Request的headers参数修改</li><li>Request.add_header()方法修改</li></ul><p>2.代理</p><ul><li><p>步骤：</p><ul><li>参数是一个字典<code>&#123;&#39;类型&#39;:&#39;代理ip：端口号&#39;&#125;</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_support=urllib.request.ProxyHandler(&#123; &#125;)</span><br></pre></td></tr></table></figure><ul><li>定制，创建一个opener</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">opener=urllib.request.build_opener(proxy_support)</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://www.whatismyip.com.tw&#x27;</span></span><br><span class="line"></span><br><span class="line">proxy_support = urllib.request.ProxyHandler(&#123;<span class="string">&#x27;http&#x27;</span>:<span class="string">&#x27;58.138.133.101&#x27;</span>&#125;)</span><br><span class="line"></span><br><span class="line">opener=urllib.request.build_opener(proxy_support)</span><br><span class="line"></span><br><span class="line">opener.addheaders=[(<span class="string">&#x27;User-Agent&#x27;</span>,<span class="string">&#x27;Mozilla /5.0 (Windows NT 10.0; Win64; x64; rv:81.0) Gecko/20100101 Firefox/81.0&#x27;</span>)]</span><br><span class="line"></span><br><span class="line">urllib.request.install_opener(opener)</span><br><span class="line"></span><br><span class="line">response=urllib.request.urlopen(url)</span><br><span class="line"></span><br><span class="line">html=response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(html)</span><br></pre></td></tr></table></figure><h4 id="5煎蛋网爬取图片"><a href="#5煎蛋网爬取图片" class="headerlink" title="5煎蛋网爬取图片"></a>5煎蛋网爬取图片</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_page</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;抓取网页地址(从当前url中的&#x27;下一页&#x27;开始)</span></span><br><span class="line"><span class="string">    返回一个url&#x27;&#x27;&#x27;</span></span><br><span class="line">    html = url_open(url).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    a = html.find(<span class="string">&#x27;current-comment-page&#x27;</span>)</span><br><span class="line">    a = html.find(<span class="string">&#x27;jandan.net/ooxx/&#x27;</span>, a)</span><br><span class="line">    b = html.find(<span class="string">&#x27;#comments&#x27;</span>, a) + <span class="number">9</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;http://&#x27;</span> + html[a:b]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_imgs</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;获取当前url中的jpg源地址,返回一个列表,包含了当前页面的几乎所有jpg&#x27;&#x27;&#x27;</span></span><br><span class="line">    img_addrs = []</span><br><span class="line">    html = url_open(url).decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    b = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        a = html.find(<span class="string">&#x27;li id=&quot;comment&#x27;</span>, a)</span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">-1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        a = html.find(<span class="string">&#x27;img src=&#x27;</span>, a) + <span class="number">11</span></span><br><span class="line">        <span class="keyword">if</span> a == <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        b = html.find(<span class="string">&#x27;.jpg&#x27;</span>, a, a + <span class="number">255</span>) + <span class="number">4</span></span><br><span class="line">        <span class="keyword">if</span> b == <span class="number">3</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        img_addrs.append(html[a:b])</span><br><span class="line">        a = b</span><br><span class="line">    print(img_addrs)</span><br><span class="line">    <span class="keyword">return</span> img_addrs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_imgs</span>(<span class="params">folder, img_addrs</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;将图像保存到文件夹&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> img_addrs:</span><br><span class="line">        filename = each.split(<span class="string">&#x27;/&#x27;</span>)[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">with</span> open(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            img = url_open(<span class="string">&#x27;http://&#x27;</span> + each)</span><br><span class="line">            f.write(img)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">url_open</span>(<span class="params">url</span>):</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;打开url,返回未解码的html&#x27;&#x27;&#x27;</span></span><br><span class="line">    req = urllib.request.Request(url)</span><br><span class="line">    req.add_header(<span class="string">&#x27;User-Agent&#x27;</span>, <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:68.0) Gecko/20100101 Firefox/68.0&#x27;</span>)</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    如需代理则uncomment</span></span><br><span class="line"><span class="string">    proxies = []</span></span><br><span class="line"><span class="string">    proxy = random.choice(proxies)</span></span><br><span class="line"><span class="string">    proxy_support = urllib.request.ProxyHandler(&#123;&#x27;http&#x27;:proxy&#125;)</span></span><br><span class="line"><span class="string">    opener = urllib.request.build_opener(proxy_support)</span></span><br><span class="line"><span class="string">    urllib.request.install_opener(opener)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    html = response.read()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">download_mm</span>(<span class="params">folder=<span class="string">&#x27;ooxx&#x27;</span>, pages=<span class="number">10</span></span>):</span></span><br><span class="line">    os.mkdir(folder)</span><br><span class="line">    os.chdir(folder)</span><br><span class="line"></span><br><span class="line">    url = <span class="string">&#x27;http://jandan.net/ooxx/&#x27;</span></span><br><span class="line">    next_page = get_page(url)</span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(pages):</span><br><span class="line">        print(next_page)</span><br><span class="line">        save_imgs(folder, find_imgs(next_page))</span><br><span class="line">        next_page = get_page(next_page)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    download_mm(<span class="string">&#x27;ooxx&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="6正则表达式"><a href="#6正则表达式" class="headerlink" title="6正则表达式"></a>6正则表达式</h4>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Python学习&quot;&gt;&lt;a href=&quot;#Python学习&quot; class=&quot;headerlink&quot; title=&quot;Python学习&quot;&gt;&lt;/a&gt;Python学习&lt;/h2&gt;</summary>
    
    
    
    <category term="python学习" scheme="http://www.acrazydragon.github.io/categories/python%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="python学习" scheme="http://www.acrazydragon.github.io/tags/python%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC学习</title>
    <link href="http://www.acrazydragon.github.io/2020/11/04/SpringMVC%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.acrazydragon.github.io/2020/11/04/SpringMVC%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-11-04T08:24:51.000Z</published>
    <updated>2020-11-04T08:25:22.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SpringMVC学习笔记"><a href="#SpringMVC学习笔记" class="headerlink" title="SpringMVC学习笔记"></a>SpringMVC学习笔记</h2><a id="more"></a><p>ssm:mybatis+Spring+SpringMVC    <strong>MVC三层架构</strong>s</p><p>javaSE：认真学习，老师带，入门快</p><p>javaWeb：认真学习，老师带，入门快</p><p>框架：研究官方文档，锻炼自学能力，锻炼笔记能力，锻炼项目能力。</p><p>SpringMVC+Vue+SpringBoot+SpringCloud+Linux</p><p>SSM=JavaWeb做项目</p><p>Spring ：IOC 和 AOP</p><p>SpringMVC：SpringMVC的执行流程！</p><p>SpringMVC：SSM框架整合！</p><p>MVC：模型（dao，service）    视图（jsp）    控制器（Servlet）</p><p>dao</p><p>service</p><p>servlet : 转发，重定向</p><p>jsp/html</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SpringMVC学习笔记&quot;&gt;&lt;a href=&quot;#SpringMVC学习笔记&quot; class=&quot;headerlink&quot; title=&quot;SpringMVC学习笔记&quot;&gt;&lt;/a&gt;SpringMVC学习笔记&lt;/h2&gt;</summary>
    
    
    
    <category term="springmvc" scheme="http://www.acrazydragon.github.io/categories/springmvc/"/>
    
    
    <category term="springmvc" scheme="http://www.acrazydragon.github.io/tags/springmvc/"/>
    
  </entry>
  
  <entry>
    <title>Spring学习</title>
    <link href="http://www.acrazydragon.github.io/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.acrazydragon.github.io/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-18T14:05:46.000Z</published>
    <updated>2020-10-28T09:30:10.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring学习笔记"><a href="#Spring学习笔记" class="headerlink" title="Spring学习笔记"></a>Spring学习笔记</h2><a id="more"></a><h2 id="1-Spring"><a href="#1-Spring" class="headerlink" title="1.Spring"></a>1.Spring</h2><h3 id="1-1简介"><a href="#1-1简介" class="headerlink" title="1.1简介"></a>1.1简介</h3><ul><li>spring：春天—&gt;给软件行业带来了春天！</li><li>2002，首次推出了spring框架的雏形：interface21框架！</li><li>spring框架即以interface21框架为基础，经过超农信社及，并不断丰富其内涵，与2004年三月二十四号发布了1.0正式版。</li><li>Rod Johnson：Spring Framework创始人，著名作者。 Rod在<a href="https://baike.baidu.com/item/%E6%82%89%E5%B0%BC%E5%A4%A7%E5%AD%A6/1700805">悉尼大学</a>不仅获得了计算机学位，同时还获得了音乐学位。更令人吃惊的是在回到软件开发领域之前，他还获得了音乐学的博士学位。</li><li>spring理念：使现有的技术更加容易使用，本身是一个大杂烩，整合了现有的技术框架！</li></ul><ul><li>SSH： Struct2 + Spring + Hibernate！</li><li>SSM： SpringMVC + Spring + Mybatis!</li></ul><p>官网：<a href="https://spring.io/projects/spring-framework">https://spring.io/projects/spring-framework</a></p><p>官方下载地址：<a href="https://repo.spring.io/release/org/springframework/spring/">https://repo.spring.io/release/org/springframework/spring/</a></p><p>Github：<a href="https://github.com/spring-projects/spring-framework">https://github.com/spring-projects/spring-framework</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2优点"><a href="#1-2优点" class="headerlink" title="1.2优点"></a>1.2优点</h3><ul><li><p>Spring是一个开源的免费的框架（容器）！</p></li><li><p>Spring是一个轻量级的，非入侵式的框架！</p></li><li><p><strong>控制反转（IOC），面向切面编程（AOP）</strong></p></li><li><p>支持事务的处理，对框架整合的支持！</p></li></ul><p>总结一句话：Spring就是一个轻量级的控制反转（IOC），面向切面编程（AOP）的框架！</p><h3 id="1-3组成"><a href="#1-3组成" class="headerlink" title="1.3组成"></a>1.3组成</h3><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201019164845859.png" alt="image-20201019164845859"></p><h3 id="1-4拓展"><a href="#1-4拓展" class="headerlink" title="1.4拓展"></a>1.4拓展</h3><p>在Spring官网有这个介绍：现代化的java开发！说白了就是基于Spring的开发！</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201019165146446.png" alt="image-20201019165146446"></p><ul><li><p>Spring Boot</p><ul><li>一个快速开发的脚手架。</li><li>基于Spring Boot可以快速开发单个微服务。</li><li>约定大于配置！</li></ul></li><li><p>Spring Cloud</p><ul><li>Spring Cloud是基于Spring Boot实现的。</li></ul></li></ul><p>因为现在大多数公司都在使用Spring Boot进行快速开发，学习Spring Boot的前提需要完全掌握Spring和Spring MVC！承上启下的作用。</p><p><strong>弊端：发展了太久，违背了原来的理念！配置十分繁琐，人称：“人间地狱！”</strong></p><h2 id="2-IOC理论推导"><a href="#2-IOC理论推导" class="headerlink" title="2.IOC理论推导"></a>2.IOC理论推导</h2><p>1.UserDao接口</p><p>2.UserDaoImpl实现类</p><p>3.UserService业务接口</p><p>4.UserServiceImpl业务实现类</p><p>在我们之前的业务中，用户的需求可能改变我们原来的代码，我们需要根据用户的需求去修改源代码！如果程序代码量十分大，修改一次成本的代价十分昂贵！</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201019173930254.png" alt="image-20201019173930254"></p><p>我们使用一个set接口实现，已经发生了革命性的变化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line"><span class="comment">//利用set实现动态实现值的注入！</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>之前，程序主动创建对象！控制权在程序员手上！</li><li>使用了set注入后，程序不再有注入性，而是变成了被动的接收对象！</li></ul><p>这种思想：从本质上解决了问题，我们程序员不用再管理对象的创建了。系统的耦合性大大降低，可以更加专注在业务的实现上了！</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201019173954467.png" alt="image-20201019173954467"></p><p><strong>IOC本质</strong></p><p><strong>控制反转IoC(Inversion of Control)，是一种设计思想，DI(依赖注入)是实现IoC的一种方法</strong>，也有人认为DI只是IoC的另一种说法。没有IoC的程序中 , 我们使用面向对象编程 , 对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方，个人认为所谓控制反转就是：获得依赖对象的方式反转了。</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201019174653829.png" alt="image-20201019174653829"></p><p>采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</p><p><strong>控制反转是一种通过描述（XML或注解）并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器，其实现方法是依赖注入（Dependency Injection,DI）。</strong></p><h2 id="3-HelloSpring"><a href="#3-HelloSpring" class="headerlink" title="3.HelloSpring"></a>3.HelloSpring</h2><p><strong>注 : spring 需要导入commons-logging进行日志记录 . 我们利用maven , 他会自动下载对应的依赖项 .</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-编写类："><a href="#1-编写类：" class="headerlink" title="1.编写类："></a>1.编写类：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String str;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//spring的关键</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStr</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.str = str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;hello Spring&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;str=&#x27;&quot;</span> + str + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-编写我们的spring文件-这里我们命名为beans-xml"><a href="#2-编写我们的spring文件-这里我们命名为beans-xml" class="headerlink" title="2.编写我们的spring文件 , 这里我们命名为beans.xml"></a>2.编写我们的spring文件 , 这里我们命名为beans.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">在spring中创建对象，在spring中这些都被称为Bean</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">类型 变量名 = new 类型();</span></span><br><span class="line"><span class="comment">Hello hello = new Hello();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">id = 变量名</span></span><br><span class="line"><span class="comment">class = new的对象</span></span><br><span class="line"><span class="comment">property 相当于给对象中的属性设置一个值</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;hello&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-我们可以去进行测试了"><a href="#3-我们可以去进行测试了" class="headerlink" title="3.我们可以去进行测试了"></a>3.我们可以去进行测试了</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取spring的上下文对象</span></span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//我们现在的对象都在spring中的管理了，我们要使用，直接从里面取出来就可以了</span></span><br><span class="line">    Hello hello =(Hello) context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">    hello.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="思考问题："><a href="#思考问题：" class="headerlink" title="思考问题："></a>思考问题：</h3><ul><li>Hello 对象是谁创建的 ?  【hello 对象是由Spring创建的</li><li>Hello 对象的属性是怎么设置的 ?  hello 对象的属性是由Spring容器设置的</li></ul><p>这个过程就叫控制反转 :</p><ul><li>控制 : 谁来控制对象的创建 , 传统应用程序的对象是由程序本身控制创建的 , 使用Spring后 , 对象是由Spring来创建的</li><li>反转 : 程序本身不创建对象 , 而变成被动的接收对象 .</li></ul><p>依赖注入 : 就是利用set方法来进行注入的.</p><p> IOC是一种编程思想，由主动的编程变成被动的接收</p><p>可以通过newClassPathXmlApplicationContext去浏览一下底层源码 .</p><p><strong>OK , 到了现在 , 我们彻底不用再程序中去改动了 , 要实现不同的操作 , 只需要在xml配置文件中进行修改 , 所谓的IoC,一句话搞定 : 对象由Spring 来创建 , 管理 , 装配 !</strong> </p><h2 id="4-IOC创建对象的方式"><a href="#4-IOC创建对象的方式" class="headerlink" title="4.IOC创建对象的方式"></a>4.IOC创建对象的方式</h2><p>1.使用无参构造创建对象，默认！</p><p>2.假设我们使用有参构造创建对象。</p><p>​    1.下标赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--第一种方式：下标赋值--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    2.通过类型创建</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    第二种方式：通过类型创建，不建议使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.参数名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    第三种方式：直接通过参数名来设置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>总结：在配置文件加载的时候，容器中管理的对象已经初始化了！</strong></p><h2 id="5-Sping配置"><a href="#5-Sping配置" class="headerlink" title="5.Sping配置"></a>5.Sping配置</h2><h3 id="5-1别名"><a href="#5-1别名" class="headerlink" title="5.1别名"></a>5.1别名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    别名，如果添加了别名，我们也可以使用别名获取到这个对象--&gt;</span><br><span class="line">    &lt;alias name&#x3D;&quot;user&quot; alias&#x3D;&quot;a&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><h4 id="5-2Bean的配置"><a href="#5-2Bean的配置" class="headerlink" title="5.2Bean的配置"></a>5.2Bean的配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">    id:bean的唯一标识符，也就是相当于我们学的对象名</span></span><br><span class="line"><span class="comment">    class: bean所对应的全限定名：包名+类型</span></span><br><span class="line"><span class="comment">    name: 也是别名，name更高级 可以同时取多个别名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.UserT&quot;</span> <span class="attr">name</span>=<span class="string">&quot;user2 user3,user4;user5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;longLi&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-3import"><a href="#5-3import" class="headerlink" title="5.3import"></a>5.3import</h4><p>这个import一般用于团队开发使用，他可以将多个配置文件，导入合并为一个。</p><p>假设现在项目中有多个人开发，这三个人负责不同的类开发，不同的类需要注册在不同的bean中，我们可以利用import将所有人的beans.xml合并为一个总的</p><ul><li><p>张三</p></li><li><p>李四</p></li><li><p>王五</p></li><li><p>spplicationContext</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;beans.xml&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>使用的时候，直接使用总的配置就可以了</p><h2 id="6-DI依赖注入"><a href="#6-DI依赖注入" class="headerlink" title="6.DI依赖注入"></a>6.DI依赖注入</h2><h3 id="6-1构造器注入"><a href="#6-1构造器注入" class="headerlink" title="6.1构造器注入"></a>6.1构造器注入</h3><p>前面已经说过了</p><h3 id="6-2set方式注入【重点】"><a href="#6-2set方式注入【重点】" class="headerlink" title="6.2set方式注入【重点】"></a>6.2set方式注入【重点】</h3><ul><li>依赖注入：set注入！<ul><li>依赖：bean对象的创键依赖于容器</li><li>注入：bean对象中的所有属性，有容起来注入！</li></ul></li></ul><p>【环境搭建】</p><p>1.复杂类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.真实测试对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbies;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; game;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Student&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        第一种：普通值注入，直接使用value--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;longLi&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line">        Student student = (Student)applicationContext.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(student.getName());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5完善注入信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Student&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        第一种：普通值注入，直接使用value--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;longLi&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        第二种：bean注入，使用ref--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        数组注入，使用array--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>《红楼梦》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>《三国演义》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>《西游记》<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        list注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>听歌<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>敲代码<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>看电影<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        Map注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111111111&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;校园卡&quot;</span> <span class="attr">value</span>=<span class="string">&quot;222222222&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        set注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;game&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>CF<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>DNF<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        空值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        特殊类型注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;driver&quot;</span>&gt;</span>507<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;url&quot;</span>&gt;</span>b14<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;username&quot;</span>&gt;</span>root<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;password&quot;</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-3拓展方式"><a href="#6-3拓展方式" class="headerlink" title="6.3拓展方式"></a>6.3拓展方式</h3><p>我们可以使用p命名空间和c命名空间进行注入</p><p>官方解释：</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201022164303831.png" alt="image-20201022164303831"></p><p>使用！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--p命名空间注入，可以直接注入属性的值：property--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;long Li&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--c命名空间注入，通过构造器注入：construct-args--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    User user = (User)applicationContext.getBean(<span class="string">&quot;user&quot;</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(user.toString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testUser2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    User user2 = applicationContext.getBean(<span class="string">&quot;user2&quot;</span>, User.class);</span><br><span class="line">    System.out.println(user2.toString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意点：p命名和c命名不能直接使用，需要导入约束！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line">xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure><h3 id="6-4bean的作用域"><a href="#6-4bean的作用域" class="headerlink" title="6.4bean的作用域"></a>6.4bean的作用域</h3><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201022164848499.png" alt="image-20201022164848499"></p><p>1.单例模式：（spring的默认机制）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;long Li&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>2.原型模式：每次从容器get的时候，都会产生一个新对象！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;long Li&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>3.其余的request，session，application这些只能在web开发中使用到！</p><h2 id="7-Bean的自动装配"><a href="#7-Bean的自动装配" class="headerlink" title="7.Bean的自动装配"></a>7.Bean的自动装配</h2><hr><ul><li>自动装配是spring满足Bean依赖一种方式！</li><li>Spring会在上下文中自动寻找，并自动给Bean装配属性！</li></ul><p>在Spring中三种装配方式：</p><p>​    1.在xml中显式装配</p><p>​    2.在java代码中显式装配</p><p>​    3.隐式的自动装配bean【重要】</p><h3 id="7-1测试"><a href="#7-1测试" class="headerlink" title="7.1测试"></a>7.1测试</h3><p>环境搭建：一个人有两个宠物！</p><h3 id="7-2byName自动装配"><a href="#7-2byName自动装配" class="headerlink" title="7.2byName自动装配"></a>7.2byName自动装配</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        byName:会自动在容器上下文中查找，和自己对象set方法后面的值相对应的beanid!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-3byType自动装配"><a href="#7-3byType自动装配" class="headerlink" title="7.3byType自动装配"></a>7.3byType自动装配</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.Dog&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">        byName:会自动在容器上下文中查找，和自己对象set方法后面的值相对应的beanid!</span></span><br><span class="line"><span class="comment">        byType:会自动在容器上下文中查找，和自己对象属性类型相同的bean!，在此方法中id可以省略</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;long Li&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>小结：</p><ul><li>byName的时候，需要保证所有的bean的id唯一，并且这个bean需要和自动注入的set方法的值一致！</li><li>byType的时候，需要保证所有的bean的class唯一，并且这个bean需要和自动注入的属性类型一致！</li></ul><h3 id="7-4使用注解实现自动装配"><a href="#7-4使用注解实现自动装配" class="headerlink" title="7.4使用注解实现自动装配"></a>7.4使用注解实现自动装配</h3><p>jdk1.5支持的注解，Spring2.5就支持注解了！</p><p>The introduction of annotation-based configuration raised the question of whether this approach is “better” than XML.</p><p>要使用注解须知：</p><p>1.导入约束：context约束</p><p>2.配置注解的支持：<a href="context:annotation-config/">context:annotation-config/</a>    【重要】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>@Autowired</p><p>直接在属性上使用即可，也可以在set方式上使用！</p><p>使用Autowired我们可以不用编写set方法了，前提你这个自动装配的属性在IOC（Spring）容器中存在，且符合名字byName！</p><p>科普：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@nullable</span>   字段标记了这个注解，说明这个字段可以为<span class="keyword">null</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Autowired &#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//如果显式定义了required的属性为false，说明这个对象可以为null，否则不允许为空</span></span><br><span class="line"><span class="meta">@Autowired(required = false)</span></span><br><span class="line"><span class="keyword">private</span> Dog dog;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Cat cat;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><p>如果@Autowired自动装配的环境比较复杂，自动装配无法通过一个注解【@Autowired】完成的时候，我们可以使用@Qualifier(value = “xxx”)去配合Autowired使用，指定一个唯一的bean注入！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(value = &quot;dog1&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(value = &quot;cat11&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>@Resource注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(name = &quot;cat2&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小结：</p><p><strong>Resource和Autowired区别</strong>：</p><ul><li><p>都是用来自动装配的，都可以放在属性字段上</p></li><li><p>@Autowired通过byType的方式实现，而且必须要求这个对象存在！【常用】</p></li><li><p>@Resource默认通过byName的方式实现，如果找不到名字，则通过byType实现，如果两个都找不到，就报错！【常用】</p></li><li><p>执行熟顺序不同：@Autowired通过byType的方式实现，@Resource默认通过byName的方式实现。</p></li></ul><h2 id="8-使用注解开发"><a href="#8-使用注解开发" class="headerlink" title="8.使用注解开发"></a>8.使用注解开发</h2><p>在Spring4之后，要使用注解开发，必须保证aop的包导入了</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201023161601257.png" alt="image-20201023161601257"></p><p>使用注解开发需要导入context约束，增加注解的支持！</p><h3 id="1-Bean"><a href="#1-Bean" class="headerlink" title="1.Bean"></a>1.Bean</h3><h3 id="2-属性如何注入"><a href="#2-属性如何注入" class="headerlink" title="2.属性如何注入"></a>2.属性如何注入</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//等价于 &lt;bean id=&quot;user&quot; class=&quot;com.lon.pojo.User&quot;/&gt;</span></span><br><span class="line"><span class="comment">//@Component 组件</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    相当于&lt;property name=&quot;name&quot; value=&quot;long Li&quot;/&gt;</span></span><br><span class="line"><span class="comment">//    @Value(&quot;long Li&quot;)</span></span><br><span class="line">    <span class="meta">@Value(&quot;long Li&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-衍生的注解"><a href="#3-衍生的注解" class="headerlink" title="3.衍生的注解"></a>3.衍生的注解</h3><p>@Component 有几个衍生注解，我们在web 开发中，会按照mvc三层架构分层！</p><ul><li><p>dao 【@Reppository】</p></li><li><p>service   【@Service】</p></li><li><p>controller    【@Controller】</p><p>这四个注解功能都是一样的，都是代表某个类注册到Spring中，装配Bean</p></li></ul><h3 id="4-自动装配"><a href="#4-自动装配" class="headerlink" title="4.自动装配"></a>4.自动装配</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">* <span class="meta">@Autowired</span>：自动装配类型，名字。</span><br><span class="line">    如果Autowired不能唯一自动装配上属性，则需要通过<span class="meta">@Qulifier</span>（value=<span class="string">&quot;xxx&quot;</span>）实现</span><br><span class="line">* <span class="meta">@Nullable</span>  字段标记了这个注解，说明这个字段可以为<span class="keyword">null</span>。</span><br><span class="line">* <span class="meta">@Resource</span>： 自动装配通过名字，类型。</span><br><span class="line"></span><br><span class="line">* <span class="meta">@Component</span> 组件,放在类上，说明这个类被Spring管理了就是Bean！</span><br></pre></td></tr></table></figure><h3 id="5-作用域"><a href="#5-作用域" class="headerlink" title="5.作用域"></a>5.作用域</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Scope;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.naming.Name;</span><br><span class="line"></span><br><span class="line"><span class="comment">//等价于 &lt;bean id=&quot;user&quot; class=&quot;com.lon.pojo.User&quot;/&gt;</span></span><br><span class="line"><span class="comment">//@Component 组件</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Scope(&quot;prototype&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//    相当于&lt;property name=&quot;name&quot; value=&quot;long Li&quot;/&gt;</span></span><br><span class="line"><span class="comment">//    @Value(&quot;long Li&quot;)</span></span><br><span class="line">    <span class="meta">@Value(&quot;long Li&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-小结"><a href="#6-小结" class="headerlink" title="6.小结"></a>6.小结</h3><p>xml与注解：</p><ul><li><p>xml更加万能，适用于任何场合！维护简单方便。</p></li><li><p>注解不是自己的类使用不了，维护相对复杂。</p><p>xml与注解最佳实践：</p><ul><li>xml用来管理bean；</li><li>注解只负责完成属性的注入；</li><li>我们在使用的过程中，只需要注意一个问题：必须让注解生效，就需要开启注解的支持。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    指定要扫描的包，这个包下的注解就会生效--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.lon.pojo&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="9使用java的方式配置Spring"><a href="#9使用java的方式配置Spring" class="headerlink" title="9使用java的方式配置Spring"></a>9使用java的方式配置Spring</h2><p>我们现在要完全不使用Spring的xml配置了，全权交给java来做！</p><p>javaConfig是Spring的一个子项目，在Spring4之后，他成为了一个核心功能！</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201023173611432.png" alt="image-20201023173611432"></p><p>实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;long Li&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个也会被Spring容器托管，注册到容器中，因为他本来就是一个@Component</span></span><br><span class="line"><span class="comment">// @Configuration代表这是一个配置类，就和我们之前写的beans.xml一样</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.lon.pojo&quot;)</span></span><br><span class="line"><span class="meta">@Import(lonConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">lonConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册一个bean，就相当于我们之前写的一个bean标签</span></span><br><span class="line">    <span class="comment">// 这个方法的名字，就相当于bean标签中的id属性</span></span><br><span class="line">    <span class="comment">// 这个方法的返回值，就相当于bean标签中的class属性</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">user</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();<span class="comment">//就是返回要注入的bean的对象！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果完全使用了配置类的方式去做，我们就只能通过AnnotationConfig 上下文来获取配容器，通过配置类的class对象加载！</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(lonConfig.class);</span><br><span class="line">        User user = context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">        System.out.println(user.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种纯java的配置方式，在SpringBoot中随处可见！</p><h2 id="10-代理模式"><a href="#10-代理模式" class="headerlink" title="10.代理模式"></a>10.代理模式</h2><p>为什么要学习代理模式？因为这就是SpringAOP的底层！  【SpringAOP 和 SpringMVC】</p><p>代理模式的分类：</p><ul><li>静态代理</li><li>动态代理</li></ul><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201023174022652.png" alt="image-20201023174022652"></p><h3 id="10-1静态代理"><a href="#10-1静态代理" class="headerlink" title="10.1静态代理"></a>10.1静态代理</h3><p>角色分析：</p><ul><li>抽象角色：一般会使用接口或者抽象类来解决</li><li>真实角色：被代理的角色</li><li>代理角色： 代理真实角色，代理真实角色后，我们一般会做一些附属操作</li><li>客户：访问代理对象的人！</li></ul><p>代理步骤：</p><p>1.接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//租房接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.真实角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//房东</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">implements</span> <span class="title">Rent</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;房东要出租房子&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.代理角色：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Proxy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Host host;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Proxy</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Proxy</span><span class="params">(Host host)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        host.rent();</span><br><span class="line">        seeHouse();</span><br><span class="line">        hetong();</span><br><span class="line">        fare();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">seeHouse</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;看房&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fare</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收中介费&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hetong</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;签合同&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.客户端访问代理角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//房东要出租房子</span></span><br><span class="line">        Host host = <span class="keyword">new</span> Host();</span><br><span class="line">        <span class="comment">//代理，中介帮房东租房子，但是那？代理角色一般会有一些附属操作</span></span><br><span class="line">        Proxy proxy = <span class="keyword">new</span> Proxy(host);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//你不用管面对房东，直接找中介即可</span></span><br><span class="line">        proxy.rent();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理模式的好处：</p><ul><li>可以使真实角色更加纯粹！不用去关注一些公共的业务</li><li>公共业务就交给代理角色！实现了业务的分工！</li><li>公共业务发生扩展的时候，方便集中管理！</li></ul><p>缺点：</p><ul><li>一个真实角色就会产生一个代理角色：代码会翻倍-开发效率会变低~</li></ul><h3 id="10-2加深理解"><a href="#10-2加深理解" class="headerlink" title="10.2加深理解"></a>10.2加深理解</h3><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201023200901115.png" alt="image-20201023200901115"></p><h3 id="10-3动态代理"><a href="#10-3动态代理" class="headerlink" title="10.3动态代理"></a>10.3动态代理</h3><ul><li>动态代理和静态代理角色一样</li><li>动态代理的类是动态生成的，不是我们直接写好的！</li><li>动态代理分为两大类：基于接口的动态代理，基于类的动态代理<ul><li>基于接口的jdk 动态代理   【我们在这里使用】</li><li>基于类： cglib</li><li>java字节码实现： javasist</li></ul></li></ul><p>需要了解两个类：Proxy: 代理，InvocationHandler：调用处理程序</p><p>动态代理的好处：</p><ul><li>可以使真实角色更加纯粹！不用去关注一些公共的业务</li><li>公共业务就交给代理角色！实现了业务的分工！</li><li>公共业务发生扩展的时候，方便集中管理！</li><li>一个动态代理类代理的是一个接口，一般就是对应的一类业务！</li><li>一个动态代理类可以代理多个类，只要是实现了同一个接口即可！</li></ul><h2 id="11-AOP"><a href="#11-AOP" class="headerlink" title="11.AOP"></a>11.AOP</h2><h3 id="11-1什么是AOP"><a href="#11-1什么是AOP" class="headerlink" title="11.1什么是AOP"></a>11.1什么是AOP</h3><p>AOP（Aspect Oriented Programming）意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201025104721911.png" alt="image-20201025104721911"></p><h3 id="11-2AOP在Spring中的作用"><a href="#11-2AOP在Spring中的作用" class="headerlink" title="11.2AOP在Spring中的作用"></a>11.2AOP在Spring中的作用</h3><p>提供声明式事务；允许用户自定义切面</p><p>以下名词需要了解下：</p><ul><li>横切关注点：跨越应用程序多个模块的方法或功能。即是，与我们业务逻辑无关的，但是我们需要关注的部分，就是横切关注点。如日志 , 安全 , 缓存 , 事务等等 ….</li><li>切面（ASPECT）：横切关注点 被模块化 的特殊对象。即，它是一个类。</li><li>通知（Advice）：切面必须要完成的工作。即，它是类中的一个方法。</li><li>目标（Target）：被通知对象。</li><li>代理（Proxy）：向目标对象应用通知之后创建的对象。</li><li>切入点（PointCut）：切面通知 执行的 “地点”的定义。</li><li>连接点（JointPoint）：与切入点匹配的执行点。</li></ul><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201025105007913.png" alt="image-20201025105007913"></p><p>SpringAOP中，通过Advice定义横切逻辑，Spring中支持5种类型的Advice:</p><p><img src="/2020/10/18/Spring%E5%AD%A6%E4%B9%A0/assets/Spring%E5%AD%A6%E4%B9%A0/image-20201025105311978.png" alt="image-20201025105311978"></p><p>即 Aop 在 不改变原有代码的情况下 , 去增加新的功能 .</p><h3 id="11-3使用Spring实现AOP"><a href="#11-3使用Spring实现AOP" class="headerlink" title="11.3使用Spring实现AOP"></a>11.3使用Spring实现AOP</h3><p>【重点】使用AOP织入，需要导入一个依赖包！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式一：使用Spring的API接口【主要是SpringAPI接口实现】</p><p>方式二：自定义来实现AOP【主要是切面定义】</p><p>方式三：使用注解实现！</p><h2 id="12整合Batista"><a href="#12整合Batista" class="headerlink" title="12整合Batista"></a>12整合Batista</h2><p>步骤：</p><p>​    1.导入相关jar包</p><ul><li>junit</li><li>mybatis</li><li>mysql数据库</li><li>spring相关</li><li>aop植入</li><li>mybatis-spring 【new】</li></ul><h3 id="12-1回忆mybatis"><a href="#12-1回忆mybatis" class="headerlink" title="12.1回忆mybatis"></a>12.1回忆mybatis</h3><p>1.编写实体类</p><p>2.编写核心配置文件</p><p>3.编写接口</p><p>4.编写Mapper.xml</p><p>5.测试</p><h3 id="12-2Mybatis-spring"><a href="#12-2Mybatis-spring" class="headerlink" title="12.2Mybatis-spring"></a>12.2Mybatis-spring</h3><p>1.编写数据源配置</p><p>2.sqlSessionFactory</p><p>3.sqlsessionTemplate</p><p>4.需要给接口加实现类【】</p><p>5.将自己写的实现类，注入到sqring中</p><p>6.测试使用即可</p><p>案例：</p><p>User实体类：User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lon.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/26</span></span><br><span class="line"><span class="comment"> * time: 20:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> String pwd;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实体类接口：userMapper</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lon.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lon.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/26</span></span><br><span class="line"><span class="comment"> * time: 20:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">userMapper</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现：userMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.lon.Mapper.userMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectUser&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mybati配置文件（可以完全省掉）：mybatis-config.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;user&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring-mybatis整合：spring-dao.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--   DataSource:使用Spring的数据源替换Mybatis的配置   c3p0   dbcp   druid</span></span><br><span class="line"><span class="comment">       我们这里使用spring提供的JDBC</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC<span class="symbol">&amp;amp;</span>useSSL=false<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        绑定mybatis配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:com/lon/Mapper/*.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--     SqlSessionTemplate:就是我们使用的sqlsession--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        只能使用构造器注入SqlSessionFactory，因为他没有Set方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>spring实现：userMapperImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lon.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.SqlSessionTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/26</span></span><br><span class="line"><span class="comment"> * time: 22:09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">userMapperImpl</span> <span class="keyword">implements</span> <span class="title">userMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//我们的所有操作，都是用sqlsession来操作，在原来。现在都是用sqlsessiontemplete</span></span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSessionTemplate</span><span class="params">(SqlSessionTemplate sessionTemplate)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sqlSession = sessionTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userMapper mapper = sqlSession.getMapper(userMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>spring注入：applicationContext.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">&quot;spring-dao.xml&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.Mapper.userMapperImpl&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sessionTemplate&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.Mapper.userMapperImpl2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.lon.Mapper.userMapper;</span><br><span class="line"><span class="keyword">import</span> com.lon.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/26</span></span><br><span class="line"><span class="comment"> * time: 20:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">myTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ApplicationContext applicationContext = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line"></span><br><span class="line">        userMapper userMapper = applicationContext.getBean(<span class="string">&quot;userMapper2&quot;</span>, userMapper.class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userMapper.selectUser()) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String resources=<span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream in = Resources.getResourceAsStream(resources);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(in);</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        userMapper mapper = sqlSession.getMapper(userMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = mapper.selectUser();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13声明式事务"><a href="#13声明式事务" class="headerlink" title="13声明式事务"></a>13声明式事务</h2><h3 id="1-回顾事务"><a href="#1-回顾事务" class="headerlink" title="1.回顾事务"></a>1.回顾事务</h3><ul><li>把一组业务当成一个业务来做，要么都成功，要么都失败！</li><li>事务在项目开发中十分重要，涉及到数据的一致性问题，不能马虎！</li><li>确保完整性和一致性；</li></ul><p>事物的ACID原则：</p><ul><li>A代表原子性</li><li>C代表一致性</li><li>I代表隔离性<ul><li>多个业务可能操作同一个资源，防止数据损坏</li></ul></li><li>D代表持久性<ul><li>事务一旦提交，无论系统发生什么样的问题，结果都不会被影响，被持久的写入到存储器中！</li></ul></li></ul><h3 id="2Spring中的事务管理"><a href="#2Spring中的事务管理" class="headerlink" title="2Spring中的事务管理"></a>2Spring中的事务管理</h3><ul><li>声明式事务：AOP</li><li>编程式事务：需要在代码中，实现事务的管理</li></ul><p>思考：</p><p>为什么需要事务？</p><ul><li>如果不配置事务，可能存在数据提交不一致的情况下；</li><li>如果我们不在spring中配置声明式事务，我们就需要在代码中手动配置事务！</li><li>事务在项目的开发中十分重要，涉及到事务的一致性和完整性问题，不能马虎！</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Spring学习笔记&quot;&gt;&lt;a href=&quot;#Spring学习笔记&quot; class=&quot;headerlink&quot; title=&quot;Spring学习笔记&quot;&gt;&lt;/a&gt;Spring学习笔记&lt;/h2&gt;</summary>
    
    
    
    <category term="Spring" scheme="http://www.acrazydragon.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="http://www.acrazydragon.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>mybatis连接数据库时时区设置问题</title>
    <link href="http://www.acrazydragon.github.io/2020/10/15/mybatis%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://www.acrazydragon.github.io/2020/10/15/mybatis%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/</id>
    <published>2020-10-15T10:46:07.000Z</published>
    <updated>2020-10-15T11:00:11.722Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mybatis连接数据库时时区设置问题"><a href="#mybatis连接数据库时时区设置问题" class="headerlink" title="mybatis连接数据库时时区设置问题"></a>mybatis连接数据库时时区设置问题</h2><a id="more"></a><h3 id="com-mysql-cj-exceptions-InvalidConnectionAttributeException-The-server-time-zone-value异常解决方案"><a href="#com-mysql-cj-exceptions-InvalidConnectionAttributeException-The-server-time-zone-value异常解决方案" class="headerlink" title="com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value异常解决方案"></a>com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value异常解决方案</h3><p>错误，如下图：</p><p><img src="/2020/10/15/mybatis%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/C:%5CUsers%5Clong%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201015184739410.png" alt="image-20201015184739410"></p><p>错误信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time zone value</span><br></pre></td></tr></table></figure><p>问题原因：</p><p><strong>这是因为</strong> mysql升级到8.0及以上，添加了许多新特性，安全性也得到提升。当然操作时也增加了些繁琐，需要考虑到的时区问题便是其中之一。</p><p>解决方案：</p><h2 id="通过配置JDBC驱动的连接字符串"><a href="#通过配置JDBC驱动的连接字符串" class="headerlink" title="通过配置JDBC驱动的连接字符串:"></a>通过配置JDBC驱动的连接字符串:</h2><p>即配置url参数中的serverTimezone属性来解决异常，需要在连接字符串 url 后加上 serverTimezone=UTC，如图：</p><p><img src="/2020/10/15/mybatis%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E6%97%B6%E5%8C%BA%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/C:%5CUsers%5Clong%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20201015185059229.png" alt="image-20201015185059229"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">添加配置   serverTimezone=UTC</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;mybatis连接数据库时时区设置问题&quot;&gt;&lt;a href=&quot;#mybatis连接数据库时时区设置问题&quot; class=&quot;headerlink&quot; title=&quot;mybatis连接数据库时时区设置问题&quot;&gt;&lt;/a&gt;mybatis连接数据库时时区设置问题&lt;/h2&gt;</summary>
    
    
    
    <category term="mybatis" scheme="http://www.acrazydragon.github.io/categories/mybatis/"/>
    
    <category term="mysql" scheme="http://www.acrazydragon.github.io/categories/mybatis/mysql/"/>
    
    
    <category term="mybatis" scheme="http://www.acrazydragon.github.io/tags/mybatis/"/>
    
    <category term="mysql" scheme="http://www.acrazydragon.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis连接数据库过程中mybatis-config.xml资源文件找不到</title>
    <link href="http://www.acrazydragon.github.io/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <id>http://www.acrazydragon.github.io/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</id>
    <published>2020-10-15T10:31:15.000Z</published>
    <updated>2020-10-15T11:00:22.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mybatis-config-xml文件找不到的问题"><a href="#mybatis-config-xml文件找不到的问题" class="headerlink" title="mybatis-config.xml文件找不到的问题"></a>mybatis-config.xml文件找不到的问题</h2><a id="more"></a><h2 id="关于MyBatis连接数据库过程中mybatis-config-xml资源文件找不到的问题。"><a href="#关于MyBatis连接数据库过程中mybatis-config-xml资源文件找不到的问题。" class="headerlink" title="关于MyBatis连接数据库过程中mybatis-config.xml资源文件找不到的问题。"></a>关于MyBatis连接数据库过程中mybatis-config.xml资源文件找不到的问题。</h2><h3 id="问题：Could-not-find-resource-mybatis-config-xml"><a href="#问题：Could-not-find-resource-mybatis-config-xml" class="headerlink" title="问题：Could not find resource mybatis-config.xml"></a>问题：Could not find resource mybatis-config.xml</h3><p>在使用mybatis的过程中，最后测试的时候出现以下错误，显示未找到数据库，看下图：</p><p><img src="/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/assets/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/image-20201015183150525.png" alt="image-20201015183150525"></p><p>经过一点点排除，最终发现我的问题：</p><p><img src="/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/assets/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/image-20201015183720453.png" alt="image-20201015183720453"></p><p>所以需要将驱动该为mysql 8 的驱动即可，我的问题就解决了，如图：</p><p><img src="/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/assets/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/image-20201015183940578.png" alt="image-20201015183940578"></p><p>除此之外，还有几种可能会导致该错误：</p><p>1.resources文件夹未设置为资源文件夹，设置方法如下：</p><p><img src="/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/assets/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/image-20201015184152970.png" alt="image-20201015184152970"></p><p>2.其次就是文件路径书写问题，导致无法跳转。</p><p><img src="/2020/10/15/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/assets/MyBatis%E6%A1%88%E4%BE%8B%E4%B8%ADmybatis-config.xml%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E6%97%A0%E6%B3%95%E6%89%BE%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/image-20201015184329566.png" alt="image-20201015184329566"></p><p>可以测试一下引入资源的地方路径是否可以跳转：<strong>ctrl+点击</strong>。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;mybatis-config-xml文件找不到的问题&quot;&gt;&lt;a href=&quot;#mybatis-config-xml文件找不到的问题&quot; class=&quot;headerlink&quot; title=&quot;mybatis-config.xml文件找不到的问题&quot;&gt;&lt;/a&gt;mybatis-config.xml文件找不到的问题&lt;/h2&gt;</summary>
    
    
    
    <category term="mybatis" scheme="http://www.acrazydragon.github.io/categories/mybatis/"/>
    
    
    <category term="mybatis" scheme="http://www.acrazydragon.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>关于IDEA连接mysql数据库时出现的问题解决</title>
    <link href="http://www.acrazydragon.github.io/2020/10/13/2020-10-13-%E5%85%B3%E4%BA%8EIDEA%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://www.acrazydragon.github.io/2020/10/13/2020-10-13-%E5%85%B3%E4%BA%8EIDEA%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</id>
    <published>2020-10-13T10:49:34.000Z</published>
    <updated>2020-10-15T11:00:24.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于IDEA连接mysql数据库时出现错误解决方法"><a href="#关于IDEA连接mysql数据库时出现错误解决方法" class="headerlink" title="关于IDEA连接mysql数据库时出现错误解决方法"></a>关于IDEA连接mysql数据库时出现错误解决方法</h2><a id="more"></a><h2 id="问题：当我用IDEA对数据库进行连接的时候发现了问题。"><a href="#问题：当我用IDEA对数据库进行连接的时候发现了问题。" class="headerlink" title="问题：当我用IDEA对数据库进行连接的时候发现了问题。"></a>问题：当我用IDEA对数据库进行连接的时候发现了问题。</h2><p><img src="/2020/10/13/2020-10-13-%E5%85%B3%E4%BA%8EIDEA%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/assets/2020-10-13-%E5%85%B3%E4%BA%8EIDEA%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/image-20201013185038873.png" alt="image-20201013185038873"></p><p><strong>最终查询发现问题所在：</strong>由于时差导致的，时区不匹配导致的，启动mysql后，在命令行窗口中输入入以下命令即可：</p><p>1.先输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%time_zone%&#39;;</span><br></pre></td></tr></table></figure><p>2.然后输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global time_zone&#x3D;&#39;+8:00&#39;;</span><br></pre></td></tr></table></figure><p>3.运行之后，重新用IDEA连接数据库发现问题得到了解决。</p><p><img src="/2020/10/13/2020-10-13-%E5%85%B3%E4%BA%8EIDEA%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/assets/2020-10-13-%E5%85%B3%E4%BA%8EIDEA%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%97%B6%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/image-20201013185748665.png" alt="image-20201013185748665"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;关于IDEA连接mysql数据库时出现错误解决方法&quot;&gt;&lt;a href=&quot;#关于IDEA连接mysql数据库时出现错误解决方法&quot; class=&quot;headerlink&quot; title=&quot;关于IDEA连接mysql数据库时出现错误解决方法&quot;&gt;&lt;/a&gt;关于IDEA连接mysql数据库时出现错误解决方法&lt;/h2&gt;</summary>
    
    
    
    <category term="IDEA" scheme="http://www.acrazydragon.github.io/categories/IDEA/"/>
    
    <category term="MySQL" scheme="http://www.acrazydragon.github.io/categories/IDEA/MySQL/"/>
    
    
    <category term="IDEA" scheme="http://www.acrazydragon.github.io/tags/IDEA/"/>
    
    <category term="MySQL" scheme="http://www.acrazydragon.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis学习</title>
    <link href="http://www.acrazydragon.github.io/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.acrazydragon.github.io/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-12T11:14:42.000Z</published>
    <updated>2020-10-18T13:33:49.389Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MyBatis学习笔记"><a href="#MyBatis学习笔记" class="headerlink" title="MyBatis学习笔记"></a>MyBatis学习笔记</h2><a id="more"></a><h2 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h2><p>环境：(最低要求)</p><ul><li>JDK：1.8</li><li>MySQL：5.7…</li><li>maven：3.6.1</li><li>IDEA</li></ul><p>回顾：</p><ul><li>JDBC</li><li>MySQL</li><li>java基础</li><li>Maven</li><li>Junit</li></ul><p>SSM框架：配置文件的。最好的方式：看官网。</p><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h3><hr><h4 id="1-1什么是MyBatis"><a href="#1-1什么是MyBatis" class="headerlink" title="1.1什么是MyBatis"></a>1.1什么是MyBatis</h4><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201012192321462.png" alt="image-20201012192321462"></p><ul><li><p>MyBatis 是一款优秀的持久层框架</p></li><li><p>它支持自定义 SQL、存储过程以及高级映射。</p></li><li><p>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。</p></li><li><p>MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。*</p></li><li><p>MyBatis 本是<a href="https://baike.baidu.com/item/apache/6265">apache</a>的一个开源项目<a href="https://baike.baidu.com/item/iBatis">iBatis</a>, 2010年这个项目由apache software foundation 迁移到了google code，并且改名为MyBatis 。</p></li><li><p>2013年11月迁移到Github。</p></li></ul><p>如何获得MyBatis</p><ul><li>maven仓库</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Github（下载地址）：<a href="https://github.com/mybatis/mybatis-3/releases">https://github.com/mybatis/mybatis-3/releases</a></li><li>中文文档：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></li></ul><h4 id="1-2持久化"><a href="#1-2持久化" class="headerlink" title="1.2持久化"></a>1.2持久化</h4><p>数据持久化</p><ul><li>持久化就是将程序的数据在持久状态和瞬时状态转化的过程</li><li>内存：<strong>断电即失</strong></li><li>数据库（JDBC），IO文件持久化</li><li>生活：冷藏，罐头。</li></ul><p><strong>为什么需要持久化？</strong></p><ul><li>有一些对象，不能让他丢掉</li><li>内存太贵了</li></ul><h4 id="1-3持久层"><a href="#1-3持久层" class="headerlink" title="1.3持久层"></a>1.3持久层</h4><p>Dao层，Service层，Controller层…..</p><ul><li>完成持久化操作的代码块</li><li>层界限非常明显</li></ul><h4 id="1-4为什么需要MyBatis？"><a href="#1-4为什么需要MyBatis？" class="headerlink" title="1.4为什么需要MyBatis？"></a>1.4为什么需要MyBatis？</h4><ul><li><p>帮助程序员将数据存到数据库中</p></li><li><p>方便</p></li><li><p>传统的JDBC代码太复杂了。简化。框架。自动化。</p></li><li><p>不用MyBatis也可以。更容易上手。<strong>技术没有高低之分</strong></p></li><li><p>优点</p><ul><li>简单易学</li><li>灵活</li><li>sql和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的orm字段关系映射</li><li>提供对象关系映射标签，支持对象关系组建维护</li><li>提供xml标签，支持编写动态sql。</li></ul></li></ul><p><strong>最重要的一点：使用的人多！</strong></p><p>Spring  SpringMVC  SpringBoot</p><h3 id="2第一个MyBatis程序"><a href="#2第一个MyBatis程序" class="headerlink" title="2第一个MyBatis程序"></a>2第一个MyBatis程序</h3><hr><p>思路：搭建环境—&gt;导入MyBatis—-&gt;编写代码—-&gt;测试</p><h4 id="2-1搭建环境"><a href="#2-1搭建环境" class="headerlink" title="2.1搭建环境"></a>2.1搭建环境</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database `mybatis`;</span><br><span class="line">use `mybatis`;</span><br><span class="line"></span><br><span class="line">create table `user`(</span><br><span class="line">    `id` <span class="keyword">int</span> not <span class="keyword">null</span> primary key ,</span><br><span class="line">    `name` varchar(<span class="number">30</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `pwd` varchar(<span class="number">30</span>) <span class="keyword">default</span> <span class="keyword">null</span></span><br><span class="line">)engine = INNODB <span class="keyword">default</span> charset =utf8;</span><br><span class="line"></span><br><span class="line"><span class="function">insert into <span class="title">user</span><span class="params">(id, name, pwd)</span> VALUES</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">1</span>,<span class="string">&#x27;李龙&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span>,</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">2</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span>,</span></span><br><span class="line"><span class="function"><span class="params">(<span class="number">3</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span></span></span><br></pre></td></tr></table></figure><p>新建项目：</p><p>1.新建一个普通的Maven项目</p><p>2.删除src目录</p><p>3.导入maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--父工程--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        mysql 驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        Junit驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        mybatis 驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2创建一个模块"><a href="#2-2创建一个模块" class="headerlink" title="2.2创建一个模块"></a>2.2创建一个模块</h4><ul><li>编写MyBatis的核心配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC<span class="symbol">&amp;amp;</span>useSSL=false<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/lon/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写MyBatis工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  SqlSessionFactory----&gt;SqlSession</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//使用MyBatis第一步：获取SqlSessionFactory对象</span></span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例。SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-3编写代码"><a href="#2-3编写代码" class="headerlink" title="2.3编写代码"></a>2.3编写代码</h4><ul><li>实体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lon.pojo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//实体类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">user</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">user</span><span class="params">(<span class="keyword">int</span> id, String name, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">user</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Dao接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;user&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口实现类由原来的UserDaoImpl转换成一个Mapper文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace=去绑定一个Dao/Mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.lon.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    查询语句--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.lon.pojo.user&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4测试"><a href="#2-4测试" class="headerlink" title="2.4测试"></a>2.4测试</h4><p>注意点：</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201012221147327.png" alt="image-20201012221147327"></p><p>MapperRegistry是什么？</p><ul><li>Junit测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//第一步：获得sqlSession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//方式一：getMapper</span></span><br><span class="line">        UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">        List&lt;User&gt; userList = userDao.getUserList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可能会遇到的问题：</p><p>1.配置文件没有注册；</p><p>2.绑定借口错误；</p><p>3.方法名不对；</p><p>4.返回类型不对；</p><p>5.Maven导出资源问题；</p><h3 id="3-CRUD"><a href="#3-CRUD" class="headerlink" title="3.CRUD"></a>3.CRUD</h3><hr><h4 id="1-namespace"><a href="#1-namespace" class="headerlink" title="1.namespace"></a>1.namespace</h4><p>namespace中的包名要和接口中的Dao/Mapper包名一致</p><h4 id="2-select"><a href="#2-select" class="headerlink" title="2.select"></a>2.select</h4><p>选择，查询语句</p><ul><li>id：就是对应的namespace中的方法名</li><li>resultType：Sql语句执行的返回值！</li><li>parameterType：参数类型！</li></ul><p>1.编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据id查询用户</span></span><br><span class="line"><span class="function">User <span class="title">getUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><p>2.编写对应Mapper中的语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id&#x3D;&quot;getUserById&quot; resultType&#x3D;&quot;com.lon.pojo.User&quot; parameterType&#x3D;&quot;int&quot;&gt;</span><br><span class="line">    select * from mybatis.user where id&#x3D;#&#123;id&#125;;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserById</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    User userById = mapper.getUserById(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    System.out.println(userById);</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-insert"><a href="#3-insert" class="headerlink" title="3.insert"></a>3.insert</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    insert into mybatis.user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-update"><a href="#4-update" class="headerlink" title="4.update"></a>4.update</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    update mybatis.user set name=#&#123;name&#125;,pwd=#&#123;pwd&#125; where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-detete"><a href="#5-detete" class="headerlink" title="5.detete"></a>5.detete</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    delete from mybatis.user where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="6-分析错误："><a href="#6-分析错误：" class="headerlink" title="6.分析错误："></a>6.分析错误：</h4><ul><li>标签不要匹配错</li><li>resources绑定mapper，需要使用路径！</li><li>程序配置文件必须符合规范</li><li>NullPointerException，没有注册到资源</li><li>输出的xml文件中存在中文乱码问题</li><li>maven资源没有导出问题</li></ul><h4 id="7-万能的Map"><a href="#7-万能的Map" class="headerlink" title="7.万能的Map"></a>7.万能的Map</h4><p>假设，我们的实体类，或者数据库中的表，字段或者参数过多，我们应当考虑Map！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//万能的map</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser2</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    对象中的属性可以直接取出来</span></span><br><span class="line"><span class="comment">          传递map中的key</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        insert into mybatis.user (id,name,pwd) values (#&#123;userid&#125;,#&#123;username&#125;,#&#123;password&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"></span><br><span class="line">    map.put(<span class="string">&quot;userid&quot;</span>,<span class="number">5</span>);</span><br><span class="line">    map.put(<span class="string">&quot;username&quot;</span>,<span class="string">&quot;哈哈哈哈&quot;</span>);</span><br><span class="line">    map.put(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;1111&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> num = mapper.addUser2(map);</span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    <span class="keyword">if</span>(num&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;插入成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Map传递参数，直接在sql中取出key即可！</p><p>对象传递参数，直接在sql中取参数的属性即可！</p><p>只有一个基本类型参数的情况下，可以直接在sql中取到！</p><p>多个参数用Map，<strong>或者注解！</strong></p><h4 id="8-模糊查询"><a href="#8-模糊查询" class="headerlink" title="8.模糊查询"></a>8.模糊查询</h4><p>模糊查询怎么写？</p><p> 1.java代码执行的时候，传递通配符% %</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; list = mapper.getUserLike(<span class="string">&quot;%李%&quot;</span>);</span><br></pre></td></tr></table></figure><p>2.在SQL拼接中使用通配符！</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from mybatis.user where name like  &quot;%&quot;#&#123;value&#125;&quot;%&quot;;</span><br></pre></td></tr></table></figure><h3 id="4-配置解析"><a href="#4-配置解析" class="headerlink" title="4.配置解析"></a>4.配置解析</h3><hr><h4 id="1-核心配置文件"><a href="#1-核心配置文件" class="headerlink" title="1.核心配置文件"></a>1.核心配置文件</h4><ul><li>mybatis-config.xml</li><li>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息。 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br></pre></td></tr></table></figure><h4 id="2-环境配置（environments）"><a href="#2-环境配置（environments）" class="headerlink" title="2.环境配置（environments）"></a>2.环境配置（environments）</h4><p>MyBatis 可以配置成适应多种环境</p><p><strong>不过要记住：尽管可以配置多个环境，但每个 SqlSessionFactory 实例只能选择一种环境。</strong></p><p>学会使用配置多套运行环境！</p><p>Mybatis的默认事务管理器就是JDBC，连接池：POOLED</p><h4 id="3-属性（properties）"><a href="#3-属性（properties）" class="headerlink" title="3.属性（properties）"></a>3.属性（properties）</h4><p>我们可以通过properties属性来引用配置文件。</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201015224929964.png" alt="image-20201015224929964"></p><p>这些属性可以在外部进行配置，并可以进行动态替换。你既可以在典型的 Java 属性文件中配置这些属性，也可以在 properties 元素的子元素中设置。[db.properties]</p><p>编写一个配置文件：db.properties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driver=com.mysql.cj.jdbc.Driver</span><br><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/mybatis?serverTimezone=UTC&amp;useSSL=false&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">username=root</span><br><span class="line">password=<span class="number">1111</span></span><br></pre></td></tr></table></figure><p>在核心配置文件中引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    引入外部配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以直接引入外部文件</li><li>可以在其中增加一些属性配置</li><li>如果两个文件有同一个字段，优先使用外部文件部署文件的！</li></ul><h4 id="4-类型别名（typeAliases）"><a href="#4-类型别名（typeAliases）" class="headerlink" title="4.类型别名（typeAliases）"></a>4.类型别名（typeAliases）</h4><ul><li><p>类型别名可为 Java 类型设置一个缩写名字。</p></li><li><p>它仅用于 XML 配置，意在降低冗余的全限定类名书写。</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    可以给实体类起别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.lon.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean，比如：</p><p>扫描实体类的包，他默认的别名就是为了这个类的类名，首字母小写！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    可以给实体类起别名--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.lon.pojo&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在实体类比较少的时候，使用第一种方式。</p><p>如果实体类非常多，建议使用第二种。</p><p>第一种可以DIY别名，第二种则不行，如果非要改，需要在实体上增加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Alias(&quot;hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;&#125;</span><br></pre></td></tr></table></figure><h4 id="5-设置"><a href="#5-设置" class="headerlink" title="5.设置"></a>5.设置</h4><p>这是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为。</p><p><strong><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016090644115.png" alt="image-20201016090644115"></strong></p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016090734765.png" alt="image-20201016090734765"></p><h4 id="6-其他配置"><a href="#6-其他配置" class="headerlink" title="6.其他配置"></a>6.其他配置</h4><ul><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#typeHandlers">typeHandlers（类型处理器）</a></li><li><a href="https://mybatis.org/mybatis-3/zh/configuration.html#objectFactory">objectFactory（对象工厂）</a></li><li>plugins（插件）<ul><li>mybatis-generator-core</li><li>mybatis-plus-boot-starter</li><li>通用mapper</li></ul></li></ul><h4 id="7-映射器（mapper）"><a href="#7-映射器（mapper）" class="headerlink" title="7.映射器（mapper）"></a>7.映射器（mapper）</h4><p>MapperRegistry：注册绑定我们的Mapper文件：</p><p>方式一：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/lon/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：使用class文件绑定注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>接口和他的Mapper配置文件必须同名</li><li>接口和他的同名配置文件必须在同一个包内</li></ul><p>方式三：使用扫描包进行注入绑定</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.lon.dao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>接口和他的Mapper配置文件必须同名</li><li>接口和他的同名配置文件必须在同一个包内</li></ul><h4 id="8-生命周期"><a href="#8-生命周期" class="headerlink" title="8.生命周期"></a>8.生命周期</h4><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016144650384.png" alt="image-20201016144650384"></p><p><strong>作用域</strong>和<strong>生命周期</strong>是至关重要的，因为错误的使用会导致非常严重的<strong>并发问题</strong>。</p><p><strong>SqlSessionFactoryBuilder</strong></p><ul><li><p>一旦创建了 SqlSessionFactory，就不再需要它了。</p></li><li><p>局部变量</p></li></ul><p><strong>SqlSessionFactory</strong></p><ul><li><p>说白了就是可以想象为：数据库连接池</p></li><li><p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。</p></li><li><p>SqlSessionFactory 的最佳作用域是应用作用域。</p></li><li><p>最简单的就是使用<strong>单例模式</strong>或者<strong>静态单例模式。</strong></p></li></ul><p><strong>SqlSession</strong></p><ul><li>连接到连接池的一个请求！</li><li>SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。</li><li>用完之后赶紧关闭，否则资源被占用！</li></ul><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016145443168.png" alt="image-20201016145443168"></p><p>这里面的每一个Mapper，就代表一个具体的业务！</p><h3 id="5-解决属性名和字段名不一致的问题"><a href="#5-解决属性名和字段名不一致的问题" class="headerlink" title="5.解决属性名和字段名不一致的问题"></a>5.解决属性名和字段名不一致的问题</h3><hr><h4 id="1-问题"><a href="#1-问题" class="headerlink" title="1.问题"></a>1.问题</h4><p>数据库中的字段</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016145644604.png" alt="image-20201016145644604"></p><p>新建一个项目，拷贝之前的，测试实体类字段不一致的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试出现问题：</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016150614275.png" alt="image-20201016150614275"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from mybatis.user where id=#&#123;id&#125;;</span><br><span class="line">select id,name,pwd from mybatis.user where id=#&#123;id&#125;;</span><br></pre></td></tr></table></figure><p>解决方法：</p><ul><li>起别名</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;getUserById&quot;</span> resultType=<span class="string">&quot;com.lon.pojo.User&quot;</span> parameterType=<span class="string">&quot;int&quot;</span>&gt;</span><br><span class="line">    select id,name,pwd as password from mybatis.user where id=#&#123;id&#125;;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><h4 id="2-resultMap"><a href="#2-resultMap" class="headerlink" title="2.resultMap"></a>2.resultMap</h4><p>结果集映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id name pwd</span><br><span class="line">id name password</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    结果集映射--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        column数据库中的字段，property：实体类中的属性--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user where id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。</p></li><li><p>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。</p></li><li><p><code>ResultMap</code> 的优秀之处——你完全可以不用显式地配置它们。 虽然上面的例子不用显式配置 <code>ResultMap</code>。</p></li><li><p>如果世界总是这么简单就好了。</p></li></ul><h3 id="6-日志"><a href="#6-日志" class="headerlink" title="6.日志"></a>6.日志</h3><h4 id="1-日志工厂"><a href="#1-日志工厂" class="headerlink" title="1.日志工厂"></a>1.日志工厂</h4><p>如果一个数据库操作，出现了异常，我们需要排错，日志就是最好的助手！</p><p>曾经：sout，debug</p><p>现在：日志工厂！</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016155338565.png" alt="image-20201016155338565"></p><ul><li>SLF4J</li><li>LOG4J    【掌握】</li><li>LOG4J2</li><li>JDK_LOGGING</li><li>COMMONS_LOGGING</li><li>STDOUT_LOGGING       【掌握】</li><li>NO_LOGGING</li></ul><p>在mybatis中具体使用哪一个日志实现，要具体设置！</p><p><strong>STDOUT_LOGGING   ： 标准日志输出</strong></p><p>在mybatis核心配置文件中，配置我们的日志！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016160248408.png" alt="image-20201016160248408"></p><h4 id="2-LOG4J"><a href="#2-LOG4J" class="headerlink" title="2.LOG4J"></a>2.LOG4J</h4><p>什么是log4j：</p><ul><li>Log4j是<a href="https://baike.baidu.com/item/Apache/8512995">Apache</a>的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是<a href="https://baike.baidu.com/item/%E6%8E%A7%E5%88%B6%E5%8F%B0/2438626">控制台</a>、文件、<a href="https://baike.baidu.com/item/GUI">GUI</a>组件</li><li>我们也可以控制每一条日志的输出格式</li><li>通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程</li><li>通过一个<a href="https://baike.baidu.com/item/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/286550">配置文件</a>来灵活地进行配置，而不需要修改应用的代码。</li></ul><p>1.先导入LOG4J的包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.log4j.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">【%c】-%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/kuang.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">【%p】【%d&#123;yy-MM-dd&#125;】【%c】%m%n</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure><p>3.配置log4j为日志的实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.log4j的使用，直接测试运行刚才的查询</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016163141907.png" alt="image-20201016163141907"></p><p><strong>简单使用：</strong></p><p>1.在要使用Log4j的类中，导入包 import org.apache.log4j.Logger; </p><p>2.日志对象，加载参数为当前类的class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Logger logger = Logger.getLogger(UserDaoTest.class);</span><br></pre></td></tr></table></figure><p>3.日志级别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logger.info(<span class="string">&quot;info:进入了testLog4j&quot;</span>);</span><br><span class="line">logger.debug(<span class="string">&quot;debug:进入了testLog4j&quot;</span>);</span><br><span class="line">logger.error(<span class="string">&quot;error:进入了testLog4j&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="7-分页"><a href="#7-分页" class="headerlink" title="7.分页"></a>7.分页</h3><hr><p><strong>思考：为什么要分页？</strong></p><ul><li>减少数据处理量</li></ul><h4 id="1-使用Limit分页："><a href="#1-使用Limit分页：" class="headerlink" title="1.使用Limit分页："></a>1.使用Limit分页：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> startIndex,pageSize;</span><br></pre></td></tr></table></figure><p>使用mybatis实现分页，核心SQL<br>    1.接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    分页实现查询方法</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserByLimit</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><p>​    2.Mapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    分页--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByLimit&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByLimit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;startIndex&quot;</span>,<span class="number">0</span>);</span><br><span class="line">    map.put(<span class="string">&quot;pageSize&quot;</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; user = mapper.getUserByLimit(map);</span><br><span class="line">    <span class="keyword">for</span> (User user1 : user) &#123;</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-RowBounds分页"><a href="#2-RowBounds分页" class="headerlink" title="2.RowBounds分页"></a>2.RowBounds分页</h4><p>不再使用SQL实现分页</p><p>1.接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    分页2</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserByRowBounder</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>2.mapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    分页2--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByRowBounder&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByRowBounder</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    <span class="comment">//RowBounds实现</span></span><br><span class="line">    RowBounds rowBounds = <span class="keyword">new</span> RowBounds(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过java代码层面实现分页</span></span><br><span class="line">    List&lt;User&gt; user = sqlSession.selectList(<span class="string">&quot;com.lon.dao.UserMapper.getUserByRowBounder&quot;</span>,<span class="keyword">null</span>,rowBounds);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user1 : user) &#123;</span><br><span class="line">        System.out.println(user1);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.分页插件</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016173207633.png" alt="image-20201016173207633"></p><p>了解即可，万一以后公司的架构师使用，你需要知道他是什么东西！</p><h3 id="8-注解开发"><a href="#8-注解开发" class="headerlink" title="8.注解开发"></a>8.注解开发</h3><hr><h4 id="1-面向接口编程"><a href="#1-面向接口编程" class="headerlink" title="1.面向接口编程"></a>1.面向接口编程</h4><h4 id="2-使用注解开发"><a href="#2-使用注解开发" class="headerlink" title="2.使用注解开发"></a>2.使用注解开发</h4><h5 id="1-注解在接口上实现"><a href="#1-注解在接口上实现" class="headerlink" title="1.注解在接口上实现"></a>1.注解在接口上实现</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>​    2.需要在核心配置文件中绑定接口！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.lon.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    3.测试</p><p>本质：反射机制实现</p><p>底层：动态代理！</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016181909614.png" alt="image-20201016181909614"></p><p>Mybatis详细执行流程：</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016184151048.png" alt="image-20201016184151048"></p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016184219207.png" alt="image-20201016184219207"></p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016184525184.png" alt="image-20201016184525184"></p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016184624217.png" alt="image-20201016184624217"></p><h4 id="3-CRUD-1"><a href="#3-CRUD-1" class="headerlink" title="3.CRUD"></a>3.CRUD</h4><p>我们可以在工具类创建的时候自动提交事务！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory.openSession(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写接口，增加注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUsers</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法存在多个参数，所有的参数前边必须加上@Param(&quot; &quot;)</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">User <span class="title">getUserById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update user set name=#&#123;name&#125;,pwd=#&#123;password&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span><span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类。</p><p>【注意：我们必须要将接口注册绑定到我们的核心配置文件中！】</p><p><strong>关于@Param()注解</strong></p><ul><li>基本类型的参数或者string类型，需要加上</li><li>应用类型不需要加</li><li>如果只有一个基本类型，可以忽略，但是建议大家都加上！</li><li>我们在SQL中引用的就是我们这里的@Param( )设定的属性名！（#{} ，${}）</li></ul><h3 id="9-Lombok"><a href="#9-Lombok" class="headerlink" title="9.Lombok"></a>9.Lombok</h3><hr><ul><li>java library</li><li>plugs</li><li>build tools</li><li>with one annotation your class</li></ul><p>使用步骤：</p><p>1.在IDEA中安装Lombok插件！</p><p>2.在项目中导入Lombok的jar包</p><p>3.在实体类上加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span> and <span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@FieldNameConstants</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span>, <span class="meta">@RequiredArgsConstructor</span> and <span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Log</span>, <span class="meta">@Log4j</span>, <span class="meta">@Log4j2</span>, <span class="meta">@Slf4j</span>, <span class="meta">@XSlf4j</span>, <span class="meta">@CommonsLog</span>, <span class="meta">@JBossLog</span>, <span class="meta">@Flogger</span>, <span class="meta">@CustomLog</span></span><br><span class="line"><span class="meta">@Data</span>       ：无参构造，get，set，tostring，hashcode，equals</span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@SuperBuilder</span></span><br><span class="line"><span class="meta">@Singular</span></span><br><span class="line"><span class="meta">@Delegate</span></span><br><span class="line"><span class="meta">@Value</span></span><br><span class="line"><span class="meta">@Accessors</span></span><br><span class="line"><span class="meta">@Wither</span></span><br><span class="line"><span class="meta">@With</span></span><br><span class="line"><span class="meta">@SneakyThrows</span></span><br><span class="line"><span class="meta">@val</span></span><br><span class="line"><span class="meta">@var</span></span><br></pre></td></tr></table></figure><p>说明：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span>       ：无参构造，get，set，tostring，hashcode，equals</span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br><span class="line"><span class="meta">@ToString</span> </span><br><span class="line"><span class="meta">@Getter</span> and <span class="meta">@Setter</span></span><br></pre></td></tr></table></figure><h3 id="10多对一"><a href="#10多对一" class="headerlink" title="10多对一"></a>10多对一</h3><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201016221656918.png" alt="image-20201016221656918"></p><ul><li><p>多个学生，对应一个老师</p></li><li><p>对于学生这边而言，<strong>关联</strong>……多个学生，关联一个老师【多对一】</p></li><li><p>对于老师而言，<strong>集合</strong> ，一个老师，有很多学生【一对多】</p></li></ul><p>SQL：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE &#96;teacher&#96; (</span><br><span class="line">                           &#96;id&#96; INT(10) NOT NULL,</span><br><span class="line">                           &#96;name&#96; VARCHAR(30) DEFAULT NULL,</span><br><span class="line">                           PRIMARY KEY (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO teacher(&#96;id&#96;, &#96;name&#96;) VALUES (1, &#39;秦老师&#39;);</span><br><span class="line"></span><br><span class="line">CREATE TABLE &#96;student&#96; (</span><br><span class="line">                           &#96;id&#96; INT(10) NOT NULL,</span><br><span class="line">                           &#96;name&#96; VARCHAR(30) DEFAULT NULL,</span><br><span class="line">                           &#96;tid&#96; INT(10) DEFAULT NULL,</span><br><span class="line">                           PRIMARY KEY (&#96;id&#96;),</span><br><span class="line">                           KEY &#96;fktid&#96; (&#96;tid&#96;),</span><br><span class="line">                           CONSTRAINT &#96;fktid&#96; FOREIGN KEY (&#96;tid&#96;) REFERENCES &#96;teacher&#96; (&#96;id&#96;)</span><br><span class="line">) ENGINE&#x3D;INNODB DEFAULT CHARSET&#x3D;utf8;</span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;1&#39;, &#39;小明&#39;, &#39;1&#39;);</span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;2&#39;, &#39;小红&#39;, &#39;1&#39;);</span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;3&#39;, &#39;小张&#39;, &#39;1&#39;);</span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;4&#39;, &#39;小李&#39;, &#39;1&#39;);</span><br><span class="line">INSERT INTO &#96;student&#96; (&#96;id&#96;, &#96;name&#96;, &#96;tid&#96;) VALUES (&#39;5&#39;, &#39;小王&#39;, &#39;1&#39;);</span><br></pre></td></tr></table></figure><p><strong>测试环境搭建：</strong></p><p>1.测试lombok</p><p>2.新建实体类Teacher，Student</p><p>3.建立Mapper接口</p><p>4.建立Mapper.xml文件</p><p>5.在核心配置文件中绑定注册我们的Mapper接口或者文件！</p><p>6.测试查询是否成功！</p><h4 id="按照查询嵌套处理："><a href="#按照查询嵌套处理：" class="headerlink" title="按照查询嵌套处理："></a><strong>按照查询嵌套处理：</strong></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher&quot;</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        复杂的属性，我们需要单独处理--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        select * from Teacher where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="按照结果嵌套处理："><a href="#按照结果嵌套处理：" class="headerlink" title="按照结果嵌套处理："></a>按照结果嵌套处理：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    按照结果嵌套处理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;StudentTeacher2&quot;</span>&gt;</span></span><br><span class="line">        select s.id sid,s.name sname,t.name tname</span><br><span class="line">        from student s ,teacher t</span><br><span class="line">        where s.tid=t.id;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;StudentTeacher2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>回顾mysql多对一查询方式：</p><ul><li>子查询</li><li>联表查询</li></ul><h3 id="11一对多"><a href="#11一对多" class="headerlink" title="11一对多"></a>11一对多</h3><hr><p>比如：一个老师拥有多个学生！</p><p>对于老师而言，就是一对多的关系！</p><h4 id="1-环境搭建，和刚才一样"><a href="#1-环境搭建，和刚才一样" class="headerlink" title="1.环境搭建，和刚才一样"></a>1.环境搭建，和刚才一样</h4><p>实体类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2按照结果嵌套处理："><a href="#2按照结果嵌套处理：" class="headerlink" title="2按照结果嵌套处理："></a><strong>2按照结果嵌套处理：</strong></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher1&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent&quot;</span>&gt;</span></span><br><span class="line">        select s.id sid,s.name sname,t.id tid,t.name tname</span><br><span class="line">        from teacher t,student s</span><br><span class="line">        where t.id=s.tid and t.id=#&#123;tid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">         复杂的属性，我们需要单独处理，对象：association 集合：collocation</span></span><br><span class="line"><span class="comment">         javatype=“” 指定属性的类型</span></span><br><span class="line"><span class="comment">         集合中的泛型信息，我们是用ofType获取</span></span><br><span class="line"><span class="comment">集合--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3按照查询嵌套处理："><a href="#3按照查询嵌套处理：" class="headerlink" title="3按照查询嵌套处理："></a>3按照查询嵌套处理：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    ****************************************************************--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;TeacherStudent2&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.teacher where id=#&#123;tid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;TeacherStudent2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.student where tid=#&#123;tid&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>小结：</p><p>1.关联-association  【多对一】</p><p>2.结合-collection   【一对多】</p><p>3.JavaType       ofType</p><ul><li>javaType是用来指定实体类中属性的性质</li><li>ofType 用来指定映射到List或者集合中的pojo类型，泛型中的约束类型！</li></ul><p>注意点：</p><ul><li>保证SQL的 可能性，尽量保证通俗易懂</li><li>注意一对多和多对一中，属性名和字段的问题！</li><li>如果问题不好排查错误，可以使用日志，建议使用log4j</li></ul><p>面试高频：</p><ul><li>mysql引擎</li><li>InnoDB底层原理</li><li>索引</li><li>索引优化</li></ul><h3 id="12动态SQL"><a href="#12动态SQL" class="headerlink" title="12动态SQL"></a>12动态SQL</h3><hr><p><strong>什么是动态SQL：动态SQL就是指根据不同的条件生成不同的SQL语句</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果你之前用过 JSTL 或任何基于类 XML 语言的文本处理器，你对动态 SQL 元素可能会感觉似曾相识。在 MyBatis 之前的版本中，需要花时间了解大量的元素。借助功能强大的基于 OGNL 的表达式，MyBatis <span class="number">3</span> 替换了之前的大部分元素，大大精简了元素种类，现在要学习的元素种类比原来的一半还要少</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span></span><br><span class="line">choose (when, otherwise)</span><br><span class="line">trim (where, set)</span><br><span class="line">foreach</span><br></pre></td></tr></table></figure><h4 id="搭建环境："><a href="#搭建环境：" class="headerlink" title="搭建环境："></a>搭建环境：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`blog`</span>(</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;博客id&#x27;</span>,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;博客标题&#x27;</span>,</span><br><span class="line"><span class="string">`author`</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;博客作者&#x27;</span>,</span><br><span class="line"><span class="string">`create_time`</span> DATETIME <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line"><span class="string">`views`</span> <span class="built_in">INT</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">&#x27;浏览量&#x27;</span></span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8</span><br></pre></td></tr></table></figure><p>创建一个基础工程</p><p>1.导包</p><p>2.编写配置文件</p><p>3.缩写实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> di;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> views;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.编写实体类对应的Mapper接口和Mapper.xml文件</p><h4 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIF&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">        and title=#&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author !=null&quot;</span>&gt;</span></span><br><span class="line">        and authorization =#&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="choose-when-otherwise"><a href="#choose-when-otherwise" class="headerlink" title="choose (when, otherwise)"></a>choose (when, otherwise)</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogChoose&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title !=null&quot;</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author !=null&quot;</span>&gt;</span></span><br><span class="line">                and author=#&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and views=#&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="trim（where，set）"><a href="#trim（where，set）" class="headerlink" title="trim（where，set）"></a>trim（where，set）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIF&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">        and title=#&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author !=null&quot;</span>&gt;</span></span><br><span class="line">        and authorization =#&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    update mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">            title=#&#123;title&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author!=null&quot;</span>&gt;</span></span><br><span class="line">            author=#&#123;author&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>所谓的动态SQL，本质还是SQL语句，只是我们可以在SQL层面，去执行一个逻辑代码</strong></p><h4 id="SQL片段"><a href="#SQL片段" class="headerlink" title="SQL片段"></a>SQL片段</h4><p>有的时候，我们可能会将一些功能的部分抽取出来，方便复用！ </p><p>1，使用SQL标签抽取公共部分</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;if-title&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title!=null&quot;</span>&gt;</span></span><br><span class="line">        and title=#&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author !=null&quot;</span>&gt;</span></span><br><span class="line">        and authorization =#&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.在需要使用的地方使用include标签引用即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIF&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;if-title&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意事项：</p><ul><li>最好基于单表来定义SQL片段！</li><li>不要存在where标签</li></ul><h4 id="Foreach"><a href="#Foreach" class="headerlink" title="Foreach"></a>Foreach</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPostIn&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>foreach</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> blog <span class="keyword">where</span> <span class="keyword">id</span> <span class="keyword">in</span> (<span class="keyword">id</span>=<span class="number">1</span> <span class="keyword">or</span> <span class="keyword">id</span>=<span class="number">2</span> <span class="keyword">of</span> <span class="keyword">id</span>=<span class="number">3</span>)</span><br></pre></td></tr></table></figure><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201018102449251.png" alt="image-20201018102449251"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    我们现在传递一个万能的map，这个map中可以有一个集合--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogForeach&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">open</span>=<span class="string">&quot;and (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span>&gt;</span></span><br><span class="line">                id=#&#123;id&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>动态SQL就是在拼接SQL语句，我们只要保证SQL的正确性，按照SQL的格式，去排列组合就可以了</strong></p><p>建议：</p><ul><li>先在mysql中写出完整的SQL语句，在对应的去修改成为我们的动态SQL实现通用即可！</li></ul><h3 id="13缓存"><a href="#13缓存" class="headerlink" title="13缓存"></a>13缓存</h3><hr><h4 id="1-简介-1"><a href="#1-简介-1" class="headerlink" title="1.简介"></a>1.简介</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查询    连接数据库 ，耗资源</span><br><span class="line">    一次查询的结果，给他暂存在一个可以直接取到的地方！----&gt;内存：缓存</span><br><span class="line">    </span><br><span class="line">我们再次查询相同数据的时候，直接走缓存，就不用走数据库了</span><br></pre></td></tr></table></figure><p>1.什么是缓存【cache】？</p><ul><li>存在内存中的临时数据</li><li>将用户经常查询的数据放在缓存（内存）中，用户去查询数据就不用从磁盘上（关系型数据库数据文件）查询，从缓存中查询，解决了高并发系统的性能问题。</li></ul><p>2.为什么使用缓存？</p><ul><li>减少数据库的交互次数，减少系统开销，提高系统效率。</li></ul><p>3.什么样的数据库能使用缓存？</p><ul><li>经常查询并且不经常改变的数据【可以使用缓存】</li></ul><h4 id="2-mybatis缓存"><a href="#2-mybatis缓存" class="headerlink" title="2.mybatis缓存"></a>2.mybatis缓存</h4><ul><li>Mybatis包含一个非常强大的查询缓存特性，他可以非常方便的定制和配置缓存，缓存可以极大的提升查询效率。</li><li>Mybatis系统中默认定义了两级缓存：一级缓存和二级缓存<ul><li>默认情况下，只有一级缓存开启。（sqlsession级别的缓存，也称为本地缓存）</li><li>二级缓存需要手动开启和配置，他是基于namespace级别的缓存</li><li>为了提高拓展性，Mybatis定义了缓存接口Cache，我们可以通过实现Cache接口来定义二级缓存</li></ul></li></ul><h4 id="3-一级缓存"><a href="#3-一级缓存" class="headerlink" title="3.一级缓存"></a>3.一级缓存</h4><ul><li>一级缓存也叫本地缓存：sqlsession<ul><li>与数据库同一次会话查询到的数据会放在本地缓存中</li><li>如果以后需要获取相同的数据，直接从缓存中拿到，没必要再去查询数据库；</li></ul></li></ul><p>测试步骤：</p><p>1.开启日志</p><p>2.测试在一个session中查询两次相同的记录</p><p>3.查看日志输出</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201018112505590.png" alt="image-20201018112505590"></p><p>缓存失效的情况：</p><p>1.增删改操作，可能会改变原来的数据，所以必定会刷新缓存！</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201018113248664.png" alt="image-20201018113248664"></p><p>2.查询不同的东西</p><p>3.查询不同的Mapper.xml</p><p>4.手动清理缓存！</p><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201018113331549.png" alt="image-20201018113331549"></p><p>小结：一级缓存默认开启，只在一次sqlsession中有效，也就是拿到连接到关闭连接这个区间段！（一级缓存就是一个map）</p><h4 id="4-二级缓存"><a href="#4-二级缓存" class="headerlink" title="4.二级缓存"></a>4.二级缓存</h4><ul><li>二级缓存也叫全局缓存，一级缓存作用域太低了，所以诞生了二级缓存</li><li>基于namespace级别的缓存，一个名称空间，对应一个二级缓存；</li><li>工作机制<ul><li>一个会话查询到一条数据，这个数据就会被放在当前会话的一级缓存中；</li><li>如果当时会话关闭了，这个会话对应的一级缓存就没了，但是我们想要的是，会话关闭了，一级缓存中的数据会被保存到二级缓存中；</li><li>心得会话查询信息，就可以从二级缓存中获取内容；</li><li>不同的Mapper查出的数据会刚在自己妇婴的缓存【map】中；</li></ul></li></ul><p>步骤：</p><p>1.开启全局缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        开启全局缓存--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>2.在要使用二级缓存的mapper中开启</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>也可以自定义参数</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    在当前mapper.xml中使用二级缓存--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span> <span class="attr">eviction</span>=<span class="string">&quot;FIFO&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">size</span>=<span class="string">&quot;512&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><p>3.测试</p><p>​    1.问题：我们需要将实体类序列化！否则就会报错！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.apache.ibatis.cache.CacheException: Error serializing object.  Cause: java.io.NotSerializableException: com.lon.pojo.User</span><br></pre></td></tr></table></figure><p>小结：</p><ul><li>只要开启了二级缓存，在同一个mapper就有效</li><li>所有的数据都会先放在一级缓存中</li><li>只有当会话提交或者关闭的时候一级缓存才会存到二级缓存中</li></ul><h4 id="5-缓存原理"><a href="#5-缓存原理" class="headerlink" title="5.缓存原理"></a>5.缓存原理</h4><p><img src="/2020/10/12/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/assets/2020-10-12-MyBatis%E5%AD%A6%E4%B9%A0/image-20201018121336016.png" alt="image-20201018121336016"></p><h4 id="6-自定义缓存-ehcache"><a href="#6-自定义缓存-ehcache" class="headerlink" title="6.自定义缓存-ehcache"></a>6.自定义缓存-ehcache</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Ehcache是一种广泛使用的开源java分布式缓存，主要面向通用缓存</span><br></pre></td></tr></table></figure><p>要在程序中使用ehcache，要先导包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.caches/mybatis-ehcache --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在mapper中指定使用我们的ehcache缓存实现！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>ehcache.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;http://ehcache.org/ehcache.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">updateCheck</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;./tmpdir/Tmp_EhCache&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;10000&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">overflowToDisk</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;259200&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">            <span class="attr">name</span>=<span class="string">&quot;cloud_user&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;5000&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">overflowToDisk</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Redis数据库来做缓存。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;MyBatis学习笔记&quot;&gt;&lt;a href=&quot;#MyBatis学习笔记&quot; class=&quot;headerlink&quot; title=&quot;MyBatis学习笔记&quot;&gt;&lt;/a&gt;MyBatis学习笔记&lt;/h2&gt;</summary>
    
    
    
    <category term="mybatis" scheme="http://www.acrazydragon.github.io/categories/mybatis/"/>
    
    
    <category term="mybatis" scheme="http://www.acrazydragon.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>javaweb笔记</title>
    <link href="http://www.acrazydragon.github.io/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.acrazydragon.github.io/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-12T08:24:58.000Z</published>
    <updated>2020-10-20T12:21:19.373Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaWeb学习笔记"><a href="#JavaWeb学习笔记" class="headerlink" title="JavaWeb学习笔记"></a>JavaWeb学习笔记</h2><a id="more"></a><h2 id="Javaweb学习"><a href="#Javaweb学习" class="headerlink" title="Javaweb学习"></a>Javaweb学习</h2><p>java   Web</p><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><h4 id="1-1前言"><a href="#1-1前言" class="headerlink" title="1.1前言"></a>1.1前言</h4><p>web开发：</p><ul><li><p>web, 网页的意思，<a href="http://www.baidu.com/">www.baidu.com</a></p></li><li><p>静态web</p><ul><li>html, css</li><li>提供给所有人看的数据始终不会变化！</li></ul></li><li><p>动态web</p><ul><li><p>淘宝，几乎所有的网站。</p></li><li><p>提供给所有人看的数据始终会变化！每个人在不同的时间，在不同的地点看到的信息各不相同！</p></li><li><p>技术栈：servlet，jsp，ASP，PHP。</p></li></ul></li></ul><p>在java中，动态web开发的技术统称为javaWeb：</p><h4 id="1-2web应用程序"><a href="#1-2web应用程序" class="headerlink" title="1.2web应用程序"></a>1.2web应用程序</h4><p>什么是程序：可以提供浏览器访问的程序；</p><ul><li>a.html   b.html…..多个web资源，这些资源可以被外界访问，对外界提供服务;</li><li>你们能访问到的任何一个资源，都存在在世界的某一个角落的计算机上。</li><li>URL</li><li>这些统一的web资源会被放在同一个文件夹，web应用程序-&gt;Tomcat：服务器</li><li>一个web应用由多部分组成（静态web，动态web）<ul><li>html，css，js</li><li>jsp，servlet</li><li>java程序</li><li>jar包</li><li>配置文件（properties）</li></ul></li></ul><p>web应用程序编写完成后，若想被外界访问：需要一个服务器来统一管理；</p><h4 id="1-3静态web"><a href="#1-3静态web" class="headerlink" title="1.3静态web"></a>1.3静态web</h4><ul><li><em>.html，</em>.html这些都是网页的后缀，如果服务器上一直存在这些东西，我们就可以直接进行读取。通络：</li></ul><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006103151298.png" alt="image-20201006103151298" style="zoom:50%;"><ul><li>静态web存在的缺点<ul><li>web页面无法动态更新，所有用户看到的是同一个页面<ul><li>轮播图，点击特效：伪动态</li><li>JavaScript[实际开发中，他用的最多]</li><li>VBScript</li></ul></li><li>无法和数据库交互（数据无法持久化，用户无法交互）</li></ul></li></ul><h4 id="1-4动态web"><a href="#1-4动态web" class="headerlink" title="1.4动态web"></a>1.4动态web</h4><p>页面会动态展示：”Web的页面展示的效果因人而异“</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006103846117.png" alt="image-20201006103846117" style="zoom:67%;"><p>缺点：</p><ul><li>加入服务器动态web资源发生错误，我们需要重新编写我们的<strong>后台程序</strong>，重新发布；<ul><li>停机维护</li></ul></li></ul><p>有点：</p><ul><li>web页面无法动态更新，所有用户看到的不是同一个页面</li><li>他可以和数据库交互（数据持久化：注册，商品信息，用户信息。。。）</li></ul><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006104206453.png" alt="image-20201006104206453" style="zoom:67%;"><p>新手村:–魔鬼训练（分析原理，看源码）–&gt;PK厂 </p><h3 id="2-Web服务器"><a href="#2-Web服务器" class="headerlink" title="2.Web服务器"></a>2.Web服务器</h3><hr><h4 id="2-1技术讲解"><a href="#2-1技术讲解" class="headerlink" title="2.1技术讲解"></a>2.1技术讲解</h4><p><strong>ASP</strong></p><ul><li>微软：国内最早流行的就是ASP；</li><li>在HTML中嵌入了VB脚本，ASP+COM；</li><li>在ASP开发中，基本一个页面都有几千行的业务代码，页面机器混乱</li><li>维护成本高！</li><li>C#</li><li>IIS服务器</li></ul><p>PHP</p><ul><li><p>PHP开发速度很快，功能很强大，跨平台，代码简单（70%，WP）</p></li><li><p>无法承载大访问量的情况（局限性）</p></li></ul><p>JSP/Servlet：</p><p>B/S：浏览器和服务器</p><p>C/S：客户端和服务器</p><ul><li><p>sun公司主推的B/S架构</p></li><li><p>基于java语言的（所有的大公司，或者一些开源的组件，都是用java写的）</p></li><li><p>可以承载三高问题带来的影响；</p></li><li><p>语法像ASP，ASP-&gt;jsp，加强市场强度；</p></li></ul><h4 id="2-2Web服务器"><a href="#2-2Web服务器" class="headerlink" title="2.2Web服务器"></a>2.2Web服务器</h4><p>服务器是一种被动操作，用来处理用户的一些请求和给用户一些响应信息；</p><p>IIS</p><ul><li>微软的：ASP……Windows中自带的</li></ul><p>Tomcat</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006110453774.png" alt="image-20201006110453774" style="zoom:67%;"><p>面向百度编程：</p><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由<a href="https://baike.baidu.com/item/Apache/6265">Apache</a>、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个学习javaWeb的初学者来说，他是最佳选择</p><p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。目前Tomcat最新版本为9.0.37<strong>。</strong></p><p>….</p><p><strong>工作3-5年之后，可以调试手写Tomcat服务器；</strong></p><p>下载tomcat：</p><p>1.安装 or 解压；</p><p>2.了解配置文件及目录文件</p><p>3.这个东西的作用</p><h3 id="3-Tomcat"><a href="#3-Tomcat" class="headerlink" title="3.Tomcat"></a>3.Tomcat</h3><h4 id="3-1安装Tomcat"><a href="#3-1安装Tomcat" class="headerlink" title="3.1安装Tomcat"></a>3.1安装Tomcat</h4><p>tomcat官网：<a href="http://tomcat.apache.org/">http://tomcat.apache.org/</a></p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006111847110.png" alt="image-20201006111847110" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006111911045.png" alt="image-20201006111911045"></p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006111924512.png" alt="image-20201006111924512" style="zoom:67%;"><h4 id="3-2Tomcat使用和配置"><a href="#3-2Tomcat使用和配置" class="headerlink" title="3.2Tomcat使用和配置"></a>3.2Tomcat使用和配置</h4><p>文件夹的作用：</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006112639289.png" alt="image-20201006112639289" style="zoom:67%;"><p>启动，关闭Tomcat</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006112807654.png" alt="image-20201006112807654" style="zoom:67%;"><p>访问测试：<a href="http://localhost:8080/">http://localhost:8080/</a></p><p>可能遇到的问题：</p><p>​    1.java环境变量没有配置</p><p>​    2.闪退问题：需要配置兼容性</p><p>​    3.乱码问题：修改配置文件</p><h4 id="3-3配置"><a href="#3-3配置" class="headerlink" title="3.3配置"></a>3.3配置</h4><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006113958098.png" alt="image-20201006113958098" style="zoom:67%;"><p>可以配置主机的端口号</p><ul><li><p>Tomcat默认端口号为：8080</p></li><li><p>mysql：3306</p></li><li><p>http：80</p></li><li><p>https：443</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>可以配置主机的名称</p><ul><li>默认的主机名为：localhost-&gt;127.0.0.1</li><li>默认的网站应用存放的位置为：webapps</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>高难度面试题</strong>：</p><p>请你谈谈网站是如何进行访问的！</p><p>1.输入一个域名：回车</p><p>2.检查本机的C:\\Windows\System32\drivers\etc\hosts配置文件下有没有这个域名映射</p><p>​    1.有 ，直接返回对应的IP地址。这个地址中有我们需要访问的Web程序， 可以直接访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>   www.gxl.com</span><br></pre></td></tr></table></figure><p>​    2.没有：去DNS服务器找</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006115631006.png" alt="image-20201006115631006" style="zoom:67%;"><p>3.配置一下环境变量（可选性）</p><h4 id="3-4发布一个web网站"><a href="#3-4发布一个web网站" class="headerlink" title="3.4发布一个web网站"></a>3.4发布一个web网站</h4><p>不会就先模仿</p><ul><li>将自己写的网站，放到服务器（Tomcat）中指定的web应用的文件夹（webapps）下，就可以访问了</li></ul><p>网站应该有的结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--webapps : Tomcat服务器的Web目录</span><br><span class="line">    -Root</span><br><span class="line">    -kuangstudy : 网站的目录名</span><br><span class="line">        -WEB-INF</span><br><span class="line">        -classes : java程序</span><br><span class="line">            -lib : web应用所依赖的jar包</span><br><span class="line">        -web.xml</span><br><span class="line">        -index.html 默认的首页</span><br><span class="line">        -<span class="keyword">static</span></span><br><span class="line">                -css</span><br><span class="line">                -style.css</span><br><span class="line">                -js</span><br><span class="line">                -img</span><br><span class="line">-.......</span><br></pre></td></tr></table></figure><p>HTTP协议：面试</p><p>Maven：构建工具</p><ul><li>Maven安装包</li></ul><p>Servlet入门</p><ul><li>HelloWorld！</li><li>Servlet配置</li><li>原理</li></ul><h3 id="4-Http"><a href="#4-Http" class="headerlink" title="4.Http"></a>4.Http</h3><hr><h4 id="4-1什么是Http"><a href="#4-1什么是Http" class="headerlink" title="4.1什么是Http"></a>4.1什么是Http</h4><p>Http（超文本传输协议）是一个简单的请求-响应协议，它通常运行在TCP之上。</p><ul><li>文本：html，字符串，~…..</li><li>超文本：图片，音乐，视频，定位，地图…..</li><li>默认端口：80</li></ul><p>Https（安全的）：默认端口：443</p><h4 id="4-2两个时代"><a href="#4-2两个时代" class="headerlink" title="4.2两个时代"></a>4.2两个时代</h4><ul><li>http1.0<ul><li>Http/1.0：客户端可以与web服务器连接后，只能获得一个web资源，断开连接</li></ul></li><li>http2.0<ul><li>HTTP/1.1：客户端可以与web服务器连接后，只能获得多个web资源</li></ul></li></ul><h4 id="4-3Http请求"><a href="#4-3Http请求" class="headerlink" title="4.3Http请求"></a>4.3Http请求</h4><ul><li>客户端—发请求到（Request）—服务器</li></ul><p>百度：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请求 URL: https:<span class="comment">//www.baidu.com/请求地址</span></span><br><span class="line">请求方法: GETget方法/post方法</span><br><span class="line">状态代码: <span class="number">200</span> OK状态码：<span class="number">200</span></span><br><span class="line">远程地址: <span class="number">39.156</span>.<span class="number">66.18</span>:<span class="number">443</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span>,en;q=<span class="number">0.8</span>,en-GB;q=<span class="number">0.7</span>,en-US;q=<span class="number">0.6</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure><h5 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h5><ul><li>请求行中的请求方式：GET</li><li>请求方式：Get，Post…..<ul><li>get：请求能够携带的参数比较小，大小有限制，会在浏览器的URL地址栏显示数据内容，不安全，但高效。</li><li>post：请求能够携带的参数没有限制，大小没有限制，不会在浏览器的URL地址栏显示数据内容，安全，但不高效。</li></ul></li></ul><h5 id="2-消息头"><a href="#2-消息头" class="headerlink" title="2.消息头"></a>2.消息头</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Accept：告诉浏览器，它所支持的类型</span><br><span class="line">Accept-Encoding: 支持哪种编码格式  GBK  UTF-<span class="number">8</span>   GB2312   ISO8859-<span class="number">1</span></span><br><span class="line">Accept-Language: 告诉浏览器，他的语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 高速浏览器，请求完成是断开还是保持连接</span><br><span class="line">Host：主机..../</span><br></pre></td></tr></table></figure><h4 id="4-4Http响应"><a href="#4-4Http响应" class="headerlink" title="4.4Http响应"></a>4.4Http响应</h4><ul><li>服务器—响应—客户端</li></ul><p>百度：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: <span class="keyword">private</span>缓存控制</span><br><span class="line">Connection: keep-alive连接：保持活跃</span><br><span class="line">Content-Encoding: gzip编码</span><br><span class="line">Content-Type: text/html;类型</span><br></pre></td></tr></table></figure><h5 id="1-响应体"><a href="#1-响应体" class="headerlink" title="1.响应体"></a>1.响应体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Accept：告诉浏览器，它所支持的类型</span><br><span class="line">Accept-Encoding: 支持哪种编码格式  GBK  UTF-<span class="number">8</span>   GB2312   ISO8859-<span class="number">1</span></span><br><span class="line">Accept-Language: 告诉浏览器，他的语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 高速浏览器，请求完成是断开还是保持连接</span><br><span class="line">Host：主机..../</span><br><span class="line">Reflush：告诉客户端，多久刷新一次</span><br><span class="line">Location：让网页重新定位</span><br></pre></td></tr></table></figure><h5 id="2-响应状态码"><a href="#2-响应状态码" class="headerlink" title="2.响应状态码"></a>2.响应状态码</h5><p>200：请求响应成功</p><p>3**：请求重定向</p><ul><li>重定向：你重新到我给你的新位置去</li></ul><p>4xx：找不到资源 404</p><ul><li>资源不存在；</li></ul><p>5xx：服务器代码错误  500   502：网关错误</p><p>常见面试题：</p><p>当你的浏览器中地址栏输入地址并回车的一瞬间到页面能够展示回来，经历了什么？</p><h3 id="5Maven"><a href="#5Maven" class="headerlink" title="5Maven"></a>5Maven</h3><p>我为什么要去学这个技术？</p><p>1.在javaweb开发中，与要使用大量的jar包，我们手动去导入。</p><p>2.如何能够让一个东西自动倒入和配置这个jar包。</p><p>​    由此，Maven诞生了</p><h4 id="5-1Maven项目架构管理工具"><a href="#5-1Maven项目架构管理工具" class="headerlink" title="5.1Maven项目架构管理工具"></a>5.1Maven项目架构管理工具</h4><p>我们目前就是用它来导入jar包的！</p><p>Maven的核心思想：约定大于配置</p><ul><li>有约束不要去违反。</li></ul><p>Maven会规定好你如何去编写好我们的java代码，必须要按照这个规范来。</p><p>官网：<a href="https://maven.apache.org/">https://maven.apache.org/</a></p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007142931846.png" alt="image-20201007142931846" style="zoom:67%;"><h4 id="5-2下载安装Maven"><a href="#5-2下载安装Maven" class="headerlink" title="5.2下载安装Maven"></a>5.2下载安装Maven</h4><p>下载完成后，解压即可：</p><h4 id="5-3配置环境变量"><a href="#5-3配置环境变量" class="headerlink" title="5.3配置环境变量"></a>5.3配置环境变量</h4><p>在我们的系统环境变量中</p><p>配置如下配置：</p><ul><li>M2_HOME  maven目录下的bin目录</li><li>MAVEN_HOME    maven的目录</li><li>在系统的path中配置</li></ul><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007145742761.png" alt="image-20201007145742761" style="zoom:67%;"><p>测试Maven是否安装成功，保证必须配置完成！</p><h4 id="5-4阿里云镜像"><a href="#5-4阿里云镜像" class="headerlink" title="5.4阿里云镜像"></a>5.4阿里云镜像</h4><ul><li><p>镜像：mirrors</p><ul><li>作用：加快我们的下载速度</li></ul></li><li><p>国内建议使用阿里云镜像</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>       </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span> </span><br></pre></td></tr></table></figure><h4 id="5-5本地仓库"><a href="#5-5本地仓库" class="headerlink" title="5.5本地仓库"></a>5.5本地仓库</h4><p>建立一个仓库，远程仓库</p><p>建立一个本地仓库：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\environment\apache-maven-3.5.0\maven_repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-6在IDEA中使用Maven"><a href="#5-6在IDEA中使用Maven" class="headerlink" title="5.6在IDEA中使用Maven"></a>5.6在IDEA中使用Maven</h4><p>1.启动IDEA</p><p>2.创建一个MavenWeb项目</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007151600466.png" alt="image-20201007151600466" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007151731207.png" alt="image-20201007151731207" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007151925305.png" alt="image-20201007151925305" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007152054809.png" alt="image-20201007152054809" style="zoom:67%;"><p>3.等待项目初始化完毕</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007152530148.png" alt="image-20201007152530148" style="zoom: 50%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007153554689.png" alt="image-20201007153554689" style="zoom: 67%;"><p>4.观察Maven仓库中多了什么东西</p><p>5.IDEA中的Maven设置</p><p>​    IDEA项目创建成功后，看一眼Maven的配置，</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007153711540.png" alt="image-20201007153711540" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007153909531.png" alt="image-20201007153909531" style="zoom:67%;"><p>6.到这里，Maven在IDEA中的配置和使用就OK了！</p><h4 id="5-7创建一个普通的Maven项目"><a href="#5-7创建一个普通的Maven项目" class="headerlink" title="5.7创建一个普通的Maven项目"></a>5.7创建一个普通的Maven项目</h4><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007154516872.png" alt="image-20201007154516872" style="zoom: 67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007154640791.png" alt="image-20201007154640791" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007154746370.png" alt="image-20201007154746370"><h4 id="5-8标记文件夹功能"><a href="#5-8标记文件夹功能" class="headerlink" title="5.8标记文件夹功能"></a>5.8标记文件夹功能</h4><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155124556.png" alt="image-20201007155124556" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155326325.png" alt="image-20201007155326325"></p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155508922.png" alt="image-20201007155508922" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155605651.png" alt="image-20201007155605651" style="zoom:67%;"><h4 id="5-9在IDEA中配置tomcat"><a href="#5-9在IDEA中配置tomcat" class="headerlink" title="5.9在IDEA中配置tomcat"></a>5.9在IDEA中配置tomcat</h4><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160035178.png" alt="image-20201007160035178" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160407436.png" alt="image-20201007160407436" style="zoom:67%;"><p>解决警告问题</p><p><strong>为什么会有这个问题：我们访问一个网站，需要制定一个文件夹的名字；</strong></p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160519102.png" alt="image-20201007160519102" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160750386.png" alt="image-20201007160750386" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160932266.png" alt="image-20201007160932266" style="zoom:67%;"><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007161731491.png" alt="image-20201007161731491" style="zoom:67%;"><h4 id="5-10pom文件"><a href="#5-10pom文件" class="headerlink" title="5.10pom文件"></a>5.10pom文件</h4><p>pom.xml是Maven的核心配置文件</p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007162112816.png" alt="image-20201007162112816" style="zoom:67%;"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--Maven的版本和头文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  这是我们刚才配置的GAV--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.long<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaweb01-Maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--   Package：项目的打包方式</span></span><br><span class="line"><span class="comment">      jar：java应用</span></span><br><span class="line"><span class="comment">      war；javaweb应用  </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javaweb01-Maven Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    项目的默认编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    编码版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  项目依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    具体依赖的jar包的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  项目构建用的东西--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>javaweb01-Maven<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包"><a href="#Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包" class="headerlink" title="Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包"></a>Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包</h4><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007163730156.png" alt="image-20201007163730156" style="zoom:67%;"><h4 id="Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题"><a href="#Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题" class="headerlink" title="Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题"></a>Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题</h4><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    在build中配置resources，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-12IDEA操作"><a href="#5-12IDEA操作" class="headerlink" title="5.12IDEA操作"></a>5.12IDEA操作</h4><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007164306986.png" alt="image-20201007164306986" style="zoom:67%;"><h4 id="5-13解决遇到的问题"><a href="#5-13解决遇到的问题" class="headerlink" title="5.13解决遇到的问题"></a>5.13解决遇到的问题</h4><h5 id="1-Maven-3-6-2"><a href="#1-Maven-3-6-2" class="headerlink" title="1.Maven 3.6.2"></a>1.Maven 3.6.2</h5><p>解决方法：降级为3.6.1</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008160259153.png" alt="image-20201008160259153"></p><h5 id="2-Tomcat闪退"><a href="#2-Tomcat闪退" class="headerlink" title="2.Tomcat闪退"></a>2.Tomcat闪退</h5><h5 id="3-IDEA中每次都要重复配置Maven"><a href="#3-IDEA中每次都要重复配置Maven" class="headerlink" title="3.IDEA中每次都要重复配置Maven"></a>3.IDEA中每次都要重复配置Maven</h5><ul><li>在IDEA中的全局默认配置中去配置</li><li><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008161206082.png" alt="image-20201008161206082" style="zoom:67%;"></li></ul><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008161447247.png" alt="image-20201008161447247" style="zoom:67%;"><p>4.Maven项目中Tomcat无法配置</p><h4 id="5-Maven默认项目中的web-xml版本问题"><a href="#5-Maven默认项目中的web-xml版本问题" class="headerlink" title="5.Maven默认项目中的web.xml版本问题"></a>5.Maven默认项目中的web.xml版本问题</h4><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008162228694.png" alt="image-20201008162228694" style="zoom:67%;"><h4 id="6-替换为webapp4-0版本和tomcat一致"><a href="#6-替换为webapp4-0版本和tomcat一致" class="headerlink" title="6.替换为webapp4.0版本和tomcat一致"></a>6.替换为webapp4.0版本和tomcat一致</h4><h4 id="7-Maven仓库的使用"><a href="#7-Maven仓库的使用" class="headerlink" title="7.Maven仓库的使用"></a>7.Maven仓库的使用</h4><p>地址：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163339976.png" alt="image-20201008163339976"></p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163518040.png" alt="image-20201008163518040"></p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163645267.png" alt="image-20201008163645267"></p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163724903.png" alt="image-20201008163724903"></p><h3 id="6Servlet"><a href="#6Servlet" class="headerlink" title="6Servlet"></a>6Servlet</h3><hr><h4 id="6-1Servlet简介"><a href="#6-1Servlet简介" class="headerlink" title="6.1Servlet简介"></a>6.1Servlet简介</h4><ul><li>Servlet就是sun公司开发动态web的一门技术</li><li>Sun在这些API中提供一个接口叫做：Servlet，如果你想开发一个Servlet程序，只需要完成两个小步骤：<ul><li>编写一个类实现Servlet接口</li><li>把开发好的java类部署到web服务器中</li></ul></li></ul><p><strong>把实现了Servlet接口的java程序叫做Servlet</strong></p><h4 id="6-2HelloServlet"><a href="#6-2HelloServlet" class="headerlink" title="6.2HelloServlet"></a>6.2HelloServlet</h4><p>Servlet在sun公司有两个默认的实现类：HttpServlet，</p><h6 id="1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；"><a href="#1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；" class="headerlink" title="1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；"></a>1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；</h6><ul><li>这个空的工程就是Maven的主工程；</li></ul><h6 id="2，关于Maven父子工程的理解；"><a href="#2，关于Maven父子工程的理解；" class="headerlink" title="2，关于Maven父子工程的理解；"></a>2，关于Maven父子工程的理解；</h6><ul><li>在父项目中会有</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;modules&gt;</span><br><span class="line">       &lt;module&gt;Servlet-01&lt;/module&gt;</span><br><span class="line">   &lt;/modules&gt;</span><br></pre></td></tr></table></figure><p>子项目中有时候会有parents;</p><p>父项目中的java子项目可以直接使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">son extends father</span><br></pre></td></tr></table></figure><h6 id="3-Maven环境优化"><a href="#3-Maven环境优化" class="headerlink" title="3.Maven环境优化"></a>3.Maven环境优化</h6><p>​    1.修改web.xml为最新的</p><p>​    2.将Maven的结构搭建完整</p><h6 id="4-编写一个Servlet程序"><a href="#4-编写一个Servlet程序" class="headerlink" title="4.编写一个Servlet程序"></a>4.编写一个Servlet程序</h6><p>​    1.编写一个普通类</p><p>​    2.实现Servlet接口，这里我们直接继承HttpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//由于get或者post知识请求实现的不同的方式，可以互相调用，业务逻辑都一样</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">      PrintWriter writer=resp.getWriter();<span class="comment">//响应流</span></span><br><span class="line">        writer.print(<span class="string">&quot;hello,servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="5-编写Servlet映射"><a href="#5-编写Servlet映射" class="headerlink" title="5.编写Servlet映射"></a>5.编写Servlet映射</h6><p>​    为什么需要映射：我们写的是java程序，但是要通过浏览器访问，而浏览器要连接web服务器，所以我们需要在web服务器中注册我们写的Servlet，还需要给他一个浏览器能够访问的路径；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">   &lt;servlet-name&gt;hello&lt;/servlet-name&gt;</span><br><span class="line">   &lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">com</span>.<span class="title">HelloServlet</span>&lt;/<span class="title">servlet</span>-<span class="title">class</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">   &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">hello</span>&lt;/<span class="title">servlet</span>-<span class="title">name</span>&gt;</span></span><br><span class="line"><span class="class">   &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/<span class="title">hello</span>&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="6-配置Tomcat"><a href="#6-配置Tomcat" class="headerlink" title="6.配置Tomcat"></a>6.配置Tomcat</h6><p>注意：配置项目发布的路径就可以了</p><h6 id="7-启动测试"><a href="#7-启动测试" class="headerlink" title="7.启动测试"></a>7.启动测试</h6><h4 id="6-3Servlet原理"><a href="#6-3Servlet原理" class="headerlink" title="6.3Servlet原理"></a>6.3Servlet原理</h4><p>Servlet是由web服务器调用，web服务器在收到浏览器的请求之后，会：</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008202033590.png" alt="image-20201008202033590"></p><h4 id="6-4Mapping"><a href="#6-4Mapping" class="headerlink" title="6.4Mapping"></a>6.4Mapping</h4><h5 id="1-一个servlet可以指定一个映射路径"><a href="#1-一个servlet可以指定一个映射路径" class="headerlink" title="1.一个servlet可以指定一个映射路径"></a>1.一个servlet可以指定一个映射路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-一个servlet可以指定多个映射路径"><a href="#2-一个servlet可以指定多个映射路径" class="headerlink" title="2.一个servlet可以指定多个映射路径"></a>2.一个servlet可以指定多个映射路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello4<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello5<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-一个servlet可以指定通用映射路径"><a href="#3-一个servlet可以指定通用映射路径" class="headerlink" title="3.一个servlet可以指定通用映射路径"></a>3.一个servlet可以指定通用映射路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-默认请求路径"><a href="#4-默认请求路径" class="headerlink" title="4.默认请求路径"></a>4.默认请求路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-指定一些后缀或者前缀等"><a href="#5-指定一些后缀或者前缀等" class="headerlink" title="5.指定一些后缀或者前缀等"></a>5.指定一些后缀或者前缀等</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--可以自定义后缀实现请求映射</span><br><span class="line">注意点，*前边不能加项目映射的路径</span><br><span class="line">hello&#x2F;sajdkajda.guoxiulong,只要结尾匹配即可--&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">   &lt;servlet-name&gt;hello&lt;&#x2F;servlet-name&gt;</span><br><span class="line">   &lt;url-pattern&gt;*.guoxiulong&lt;&#x2F;url-pattern&gt;</span><br><span class="line"> &lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h5 id="6-优先级问题"><a href="#6-优先级问题" class="headerlink" title="6.优先级问题"></a>6.优先级问题</h5><p>制定了固有的映射路径优先级最高，如果找不到会走默认的处理请求；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">  &lt;servlet-name&gt;error&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;servlet-class&gt;com.ErrorServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">  &lt;servlet-name&gt;error&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h4 id="6-5ServletContext"><a href="#6-5ServletContext" class="headerlink" title="6.5ServletContext"></a>6.5ServletContext</h4><p>web容器在启动的时候，他会为每个web程序都创建一个servletcontext对象，他代表了当前的web应用</p><h5 id="1-共享数据"><a href="#1-共享数据" class="headerlink" title="1.共享数据"></a>1.共享数据</h5><p>我在这个servlet中保存的数据，可以在另一个Servlet中拿到；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">&#x2F;&#x2F;        this.getInitParameter()   初始化参数</span><br><span class="line">&#x2F;&#x2F;          this.getServletConfig()   Servlet配置</span><br><span class="line">&#x2F;&#x2F;        this.getServletContext()    servlet上下文</span><br><span class="line">        ServletContext context&#x3D; this.getServletContext();</span><br><span class="line"></span><br><span class="line">        String username&#x3D;&quot;龙&quot;;&#x2F;&#x2F;数据</span><br><span class="line">        context.setAttribute(&quot;username&quot;,username);&#x2F;&#x2F;将一个数据保存在了servletcontext中，名字为：username</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;hello&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">&#x2F;&#x2F;        this.getInitParameter()   初始化参数</span><br><span class="line">&#x2F;&#x2F;          this.getServletConfig()   Servlet配置</span><br><span class="line">&#x2F;&#x2F;        this.getServletContext()    servlet上下文</span><br><span class="line">        ServletContext context&#x3D; this.getServletContext();</span><br><span class="line"></span><br><span class="line">        String username&#x3D;&quot;龙&quot;;&#x2F;&#x2F;数据</span><br><span class="line">        context.setAttribute(&quot;username&quot;,username);&#x2F;&#x2F;将一个数据保存在了servletcontext中，名字为：username</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;hello&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试访问结界：</p><h5 id="2-获取初始化参数"><a href="#2-获取初始化参数" class="headerlink" title="2.获取初始化参数"></a>2.获取初始化参数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--配置一些web应用的初始化参数--&gt;</span><br><span class="line">&lt;context-param&gt;</span><br><span class="line">  &lt;param-name&gt;url&lt;&#x2F;param-name&gt;</span><br><span class="line">  &lt;param-value&gt;jbdc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis&lt;&#x2F;param-value&gt;</span><br><span class="line">&lt;&#x2F;context-param&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">    String url = context.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    resp.getWriter().print(url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-请求转发"><a href="#3-请求转发" class="headerlink" title="3.请求转发"></a>3.请求转发</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">     ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">     System.out.println(<span class="string">&quot;进入了demo04&quot;</span>);</span><br><span class="line">     <span class="comment">//RequestDispatcher requestDispatcher = context.getRequestDispatcher(&quot;/demo3&quot;);//转发的请求路径</span></span><br><span class="line">     <span class="comment">//requestDispatcher.forward(req,resp);//调用forward实现请求转发；</span></span><br><span class="line">     context.getRequestDispatcher(<span class="string">&quot;/demo3&quot;</span>).forward(req,resp);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008214350572.png" alt="image-20201008214350572">*</p><ul><li>上图中，第一个图是请求转发，第二个图是重定向</li></ul><h5 id="4-读取资源文件"><a href="#4-读取资源文件" class="headerlink" title="4.读取资源文件"></a>4.读取资源文件</h5><p>Piroperties</p><ul><li>在java目录下新建properties</li><li>在resources目录下新建properties</li></ul><p>发现：都被打包到了同一路径下：classes，我们俗称这个路径为类路径：classpath</p><p>思路：需要一个文件流；</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.PropertyPermission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/8</span></span><br><span class="line"><span class="comment"> * time: 21:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        InputStream is = <span class="keyword">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        prop.load(is);</span><br><span class="line">        String user= prop.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd=prop.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        resp.getWriter().print(user+<span class="string">&quot;:&quot;</span>+pwd);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问测试即可ok；</p><h4 id="6-6HttpServletReponse"><a href="#6-6HttpServletReponse" class="headerlink" title="6.6HttpServletReponse"></a>6.6HttpServletReponse</h4><p>web服务器接收到客户端的http请求，针对这个请求，分别创建一个代表请求的HttpServletRequest对象，代表响应的HttpServletResponse；</p><ul><li>如果要获取我们客户端请求过来的参数：找HttpServletRequest</li><li>如果要给客户端响应一些信息：找HttpServletResponse</li></ul><h5 id="1-简单分类"><a href="#1-简单分类" class="headerlink" title="1.简单分类"></a>1.简单分类</h5><p>负责向浏览器发送数据的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ServletOutputStream <span class="title">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br><span class="line"><span class="function">PrintWriter <span class="title">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException</span>;</span><br></pre></td></tr></table></figure><p>负责向浏览器发送响应头的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setCharacterEncoding</span><span class="params">(String var1)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setContentLength</span><span class="params">(<span class="keyword">int</span> var1)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setContentLengthLong</span><span class="params">(<span class="keyword">long</span> var1)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setContentType</span><span class="params">(String var1)</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">setDateHeader</span><span class="params">(String var1, <span class="keyword">long</span> var2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addDateHeader</span><span class="params">(String var1, <span class="keyword">long</span> var2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setHeader</span><span class="params">(String var1, String var2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addHeader</span><span class="params">(String var1, String var2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setIntHeader</span><span class="params">(String var1, <span class="keyword">int</span> var2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">addIntHeader</span><span class="params">(String var1, <span class="keyword">int</span> var2)</span></span>;</span><br></pre></td></tr></table></figure><p>响应的状态码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> SC_CONTINUE = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_SWITCHING_PROTOCOLS = <span class="number">101</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_OK = <span class="number">200</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_CREATED = <span class="number">201</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_ACCEPTED = <span class="number">202</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_NON_AUTHORITATIVE_INFORMATION = <span class="number">203</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_NO_CONTENT = <span class="number">204</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_RESET_CONTENT = <span class="number">205</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_PARTIAL_CONTENT = <span class="number">206</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_MULTIPLE_CHOICES = <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_MOVED_PERMANENTLY = <span class="number">301</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_MOVED_TEMPORARILY = <span class="number">302</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_FOUND = <span class="number">302</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_SEE_OTHER = <span class="number">303</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_NOT_MODIFIED = <span class="number">304</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_USE_PROXY = <span class="number">305</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_TEMPORARY_REDIRECT = <span class="number">307</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_BAD_REQUEST = <span class="number">400</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_UNAUTHORIZED = <span class="number">401</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_PAYMENT_REQUIRED = <span class="number">402</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_FORBIDDEN = <span class="number">403</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_NOT_FOUND = <span class="number">404</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_METHOD_NOT_ALLOWED = <span class="number">405</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_NOT_ACCEPTABLE = <span class="number">406</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_PROXY_AUTHENTICATION_REQUIRED = <span class="number">407</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_REQUEST_TIMEOUT = <span class="number">408</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_CONFLICT = <span class="number">409</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_GONE = <span class="number">410</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_LENGTH_REQUIRED = <span class="number">411</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_PRECONDITION_FAILED = <span class="number">412</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_REQUEST_ENTITY_TOO_LARGE = <span class="number">413</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_REQUEST_URI_TOO_LONG = <span class="number">414</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_UNSUPPORTED_MEDIA_TYPE = <span class="number">415</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_REQUESTED_RANGE_NOT_SATISFIABLE = <span class="number">416</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_EXPECTATION_FAILED = <span class="number">417</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_INTERNAL_SERVER_ERROR = <span class="number">500</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_NOT_IMPLEMENTED = <span class="number">501</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_BAD_GATEWAY = <span class="number">502</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_SERVICE_UNAVAILABLE = <span class="number">503</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_GATEWAY_TIMEOUT = <span class="number">504</span>;</span><br><span class="line">    <span class="keyword">int</span> SC_HTTP_VERSION_NOT_SUPPORTED = <span class="number">505</span>;</span><br></pre></td></tr></table></figure><h5 id="2-常见应用"><a href="#2-常见应用" class="headerlink" title="2.常见应用"></a>2.常见应用</h5><p>1.向浏览器输出消息（一直在讲，就不说了）</p><p>2.下载文件</p><p>​    1.要获取下载文件的路径</p><p>​    2.下载的文件名是啥</p><p>​    3.设置想办法让浏览器能够支持下载我们需要的东西</p><p>·    4.获取下载文件的输入流</p><p>​    5.创建缓冲区</p><p>​    6.获取Outputstream对象</p><p>​    7,将FileOutputStream流写入到缓冲区</p><p>​    8.使用OutputStream将缓冲区中的数据流输出到客户端！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">//  1.要获取下载文件的路径</span></span><br><span class="line">        String realPath = <span class="string">&quot;D:\\IDEA\\workplace\\javaStudy\\Servlet\\javaweb-02-Servlet\\responses\\target\\responses\\WEB-INF\\classes\\1.png&quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;下载文件的路径：&quot;</span>+realPath);</span><br><span class="line"><span class="comment">//​2.下载的文件名是啥</span></span><br><span class="line">        String filename = realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//​3.设置想办法让浏览器能够支持下载我们需要的东西,中文文件名用URLEncoder.encode去编码，否则可能乱码</span></span><br><span class="line">        resp.setHeader(<span class="string">&quot;Content-disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+ URLEncoder.encode(filename,<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line"><span class="comment">//·4.获取下载文件的输入流</span></span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(realPath);</span><br><span class="line"><span class="comment">//​5.创建缓冲区</span></span><br><span class="line">        <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">//​6.获取Outputstream对象</span></span><br><span class="line">        ServletOutputStream out = resp.getOutputStream();</span><br><span class="line"><span class="comment">//​7,将FileOutputStream流写入到缓冲区</span></span><br><span class="line">        <span class="keyword">while</span> ((len=in.read(buffer))!=-<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        in.close();</span><br><span class="line">        out.close();</span><br><span class="line"><span class="comment">//​8.使用OutputStream将缓冲区中的数据流输出到客户端！</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-验证码功能"><a href="#3-验证码功能" class="headerlink" title="3.验证码功能"></a>3.验证码功能</h5><p>验证码怎么来的？</p><ul><li>前端实现</li><li>后端实现，需要用到java的图片类，生成一个图片</li></ul><h5 id="4-实现重定向（重点）"><a href="#4-实现重定向（重点）" class="headerlink" title="4.实现重定向（重点）"></a>4.实现重定向（重点）</h5><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201009194323319.png" alt="image-20201009194323319"></p><p>一个web资源受到客户端请求后，他会通知客户端区访问另一个web资源，这个过程叫做重定向；</p><p>常见场景：</p><ul><li>用户登录</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendRedirect</span><span class="params">(String var1)</span> <span class="keyword">throws</span> IOException</span>;</span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        resp.setHeader(&quot;Location&quot;,&quot;/r/image&quot;);</span></span><br><span class="line"><span class="comment">//        resp.setStatus(302);</span></span><br><span class="line">        </span><br><span class="line">       resp.sendRedirect(<span class="string">&quot;/r/image&quot;</span>);<span class="comment">//重定向</span></span><br></pre></td></tr></table></figure><p>面试题：请你聊聊重定向和转发的区别？</p><p>相同点：</p><ul><li>页面都会实现跳转</li></ul><p>不同点：</p><ul><li>请求转发的时候，URL不会发生跳转</li><li>重定向的时候，URL地址栏会发生变化</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">//处理请求</span></span><br><span class="line">    String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">    String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    System.out.println(username+<span class="string">&quot;:&quot;</span>+password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重定向一定要注意，路径问题，否则404</span></span><br><span class="line">    resp.sendRedirect(<span class="string">&quot;/r/success.jsp&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    doGet(req, resp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;success&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="6-7HttpServletRequest"><a href="#6-7HttpServletRequest" class="headerlink" title="6.7HttpServletRequest"></a>6.7HttpServletRequest</h4><p>HttpServletRequest代表客户端的请求，用户通过Http访问服务器，HTTP请求中的所有信息会被封装到HttpServletRequest。通过这个HttpServletRequest的方法，获得客户端的所有信息。</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201009203239650.png" alt="image-20201009203239650"></p><h5 id="1-获取前端传递的参数，请求转发"><a href="#1-获取前端传递的参数，请求转发" class="headerlink" title="1.获取前端传递的参数，请求转发"></a>1.获取前端传递的参数，请求转发</h5><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201009203547598.png" alt="image-20201009203547598"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String username = req.getParameter(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        String[] hobbys = req.getParameterValues(<span class="string">&quot;hobbys&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;********************************&quot;</span>);</span><br><span class="line">        System.out.println(username+<span class="string">&quot;:&quot;</span>+password);</span><br><span class="line">        System.out.println(Arrays.toString(hobbys));</span><br><span class="line">        System.out.println(<span class="string">&quot;*******************************&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(req.getContextPath());</span><br><span class="line"><span class="comment">//        resp.sendRedirect(&quot;/r/success.jsp&quot;);</span></span><br><span class="line">        <span class="comment">//通过请求转发</span></span><br><span class="line">        <span class="comment">//这里的‘/’代表当前的web路径</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/success.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="面试题：请你聊聊重定向和转发的区别？"><a href="#面试题：请你聊聊重定向和转发的区别？" class="headerlink" title="面试题：请你聊聊重定向和转发的区别？"></a>面试题：请你聊聊重定向和转发的区别？</h6><p>相同点：</p><ul><li>页面都会实现跳转</li></ul><p>不同点：</p><ul><li>请求转发的时候，URL不会发生跳转：307</li><li>重定向的时候，URL地址栏会发生变化：302</li></ul><h3 id="7Cookie，Session"><a href="#7Cookie，Session" class="headerlink" title="7Cookie，Session"></a>7Cookie，Session</h3><hr><h4 id="7-1会话"><a href="#7-1会话" class="headerlink" title="7.1会话"></a>7.1会话</h4><p><strong>会话</strong>：用户打开一个浏览器，点击了许多超链接，访问多个web资源，关闭浏览器，这个过程称为会话；</p><p><strong>有状态会话</strong>：一个同学来过教室，下次再来教室，我们就知道这个同学曾经来过，称之为有状态会话；</p><p>你怎么证明你是西开的学生？</p><p>​        你                     西开</p><p>​    1.发票            西开给你发票</p><p>​    2.学校登记      西开给你标记了你来过</p><p><strong>一个网站，怎么证明你来过？</strong></p><p>   客户端                  服务端</p><p>1.服务端给客户端一个信件，客户端下次访问服务器带上信件就可以了；cookie</p><p>2.服务器标记你来过了，下次你来的时候我匹配你；session</p><h4 id="7-2保存会话的两种技术"><a href="#7-2保存会话的两种技术" class="headerlink" title="7.2保存会话的两种技术"></a>7.2保存会话的两种技术</h4><p><strong>cookie</strong></p><ul><li>一种客户端技术（响应，请求）</li></ul><p>session</p><ul><li>服务器技术，利用这个技术可以保存用户的信息？我们可以吧信息或者数据放在Session中！</li></ul><p>常见常见：网站登录之后，你下次就不用在登陆了，第二次就直接登陆了</p><h4 id="7-3cookie"><a href="#7-3cookie" class="headerlink" title="7.3cookie"></a>7.3cookie</h4><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010174405338.png" alt="image-20201010174405338"></p><p>1.从请求中拿到cookie信息</p><p>2.服务器形影给客户端cookie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Cookie[] cookies = req.getCookies();<span class="comment">//获得cookie</span></span><br><span class="line">cookie.getName(); <span class="comment">//获得cookie中的key</span></span><br><span class="line">cookie.getValue();<span class="comment">//获得cookie中的值</span></span><br><span class="line"><span class="keyword">new</span> Cookie(<span class="string">&quot;lastLoginTime&quot;</span>, System.currentTimeMillis()+<span class="string">&quot;&quot;</span>);<span class="comment">//新建一个cookie</span></span><br><span class="line"> cookie.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);<span class="comment">//获得cookie的有效期</span></span><br><span class="line">resp.addCookie(cookie);<span class="comment">//响应给客户端</span></span><br></pre></td></tr></table></figure><p><strong>cookie：一般会保存在本地的用户目录下appdata</strong></p><p>一个网站的cookie是否存在上限！<strong>聊聊细节问题</strong></p><ul><li><p>一个cookie只能保存一个信息</p></li><li><p>一个web站点可以给浏览器发送多个cookie，最多存放20个cookie</p></li><li><p>cookie大小有限制4KB</p></li><li><p>300个cookie浏览器上限</p></li></ul><p><strong>删除cookie：</strong></p><ul><li>不设置有效期，关闭浏览器，自动失效；</li><li>设置有效期时间为0；</li></ul><p><strong>编码解码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">URLDecoder.decode(cookie.getValue(),<span class="string">&quot;utf-8&quot;</span>)<span class="comment">//解码</span></span><br><span class="line">URLEncoder.encode(<span class="string">&quot;罗诗涵&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>)<span class="comment">//编码</span></span><br></pre></td></tr></table></figure><h4 id="7-4Session（重点）"><a href="#7-4Session（重点）" class="headerlink" title="7.4Session（重点）"></a>7.4Session（重点）</h4><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010180937771.png" alt="image-20201010180937771"></p><p>设么是session：</p><ul><li>服务器会给每一个用户（浏览器），创建一个Session对象；</li><li>一个Session独占一个浏览器，只要浏览器没有关闭，这个Session就存在；</li><li>用户登录之后，整个网站他都可以访问！–&gt;保存用户的信息，保存购物车的信息….</li></ul><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010165156218.png" alt="image-20201010165156218"></p><p>Session和Cookie的区别：</p><ul><li>Cookie是吧用户的数据写给用户的浏览器，浏览器保存（可以保存多个）</li><li>Session把用户的数据写到用户独占的Session中，服务器端保存（保存重要的信息，减少服务器资源的浪费）</li><li>session对象由服务器创建</li></ul><p>使用场景：</p><ul><li>保存一个登陆用户的信息；</li><li>购物车信息；</li><li>在整个网站中经常会使用的数据，我们经常保存在Session中；</li></ul><p>使用session：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.poji.person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/10</span></span><br><span class="line"><span class="comment"> * time: 16:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SessionDemo01</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//解决乱码问题</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获得session</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给session存东西</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="keyword">new</span> person(<span class="string">&quot;罗诗涵&quot;</span>,<span class="number">1</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取Session的ID</span></span><br><span class="line">        String id = session.getId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断Session是不是新创建的</span></span><br><span class="line">        <span class="keyword">if</span> (session.isNew())</span><br><span class="line">        &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session创建成功，session的id为：&quot;</span>+id);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session已经创建过了&quot;</span>+id);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        //session创建的时候做了什么</span></span><br><span class="line"><span class="comment">//        Cookie cookie = new Cookie(&quot;JSESSIONID&quot;, id);</span></span><br><span class="line"><span class="comment">//        resp.addCookie(cookie);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">//获得session</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line"></span><br><span class="line">        person person = (person) session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(person.toString());</span><br><span class="line"></span><br><span class="line">  HttpSession session = req.getSession();</span><br><span class="line"></span><br><span class="line">        session.removeAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="comment">//手动注销session</span></span><br><span class="line">        session.invalidate();</span><br></pre></td></tr></table></figure><p>会话自动过期：web.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    设置默认的session生效时间--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--       15分钟后，session自动失效，以分钟为单位--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>1<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010181312553.png" alt="image-20201010181312553"></p><h3 id="8JSP"><a href="#8JSP" class="headerlink" title="8JSP"></a>8JSP</h3><h4 id="8-1什么事JSP"><a href="#8-1什么事JSP" class="headerlink" title="8.1什么事JSP"></a>8.1什么事JSP</h4><p>java Server Pages：java服务页端面，也和servlet一样，用于开发动态web技术！</p><p>最大的特点：</p><ul><li>写JSP就像在写HTML</li><li>区别：<ul><li>HTML只给用户提供静态的数据</li><li>JSP页面中可以嵌入java代码，为用户提供动态数据；</li></ul></li></ul><h4 id="8-2jsp原理"><a href="#8-2jsp原理" class="headerlink" title="8.2jsp原理"></a>8.2jsp原理</h4><p>思路：JSP到底是怎么执行的！</p><ul><li><p>代码层面没有任何问题</p></li><li><p>服务器内部工作</p><p>tomcat中有一个work目录；</p><p>IDEA中使用tomcat的会在IDEA的tomcat中生产一个work目录</p></li></ul><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010182319506.png" alt="image-20201010182319506"></p><p>​    发现页面变成了java程序</p><p>我的电脑的位置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="keyword">long</span>\AppData\Local\JetBrains\IntelliJIdea2020.<span class="number">1</span>\tomcat\Unnamed_javaweb-session-cookie\work\Catalina\localhost\r\org\apache\jsp</span><br></pre></td></tr></table></figure><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010182809581.png" alt="image-20201010182809581"></p><p><strong>浏览器向服务器发送请求，不管访问什么资源，都是在访问Servlet；</strong></p><p><strong>JSP最终会被转换成一个java类！</strong></p><p><strong>JSP本质上就是一个servlet！</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化 </span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//JSPservice</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspService</span><span class="params">(.HttpServletRequest request,.HttpServletResponse response)</span></span></span><br><span class="line"><span class="function"></span></span><br></pre></td></tr></table></figure><p>1.判断请求</p><p>2.内置了一些对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext;<span class="comment">//页面上下文</span></span><br><span class="line">javax.servlet.http.HttpSession session = <span class="keyword">null</span>;<span class="comment">//session</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application;<span class="comment">//applicationcontext</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config;<span class="comment">//config</span></span><br><span class="line">javax.servlet.jsp.JspWriter out = <span class="keyword">null</span>;<span class="comment">//out</span></span><br><span class="line"><span class="keyword">final</span> java.lang.Object page = <span class="keyword">this</span>;<span class="comment">//page:当前页</span></span><br><span class="line">HttpServletRequest request<span class="comment">//请求</span></span><br><span class="line">HttpServletResponse response<span class="comment">//访问</span></span><br></pre></td></tr></table></figure><p>3.输出页面前增加的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html&quot;</span>);<span class="comment">//设置相应的页面类型</span></span><br><span class="line">    pageContext = _jspxFactory.getPageContext(<span class="keyword">this</span>, request, response,</span><br><span class="line">    <span class="keyword">null</span>, <span class="keyword">true</span>, <span class="number">8192</span>, <span class="keyword">true</span>);</span><br><span class="line">    _jspx_page_context = pageContext;</span><br><span class="line">    application = pageContext.getServletContext();</span><br><span class="line">    config = pageContext.getServletConfig();</span><br><span class="line">    session = pageContext.getSession();</span><br><span class="line">    out = pageContext.getOut();</span><br><span class="line">    _jspx_out = out;</span><br></pre></td></tr></table></figure><p>4.以上的这些个对象我们可以在jsp页面中直接使用！</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201010190609421.png" alt="image-20201010190609421"></p><p>在JSP页面中：</p><p>只要是java代码就会不动的输出；</p><p>如果是HTML代码，就会被转换为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>这样的格式；</p><h4 id="8-3JSP的基础语法、"><a href="#8-3JSP的基础语法、" class="headerlink" title="8.3JSP的基础语法、"></a>8.3JSP的基础语法、</h4><p>任何语言都有自己的语法，java中有，jsp作为java技术的一种应用，他拥有自己一些自己扩充的语法（了解，知道即可！），java所有语法都支持！</p><h5 id="JSP表达式"><a href="#JSP表达式" class="headerlink" title="JSP表达式"></a><strong>JSP表达式</strong></h5><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--  jsp表达式</span><br><span class="line">  作用：用来将程序的输出，输出到客户端</span><br><span class="line">    &lt;%= 变量或表达式%&gt;</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%=<span class="keyword">new</span> java.util.Date()%&gt;</span><br></pre></td></tr></table></figure><h5 id="jsp脚本片段"><a href="#jsp脚本片段" class="headerlink" title="jsp脚本片段"></a><strong>jsp脚本片段</strong></h5><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;%--  jsp脚本片段--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">      sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    out.print(<span class="string">&quot;&lt;h1&gt;sum=&quot;</span>+sum+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">10</span>;</span><br><span class="line">        out.print(x);</span><br><span class="line">    %&gt;</span><br><span class="line">      &lt;p&gt;这是一个jsp文档&lt;/p&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">        <span class="keyword">int</span> y=<span class="number">10</span>;</span><br><span class="line">        out.print(y);</span><br><span class="line">    %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--  在代码中嵌入HTML元素--%&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    %&gt;</span><br><span class="line">    &lt;h1&gt;htllo long  &lt;%=i%&gt; &lt;/h1&gt;</span><br><span class="line">    &lt;%</span><br><span class="line">      &#125;</span><br><span class="line">    %&gt;</span><br></pre></td></tr></table></figure><h5 id="JSP声明"><a href="#JSP声明" class="headerlink" title="JSP声明"></a><strong>JSP声明</strong></h5><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">   <span class="keyword">static</span> &#123;</span><br><span class="line">     System.out.println(<span class="string">&quot;Loading Service&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> globalVar=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">llong</span><span class="params">()</span></span>&#123;</span><br><span class="line">  System.out.println(<span class="string">&quot;进入了方法&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>jsp声明：会被编译到jsp生成java的类中！其他的就会被生成到_jspService方法中！</p><p>在jsp中嵌入java代码即可！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%%&gt;</span><br><span class="line">&lt;%=%&gt;</span><br><span class="line">&lt;%!%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%-- --%&gt;</span><br></pre></td></tr></table></figure><p>JSP的注释，不会再客户端显示，HTML就会！</p><h4 id="8-4JSP指令"><a href="#8-4JSP指令" class="headerlink" title="8.4JSP指令"></a>8.4JSP指令</h4><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page args.... %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--两种指令的区别--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--<span class="meta">@include</span>会将两个页面合二为一--%&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;common/header.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;h1&gt;网页主主体&lt;/h1&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;common/footer.jsp&quot;</span>%&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;%--jsp:include相当于拼接页面--%&gt;</span><br><span class="line">&lt;%--jsp标签--%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;common/header.jsp&quot;</span>/&gt;</span><br><span class="line">    &lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;common/footer.jsp&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h4 id="8-5-9大内置对象"><a href="#8-5-9大内置对象" class="headerlink" title="8.5.9大内置对象"></a>8.5.9大内置对象</h4><ul><li><p>PageContext  存东西</p></li><li><p>Request   存东西</p></li><li><p>Response</p></li><li><p>Session   存东西</p></li><li><p>Application [ServletContext]  用来存东西</p></li><li><p>config [ServletConfig]</p></li><li><p>page，不用了解</p></li><li><p>out</p></li><li><p>exception</p></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute(<span class="string">&quot;name1&quot;</span>,<span class="string">&quot;郭修龙1&quot;</span>);<span class="comment">//保存的数据只在一个页面中有效</span></span><br><span class="line">   request.setAttribute(<span class="string">&quot;name2&quot;</span>,<span class="string">&quot;郭修龙2&quot;</span>);<span class="comment">//保存的数据只在依次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">   session.setAttribute(<span class="string">&quot;name3&quot;</span>,<span class="string">&quot;郭修龙3&quot;</span>);<span class="comment">//保存的数据在依次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">   application.setAttribute(<span class="string">&quot;name4&quot;</span>,<span class="string">&quot;郭修龙4&quot;</span>);<span class="comment">//保存的数据只在服务器中有效，从打开服务器到关闭服务器</span></span><br></pre></td></tr></table></figure><p>request：客户端向服务器发送请求，产生的数据，用户看完就没用了，比如：新闻，用户看完就没用了</p><p>session：客户端向服务器发送请求，产生的数据，用户看完还有用，比如：购物车；</p><p>application：客户端向服务器发送请求，产生的数据，一个用户用完了，其他用户还可以使用，比如：聊条数据；</p><h4 id="8-6JSP标签，JSTL标签，EL表达式"><a href="#8-6JSP标签，JSTL标签，EL表达式" class="headerlink" title="8.6JSP标签，JSTL标签，EL表达式"></a>8.6JSP标签，JSTL标签，EL表达式</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        JSTL表达式依赖--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/javax.servlet.jsp.jstl/jstl-api --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        standard标签库--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/taglibs/standard --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>EL表达式： ${}</p><ul><li>获取数据</li><li>执行运算</li><li>获取web开发的常用对象</li></ul><p><strong>JSP标签</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--jsp:include--%&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">http:<span class="comment">//localhost:8080/jsptag.jsp?name=kuangshen&amp;age=12</span></span><br><span class="line">--%&gt;</span><br><span class="line">&lt;h1&gt;1&lt;/h1&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;/jsptag2.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name1&quot;</span> value=<span class="string">&quot;name1&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name2&quot;</span> value=<span class="string">&quot;name2&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure><p><strong>JSTL表达式</strong></p><p>JSTL标签库的使用就是 为了你不HTML标签的不足；他自定义了许多标签，可以供我们使用，标签的功能和java代码一样。</p><p><strong>核心标签</strong>（掌握部分即可）</p><p><strong>格式化标签</strong></p><p><strong>SQL标签</strong></p><p><strong>XML标签</strong></p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201011101719797.png" alt="image-20201011101719797"></p><p>JSTL标签的使用步骤</p><ul><li><p>引入对应的taglib</p></li><li><p>使用其中的方法</p></li><li><p><strong>在Tomcat也需要引入jstl的包，否则就会报错：jstl解析错误</strong></p></li></ul><p>c: if</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;if测试&lt;/h1&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;coreif.jsp&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">&lt;%--    EL表达式获取表中的数据</span><br><span class="line">        $&#123;param.参数名&#125;</span><br><span class="line">--%&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;$&#123;param.username&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;%--判断如果登录的用户是管理员就登陆成功--%&gt;</span><br><span class="line">&lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;param.username==&#x27;admin&#x27;&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;isAdmin&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=&quot;管理员欢迎你&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;c:out value=&quot;$&#123;isAdmin&#125;&quot;&gt;&lt;/c:out&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--&lt;%--%&gt;</span><br><span class="line">&lt;%--    <span class="keyword">if</span>(request.getParameter(<span class="string">&quot;username&quot;</span>).equals(<span class="string">&quot;admin&quot;</span>))--%&gt;</span><br><span class="line">&lt;%--    &#123;--%&gt;</span><br><span class="line">&lt;%--        out.print(<span class="string">&quot;登陆成功&quot;</span>);--%&gt;</span><br><span class="line">&lt;%--    &#125;--%&gt;</span><br><span class="line">&lt;%--%&gt;--%&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>c: which</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--定义一个变量score，值为<span class="number">85</span>--%&gt;</span><br><span class="line">&lt;c:set var=&quot;成绩&quot; value=&quot;90&quot;&gt;&lt;/c:set&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;成绩&gt;=90&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;c:out value=&quot;你的成绩为优秀&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;成绩&lt;90&#125;&quot;</span>&gt;</span><br><span class="line">        &lt;c:out value=&quot;难道你是罗诗涵吗？&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>c: foreach</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    ArrayList&lt;String&gt; people = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    people.add(<span class="number">0</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    people.add(<span class="number">1</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    people.add(<span class="number">2</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    people.add(<span class="number">3</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    people.add(<span class="number">4</span>,<span class="string">&quot;罗诗涵&quot;</span>);</span><br><span class="line">    people.add(<span class="number">5</span>,<span class="string">&quot;郭大爷&quot;</span>);</span><br><span class="line">    request.setAttribute(<span class="string">&quot;list&quot;</span>,people);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--</span><br><span class="line"><span class="keyword">var</span>   每一次遍历出来的变量</span><br><span class="line">items   要遍历的对象</span><br><span class="line">begin   开始</span><br><span class="line">end     结束</span><br><span class="line">step    步长</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;people&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=&quot;$&#123;people&#125;&quot;&gt;&lt;/c:out&gt;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;people&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;3&quot;</span> step=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=&quot;$&#123;people&#125;&quot;&gt;&lt;/c:out&gt;&lt;br&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><h3 id="9-javaBean"><a href="#9-javaBean" class="headerlink" title="9.javaBean"></a>9.javaBean</h3><p>实体类</p><p>Javabean有特定的写法：</p><ul><li>必须要有一个无参构造</li><li>属性必须私有化</li><li>必须有对应的set/get方法</li></ul><p>一般用来和数据库做映射   ORM；</p><p>ORM：对象关系映射</p><ul><li>表–&gt;类</li><li>字段–&gt;属性</li><li>行记录–&gt;对象</li></ul><table><thead><tr><th>id</th><th>name</th><th>age</th><th>adderss</th></tr></thead><tbody><tr><td>1</td><td>郭修龙1</td><td>3</td><td>青岛</td></tr><tr><td>2</td><td>郭修龙2</td><td>4</td><td>青岛</td></tr><tr><td>3</td><td>郭修龙3</td><td>5</td><td>青岛</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Paople</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="keyword">new</span> People(<span class="number">1</span>,<span class="string">&quot;郭修龙1&quot;</span>,<span class="number">3</span>,<span class="string">&quot;青岛&quot;</span>);</span><br><span class="line">    <span class="keyword">new</span> People(<span class="number">1</span>,<span class="string">&quot;郭修龙2&quot;</span>,<span class="number">4</span>,<span class="string">&quot;青岛&quot;</span>);</span><br><span class="line">    <span class="keyword">new</span> People(<span class="number">1</span>,<span class="string">&quot;郭修龙3&quot;</span>,<span class="number">5</span>,<span class="string">&quot;青岛&quot;</span>);</span><br><span class="line">`</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10三层架构"><a href="#10三层架构" class="headerlink" title="10三层架构"></a>10三层架构</h3><hr><p>什么是MVC：Model   view    Controller  模型，视图，控制器</p><h4 id="10-1早些年"><a href="#10-1早些年" class="headerlink" title="10.1早些年"></a>10.1早些年</h4><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201011145824785.png" alt="image-20201011145824785"></p><p>用户直接访问数据库，控制层就可以直接操作数据库；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">servlet---CRUD---数据库</span><br><span class="line">数据：程序十分臃肿，数据库不易维护     servlet的代码中：处理请求，响应，视图跳转，处理JDBC，处理业务代码，处理逻辑代码</span><br><span class="line">    </span><br><span class="line">    架构：没有什么是加一层是解决不了的！</span><br><span class="line">    程序员</span><br><span class="line">    |</span><br><span class="line">    JDBC</span><br><span class="line">    |</span><br><span class="line">MySQL，Oracle，SQLserver....</span><br></pre></td></tr></table></figure><h4 id="10-2MVC三层架构"><a href="#10-2MVC三层架构" class="headerlink" title="10.2MVC三层架构"></a>10.2MVC三层架构</h4><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201011150822440.png" alt="image-20201011150822440"></p><p>Model：</p><ul><li>业务处理：业务逻辑（service）</li><li>数据持久层：CRUD （Dao）</li></ul><p>View：</p><ul><li>展示数据</li><li>提供链接发起Servlet请求（a,form,img…）</li></ul><p>Controller:（servlet）</p><ul><li><p>接收用户的请求：（req：请求参数，session信息）</p></li><li><p>交给业务层处理对应的代码</p></li><li><p>控制视图的跳转</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录-----&gt;接收雍虎德登录请求-----&gt;处理雍虎德请求（获取用户登录的参数，username，password）----&gt;交给业务层处理登陆业务（判断用户名密码正确：事务）------&gt;Dao层查询用户名和密码是否正确----&gt;数据库</span><br></pre></td></tr></table></figure><h3 id="11过滤器（Filter）（重点）"><a href="#11过滤器（Filter）（重点）" class="headerlink" title="11过滤器（Filter）（重点）"></a>11过滤器（Filter）（重点）</h3><hr><p>Filter:过滤器，用来过滤网站的数据；</p><ul><li>处理中文乱码</li><li>登录验证</li></ul><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201011152148973.png" alt="image-20201011152148973"></p><p>Filter开发步骤：</p><p>1.导包</p><p>2.编写过滤器</p><p>​    1.导包不要错</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201011153111778.png" alt="image-20201011153111778"></p><p>实现filter接口，重写对应的方法即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//web服务器启东时他就初始化了，随时等待对象出现</span></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;初始化&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> chain</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> 1.过滤中的所有代码，在过滤特定请求时都会执行</span></span><br><span class="line"><span class="comment"> 2.必须要让过滤器据需同行</span></span><br><span class="line"><span class="comment">        chain.doFilter(request, response);</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    request.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">    response.setContentType(<span class="string">&quot;text/heml;charset=utf-8&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    System.out.println(<span class="string">&quot;执行前....&quot;</span>);</span><br><span class="line">    chain.doFilter(request, response);<span class="comment">//让我们的请求据需走，如果不写，程序到这里拦截停止</span></span><br><span class="line">    System.out.println(<span class="string">&quot;执行后....&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//销毁：web服务器关闭的时候，过滤会销毁</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;销毁&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在web.xml中配置Filter过滤器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        只要是/servlet的任何请求都会经过过滤器--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/servlet/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="12监听器"><a href="#12监听器" class="headerlink" title="12监听器"></a>12监听器</h3><hr><p>实现一个监听器的接口：（有N种）</p><p>1.编写一个监听器</p><p>​    实现监听器的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建session监听：看你的一举一动</span></span><br><span class="line">    <span class="comment">//一旦创建一个session，就会触发一次这个事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">        ServletContext ctx = se.getSession().getServletContext();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;当前&quot;</span>+se.getSession().getId());</span><br><span class="line"></span><br><span class="line">        Integer onlineCount = (Integer)ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(onlineCount==<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            onlineCount=<span class="keyword">new</span> Integer(<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> count=onlineCount.intValue();</span><br><span class="line"></span><br><span class="line">            onlineCount=<span class="keyword">new</span> Integer(count+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//销毁session监听</span></span><br><span class="line"><span class="comment">//一旦销毁一个session，就会触发一次这个事件</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class="line">        ServletContext ctx = se.getSession().getServletContext();</span><br><span class="line">        Integer onlineCount = (Integer)ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(onlineCount==<span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            onlineCount=<span class="keyword">new</span> Integer(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> count=onlineCount.intValue();</span><br><span class="line"></span><br><span class="line">            onlineCount=<span class="keyword">new</span> Integer(count-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">session销毁：</span></span><br><span class="line"><span class="comment">1.手动销毁   getsession（）.invalidate（）</span></span><br><span class="line"><span class="comment">2.自动销毁</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>2.web.xml中注册监听器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    注册监听器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>com.listener.OnlineCounterLisrener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.看情况是否使用</p><h3 id="13过滤器，监听器常见应用"><a href="#13过滤器，监听器常见应用" class="headerlink" title="13过滤器，监听器常见应用"></a>13过滤器，监听器常见应用</h3><p><strong>监听器：GUI编程中经常使用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestPanel</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Frame frame = <span class="keyword">new</span> Frame(<span class="string">&quot;中秋节快乐&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Panel panel = <span class="keyword">new</span> Panel(<span class="keyword">null</span>);</span><br><span class="line">        frame.setLayout(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">        frame.setBounds(<span class="number">200</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        frame.setBackground(<span class="keyword">new</span> Color(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"></span><br><span class="line">        panel.setBounds(<span class="number">50</span>,<span class="number">50</span>,<span class="number">300</span>,<span class="number">300</span>);</span><br><span class="line">        panel.setBackground(<span class="keyword">new</span> Color(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        frame.add(panel);</span><br><span class="line"></span><br><span class="line">        frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//监听事件</span></span><br><span class="line">        frame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.windowClosing(e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用户登录后才能进入首页！用户注销后不能进入主页了！</p><p>1.用户登录之后，向session中放入用户的数据</p><p>2.进入主页的时候要判断用户是否已经登录；要求：在过滤器中实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    HttpServletRequest req = (HttpServletRequest) request;</span><br><span class="line">    HttpServletResponse resp = (HttpServletResponse) response;</span><br><span class="line">    <span class="keyword">if</span>((req.getSession().getAttribute(<span class="string">&quot;USER_SESSION&quot;</span>))==<span class="keyword">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="number">12345</span>);</span><br><span class="line">        resp.sendRedirect(<span class="string">&quot;/error.jsp&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//System.out.println(&quot;guolv&quot;);</span></span><br><span class="line">    chain.doFilter(request,response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14JDBC复习"><a href="#14JDBC复习" class="headerlink" title="14JDBC复习"></a>14JDBC复习</h3><hr><p>什么是JDBC：java连接数据库。</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201011192125673.png" alt="image-20201011192125673"></p><p>需要jar包的支持：</p><ul><li>java.sql</li><li>javax.sql</li><li>mysql.conneter-java…连接驱动必须要的</li></ul><p><strong>实验环境搭建</strong></p><ul><li><p>创建数据库</p></li><li><p>导入数据库依赖</p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--        mysql驱动--&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;8.0.20&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ul><li>IDEA中连接数据库</li></ul><p>JDBC固定步骤：</p><p>1.加载驱动</p><p>2.连接数据库，代表数据库</p><p>3.向数据库发送SQL的对象statement：CRUD</p><p>4.编写SQL（根据业务，不同的SQL）</p><p>5.执行查询SQL，返回一个resultset ： 结果集</p><p>6.关闭连接，释放资源（一定要做）先开后关</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">jdbcTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">        <span class="comment">//配置信息</span></span><br><span class="line">        <span class="comment">//useUnicode=true&amp;characterEncoding=utf-8  解决中文乱码</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://localhost:3306/jdbc?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class="line">        String username= <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password= <span class="string">&quot;1111&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">        <span class="comment">//2.获取数据库连接,代表数据库</span></span><br><span class="line">        Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.向数据库发送SQL的对象statement</span></span><br><span class="line">        Statement statement = connection.createStatement();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.编写SQL</span></span><br><span class="line">        String sql=<span class="string">&quot;select * from people&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.执行查询SQL，返回一个resultset ： 结果集</span></span><br><span class="line">        ResultSet rs = statement.executeQuery(sql);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (rs.next())</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id&quot;</span>+rs.getObject(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//6.关闭连接，释放资源（一定要做）先开后关</span></span><br><span class="line">        rs.close();</span><br><span class="line">        statement.close();</span><br><span class="line">        connection.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>预编译SQL</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException </span>&#123;</span><br><span class="line">    <span class="comment">//配置信息</span></span><br><span class="line">    <span class="comment">//useUnicode=true&amp;characterEncoding=utf-8  解决中文乱码</span></span><br><span class="line">    String url=<span class="string">&quot;jdbc:mysql://localhost:3306/jdbc?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class="line">    String username= <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    String password= <span class="string">&quot;1111&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.加载驱动</span></span><br><span class="line">    Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">    <span class="comment">//2.获取数据库连接,代表数据库</span></span><br><span class="line">    Connection connection = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.编写SQL</span></span><br><span class="line">    String sql=<span class="string">&quot;insert into people(id) values(?)&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.预编译</span></span><br><span class="line">    PreparedStatement preparedStatement = connection.prepareStatement(sql);</span><br><span class="line"></span><br><span class="line">    preparedStatement.setInt(<span class="number">1</span>,<span class="number">12</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.执行SQL</span></span><br><span class="line">    <span class="keyword">int</span> i = preparedStatement.executeUpdate();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;插入成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    preparedStatement.close();</span><br><span class="line">    connection.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>事务：</p><p>要么都成功，要么都失败！</p><p>ACID原则：保证数据安全。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">开启事务</span><br><span class="line">事务提交commit（）</span><br><span class="line">事务回滚rollback（）</span><br><span class="line">关闭事务</span><br><span class="line"></span><br><span class="line">转账：</span><br><span class="line">A：</span><br><span class="line">B：1000</span><br><span class="line">C：1000</span><br><span class="line"></span><br><span class="line">A（900）---100--&gt;B（1100）</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>Junit单元测试</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简单使用</p><p>@Test注解只有在方法上有用，只要在方法上加了这个注解，方法就可以运行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;测试&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>正确示范：</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201012165327353.png" alt="image-20201012165327353"></p><p>错误示范：</p><p><img src="/2020/10/12/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201012165429619.png" alt="image-20201012165429619"></p><p><strong>搭建一个环境</strong></p><p>数据库事务回滚：（提示：一定要开启事务）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">        <span class="comment">//配置信息</span></span><br><span class="line">        <span class="comment">//useUnicode=true&amp;characterEncoding=utf-8  解决中文乱码</span></span><br><span class="line">        String url=<span class="string">&quot;jdbc:mysql://localhost:3306/jdbc?useUnicode=true&amp;characterEncoding=utf-8&quot;</span>;</span><br><span class="line">        String username= <span class="string">&quot;root&quot;</span>;</span><br><span class="line">        String password= <span class="string">&quot;1111&quot;</span>;</span><br><span class="line"></span><br><span class="line">        Connection connection=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.加载驱动</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.获取数据库连接,代表数据库</span></span><br><span class="line">        connection = DriverManager.getConnection(url, username, password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.通知数据库开启事务,false是开启</span></span><br><span class="line">        connection.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        String sql1=<span class="string">&quot;update people set age=age+100 where id=1&quot;</span>;</span><br><span class="line">        connection.prepareStatement(sql1).executeUpdate();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.制造错误</span></span><br><span class="line"><span class="comment">//        int i=1/0;</span></span><br><span class="line"></span><br><span class="line">        String sql2=<span class="string">&quot;update people set age=age+100 where id=1&quot;</span>;</span><br><span class="line">        connection.prepareStatement(sql1).executeUpdate();</span><br><span class="line"></span><br><span class="line">        connection.commit();<span class="comment">//以上两条SQL都执行成功了就提交事务</span></span><br><span class="line">        System.out.println(<span class="string">&quot;提交成功&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//如果出现异常，就通知数据库处理事务</span></span><br><span class="line">                connection.rollback();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                connection.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException throwables) &#123;</span><br><span class="line">                throwables.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;JavaWeb学习笔记&quot;&gt;&lt;a href=&quot;#JavaWeb学习笔记&quot; class=&quot;headerlink&quot; title=&quot;JavaWeb学习笔记&quot;&gt;&lt;/a&gt;JavaWeb学习笔记&lt;/h2&gt;</summary>
    
    
    
    <category term="javaweb" scheme="http://www.acrazydragon.github.io/categories/javaweb/"/>
    
    
    <category term="javaweb" scheme="http://www.acrazydragon.github.io/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>关于ubuntu用户目录下没有.ssh文件夹的问题解决</title>
    <link href="http://www.acrazydragon.github.io/2020/10/03/2020-10-3-%E5%85%B3%E4%BA%8Eubuntu%E7%94%A8%E6%88%B7%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%B2%A1%E6%9C%89.ssh%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://www.acrazydragon.github.io/2020/10/03/2020-10-3-%E5%85%B3%E4%BA%8Eubuntu%E7%94%A8%E6%88%B7%E7%9B%AE%E5%BD%95%E4%B8%8B%E6%B2%A1%E6%9C%89.ssh%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</id>
    <published>2020-10-03T12:49:43.000Z</published>
    <updated>2020-10-15T11:00:25.451Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于ubuntu用户目录下没有-ssh文件夹的问题解决"><a href="#关于ubuntu用户目录下没有-ssh文件夹的问题解决" class="headerlink" title="关于ubuntu用户目录下没有.ssh文件夹的问题解决"></a>关于ubuntu用户目录下没有<code>.ssh</code>文件夹的问题解决</h2><a id="more"></a><h3 id="关于ubuntu用户目录下没有-ssh文件夹的问题解决-1"><a href="#关于ubuntu用户目录下没有-ssh文件夹的问题解决-1" class="headerlink" title="关于ubuntu用户目录下没有.ssh文件夹的问题解决"></a>关于ubuntu用户目录下没有<code>.ssh</code>文件夹的问题解决</h3><p>原因分析：因为<code>.ssh</code>是记录密码信息的文件夹，如果没有登陆过<code>root</code>账户的话就不会有<code>.ssh</code>文件夹，因此登录依次<code>localhost</code>就可以了。</p><p>解决问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure><p>执行一次上诉命令，即可使得问题解决。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;关于ubuntu用户目录下没有-ssh文件夹的问题解决&quot;&gt;&lt;a href=&quot;#关于ubuntu用户目录下没有-ssh文件夹的问题解决&quot; class=&quot;headerlink&quot; title=&quot;关于ubuntu用户目录下没有.ssh文件夹的问题解决&quot;&gt;&lt;/a&gt;关于ubuntu用户目录下没有&lt;code&gt;.ssh&lt;/code&gt;文件夹的问题解决&lt;/h2&gt;</summary>
    
    
    
    <category term="Ubuntu笔记" scheme="http://www.acrazydragon.github.io/categories/Ubuntu%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Ubuntu笔记" scheme="http://www.acrazydragon.github.io/tags/Ubuntu%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>dpkg被中断问题解决方法</title>
    <link href="http://www.acrazydragon.github.io/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://www.acrazydragon.github.io/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-10-02T13:52:47.000Z</published>
    <updated>2020-10-20T07:39:45.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu安装软件过程中出现的dpkg被中断问题解决方法"><a href="#Ubuntu安装软件过程中出现的dpkg被中断问题解决方法" class="headerlink" title="Ubuntu安装软件过程中出现的dpkg被中断问题解决方法"></a><strong>Ubuntu安装软件过程中出现的dpkg被中断问题解决方法</strong></h2><a id="more"></a><h3 id="Ubuntu安装软件过程中出现的dpkg被中断问题解决方法-1"><a href="#Ubuntu安装软件过程中出现的dpkg被中断问题解决方法-1" class="headerlink" title="Ubuntu安装软件过程中出现的dpkg被中断问题解决方法"></a><strong>Ubuntu安装软件过程中出现的dpkg被中断问题解决方法</strong></h3><p>在安装ssh过程中出现dpkg被中断的现象，如图：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/source/assets/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002213917673-1603179099767.png" alt="image-20201002213917673"></p><p>然而根据提示进行操作，并没有解决问题：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/source/assets/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002213949697-1603179102766.png" alt="image-20201002213949697"></p><h4 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h4><p>这个问题的主要原因是因为/var/lib/dpkg/updates文件下的文件有问题，可能是其他软件安装过程或是其他原因导致的，这里删除掉然后重建即可</p><p>解决方案：</p><blockquote><p>1.执行<code>sudo rm /var/lib/dpkg/updates/*</code> 删除文件夹下的文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;updates&#x2F;*</span><br></pre></td></tr></table></figure><blockquote><p>2.然后执行<code>sudo apt-get update</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/source/assets/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002214805141-1603179111210.png" alt="image-20201002214805141"></p><blockquote><p>3.最后执行<code>sudo apt-get upgrade</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/source/assets/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002214946375-1603179113101.png" alt="image-20201002214946375"></p><blockquote><p>4.进行到这一步已经解决问题啦，重新运行安装软件命令行，发现成功啦</p></blockquote><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/source/assets/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002215121030-1603179114800.png" alt="image-20201002215121030"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Ubuntu安装软件过程中出现的dpkg被中断问题解决方法&quot;&gt;&lt;a href=&quot;#Ubuntu安装软件过程中出现的dpkg被中断问题解决方法&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu安装软件过程中出现的dpkg被中断问题解决方法&quot;&gt;&lt;/a&gt;&lt;strong&gt;Ubuntu安装软件过程中出现的dpkg被中断问题解决方法&lt;/strong&gt;&lt;/h2&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="http://www.acrazydragon.github.io/categories/ubuntu/"/>
    
    <category term="dpkg" scheme="http://www.acrazydragon.github.io/categories/ubuntu/dpkg/"/>
    
    
    <category term="ubuntu" scheme="http://www.acrazydragon.github.io/tags/ubuntu/"/>
    
    <category term="dpkg" scheme="http://www.acrazydragon.github.io/tags/dpkg/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu笔记</title>
    <link href="http://www.acrazydragon.github.io/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/"/>
    <id>http://www.acrazydragon.github.io/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/</id>
    <published>2020-09-28T12:29:03.000Z</published>
    <updated>2020-10-15T11:00:19.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu学习笔记，基础知识点。"><a href="#ubuntu学习笔记，基础知识点。" class="headerlink" title="ubuntu学习笔记，基础知识点。"></a>ubuntu学习笔记，基础知识点。</h2><a id="more"></a><p>常用命令：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu总结/image-20200918211130919.png" alt="image-20200918211130919" style="zoom:50%;"><h3 id="1Linux终端命令格式："><a href="#1Linux终端命令格式：" class="headerlink" title="1Linux终端命令格式："></a>1Linux终端命令格式：</h3><ul><li>command [-options] [parameter]</li></ul><blockquote><p>说明：1.command：命令名，相应功能的英文单词的缩写。</p><p>​          2.[-options]：选项，可以用来对命令进行控制，也可以省略。</p><p>​          3.parameter：传给命令的参数，可以是零个，一个或者多个。</p></blockquote><p>​     <u>注：”[ ]”的意思是可以选也可以不选。</u></p><h3 id="2查询命令帮助信息（知道）"><a href="#2查询命令帮助信息（知道）" class="headerlink" title="2查询命令帮助信息（知道）"></a>2查询命令帮助信息（知道）</h3><ul><li>现阶段只需要知道通过两种方式查询命令的帮助信息。</li><li>先学习常用命令及常用选项即可，工作中如果遇到问题可以借助网络进行搜索。</li></ul><h4 id="2-1–help"><a href="#2-1–help" class="headerlink" title="2.1–help"></a>2.1–help</h4><ul><li><u>command-help</u></li></ul><blockquote><p>说明：command命令的帮助信息。</p></blockquote><h4 id="2-2man"><a href="#2-2man" class="headerlink" title="2.2man"></a>2.2man</h4><ul><li><u>man command</u></li></ul><blockquote><p>说明：查询command命令的使用手册。</p><p>man是manual的缩写，是Linux提供的一个手册，包含了绝大部分的命令，函数的详细使用的说明。</p></blockquote><p>man的基本操作键位：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200918214257193-1601992202938.png" alt="image-20200918214257193" style="zoom:50%;"><h3 id="文件和目录常用命令："><a href="#文件和目录常用命令：" class="headerlink" title="文件和目录常用命令："></a>文件和目录常用命令：</h3><h5 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h5><ul><li>查看目录内容：ls</li><li>切换目录：cd</li><li>创建和删除操作：touch，rm，mkdir</li><li>拷贝和移动文件：cp，mv</li><li>查看文件内容：cat，more，grep</li><li>其他：echo，重定向&gt;和&gt;&gt;，管道 |</li></ul><h4 id="01查看目录内容"><a href="#01查看目录内容" class="headerlink" title="01查看目录内容"></a>01查看目录内容</h4><h5 id="1-1终端实用技巧"><a href="#1-1终端实用技巧" class="headerlink" title="1.1终端实用技巧"></a>1.1终端实用技巧</h5><h6 id="1自动补全"><a href="#1自动补全" class="headerlink" title="1自动补全"></a>1自动补全</h6><ul><li>在敲出文件/目录/命令 的前几个字母之后，按下 tab键<ul><li>如果输入没有歧义，系统自动补全。</li><li>如果还存在其他文件/目录/命令，再按一下tab键，系统会提示可能存在的命令。</li></ul></li></ul><h6 id="2曾经使用过的命令"><a href="#2曾经使用过的命令" class="headerlink" title="2曾经使用过的命令"></a>2曾经使用过的命令</h6><ul><li>按  上/下 光标可以在曾经使用过的命令之间来回切换。</li><li>如果想要退出选项，并且不想执行当前选中的命令，可以按 ctrl + c。</li></ul><h5 id="1-2ls命令说明"><a href="#1-2ls命令说明" class="headerlink" title="1.2ls命令说明"></a>1.2ls命令说明</h5><ul><li>ls是英文单词list的简写，其功能为列出目录的内容，是用户最常用的命令之一，类似于DOS下的dir命令。</li></ul><p>Linux下文件和睦路的特点：</p><ul><li>Linux文件或者目录名称最长可以有 256 个字符</li><li>以  .   开头的文件为隐藏文件，需要用  -a   参数才能显示</li><li>.   代表当前目录。</li><li>..   代表上一级目录。</li></ul><p>ls常用选项：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919152103953-1601992215731.png" alt="image-20200919152103953" style="zoom:50%;"><h5 id="1-3ls通配符的使用"><a href="#1-3ls通配符的使用" class="headerlink" title="1.3ls通配符的使用"></a>1.3ls通配符的使用</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919152934049-1601992220110.png" alt="image-20200919152934049" style="zoom:50%;"><h4 id="02切换目录"><a href="#02切换目录" class="headerlink" title="02切换目录"></a>02切换目录</h4><h5 id="2-1cd"><a href="#2-1cd" class="headerlink" title="2.1cd"></a>2.1cd</h5><ul><li><p>cd  是英文单词嫦娥 directory 的缩写，其功能为更改当前的工作目录，也是用户最常用的命令之一。</p><p>注意：Linux所有的目录和文件夹名都是大小写敏感的。</p></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919153529897-1601992222862.png" alt="image-20200919153529897" style="zoom:50%;"><h5 id="2-2相对路径和绝对路径"><a href="#2-2相对路径和绝对路径" class="headerlink" title="2.2相对路径和绝对路径"></a>2.2相对路径和绝对路径</h5><ul><li>相对路径 ：在输入路径时，最前面不是 / 或者 ~，表示相对 当前目录所在的目录位置。</li><li>绝对路径 ：在输入路径时，最前面是 /  或者 ~，表示从根目录/家目录 开始具体目录位置。</li></ul><h4 id="03创建和删除操作"><a href="#03创建和删除操作" class="headerlink" title="03创建和删除操作"></a>03创建和删除操作</h4><h5 id="3-1touch"><a href="#3-1touch" class="headerlink" title="3.1touch"></a>3.1touch</h5><ul><li>创建文件或修改文件<ul><li>如果文件不存在，可以创建一个空白文件。</li><li>如果文件已经存在，可以修改文件末次修改日期。</li></ul></li></ul><h5 id="3-2mkdir"><a href="#3-2mkdir" class="headerlink" title="3.2mkdir"></a>3.2mkdir</h5><ul><li>创建一个新的目录</li></ul><blockquote><p>-p      可以递归创建目录。</p><p>新目录的名称  不能与当前目录中已有的目录或文件同名。</p></blockquote><h5 id="3-3rm"><a href="#3-3rm" class="headerlink" title="3.3rm"></a>3.3rm</h5><ul><li>可以删除文件和目录</li></ul><blockquote><p>使用   rm  命令要小心，因为文件删除后不能恢复。</p><p>使用rm的时候也可以使用通配符进行操作。</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919155443260-1601992228659.png" alt="image-20200919155443260" style="zoom:50%;"><h4 id="04拷贝和移动文件"><a href="#04拷贝和移动文件" class="headerlink" title="04拷贝和移动文件"></a>04拷贝和移动文件</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919160048797-1601992230471.png" alt="image-20200919160048797" style="zoom:50%;"><h5 id="4-1tree"><a href="#4-1tree" class="headerlink" title="4.1tree"></a>4.1tree</h5><ul><li>tree 命令可以以树状图列出文件目录结构。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919160159837-1601992233396.png" alt="image-20200919160159837" style="zoom:50%;"><h5 id="4-2cp"><a href="#4-2cp" class="headerlink" title="4.2cp"></a>4.2cp</h5><ul><li>cp 命令的功能是将给出的文件 或 目录复制到另一个文件 或 目录中，相当于DOS下的copy命令。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919160936308-1601992234706.png" alt="image-20200919160936308" style="zoom:50%;"><h5 id="4-3mv"><a href="#4-3mv" class="headerlink" title="4.3mv"></a>4.3mv</h5><ul><li>mv 命令可以用来移动文件或目录，也可以给文件或目录重命名。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919162603461-1601992238835.png" alt="image-20200919162603461" style="zoom:50%;"><h4 id="05查看文件内容"><a href="#05查看文件内容" class="headerlink" title="05查看文件内容"></a>05查看文件内容</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919163131083-1601992237414.png" alt="image-20200919163131083" style="zoom:50%;"><h5 id="5-1cat"><a href="#5-1cat" class="headerlink" title="5.1cat"></a>5.1cat</h5><ul><li>cat 命令可以用来查看文件内容，创建文件，文件合并，追加问价那内容等功能。</li><li>cat  会一次显示所有的内容，适合查看内容较少的文本文件。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919164005314-1601992241676.png" alt="image-20200919164005314" style="zoom:50%;"><blockquote><p>Linux中海油一个nl的命令和 cat    -b    的效果等价。</p></blockquote><h5 id="5-2more"><a href="#5-2more" class="headerlink" title="5.2more"></a>5.2more</h5><ul><li>more命令可以用于分屏显示文件内容，每次只显示一页内容。</li><li>适合于查看内容较多的文本文件。</li></ul><h5 id="5-3grep"><a href="#5-3grep" class="headerlink" title="5.3grep"></a>5.3grep</h5><ul><li>Linux系统中 grep 命令是一种强大的搜索工具。</li><li><code>grep</code> 允许对文本进行 模式查找，所谓模式查找，又被称为正则表达式。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919164453274-1601992244334.png" alt="image-20200919164453274" style="zoom:50%;"><ul><li>常用的两种查找模式。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919164529345-1601992245890.png" alt="image-20200919164529345" style="zoom:50%;"><h4 id="06其他"><a href="#06其他" class="headerlink" title="06其他"></a>06其他</h4><h5 id="6-1echo-文字内容"><a href="#6-1echo-文字内容" class="headerlink" title="6.1echo 文字内容"></a>6.1echo 文字内容</h5><ul><li><code>echo</code>  会在终端中显示参数指定的文字，通常会和重定向联合使用。</li></ul><h5 id="6-2重定向-gt-和-gt-gt"><a href="#6-2重定向-gt-和-gt-gt" class="headerlink" title="6.2重定向&gt;和&gt;&gt;"></a>6.2重定向&gt;和&gt;&gt;</h5><ul><li>Linux允许将命令执行结果重定向到一个文件。</li><li>将本应该显示在终端上的内容输出/追加到指定文件中</li></ul><p>其中</p><ul><li><code>&gt;</code>表示输出，会覆盖文件原有内容。</li><li><code>&gt;&gt;</code>表示追加，会将内容追加到已有文件的末尾。</li></ul><h5 id="6-3管道"><a href="#6-3管道" class="headerlink" title="6.3管道"></a>6.3管道</h5><ul><li><p>Linux允许将一个命令的输出可以通过管道作为另一个</p></li><li><p>可以理解现实生活中的管子，罐子的一头塞东西进去，另一头取出来，这里 ‘ | ’的左右分为两端，左端塞东西（写），右边取东西（读）。</p></li></ul><p>常用的命令有：</p><ul><li><code>more</code>：分屏显示内容</li><li><code>grep</code>：在命令执行结果的基础上查询指定的文本。</li></ul><h3 id="远程管理常用命令："><a href="#远程管理常用命令：" class="headerlink" title="远程管理常用命令："></a>远程管理常用命令：</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><ul><li><p>关机/重启</p><ul><li><code>shutdown</code></li></ul></li><li><p>查看配置网卡信息</p><ul><li><code>config</code></li><li><code>ping</code></li></ul></li><li><p>远程登录和复制文件</p><ul><li><code>ssh</code></li><li><code>scp</code></li></ul></li></ul><h4 id="01关机-重启"><a href="#01关机-重启" class="headerlink" title="01关机/重启"></a>01关机/重启</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002191508436.png" alt="image-20201002191508436" style="zoom:50%;"><h5 id="1-1shutdown"><a href="#1-1shutdown" class="headerlink" title="1.1shutdown"></a>1.1shutdown</h5><ul><li>shutdown``命令可以安全关闭或者重新自动系统</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/image-20201002191744472.png" alt="image-20201002191744472" style="zoom:50%;"><blockquote><p>提示：</p><ul><li>不指定选项和参数，默认一分钟后关闭电脑</li><li>远程维护服务器时，最好不要关闭系统，而应该重新启动系统</li></ul></blockquote><ul><li>常用命令示例</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002192123168.png" alt="image-20201002192123168" style="zoom:50%;"><h4 id="02查看或配置网卡信息"><a href="#02查看或配置网卡信息" class="headerlink" title="02查看或配置网卡信息"></a>02查看或配置网卡信息</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002192341769.png" alt="image-20201002192341769" style="zoom:50%;"><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002193918500.png" alt="image-20201002193918500" style="zoom:50%;"><h5 id="2-1网卡和IP配置"><a href="#2-1网卡和IP配置" class="headerlink" title="2.1网卡和IP配置"></a>2.1网卡和IP配置</h5><p>网卡</p><ul><li>网卡是一个专门负责网络通讯的硬件设备</li><li><strong>IP地址</strong>是设置在网卡上的地址信息</li></ul><blockquote><p>我们可以吧<strong>电脑</strong>比作<strong>电话</strong>，<strong>网卡</strong>相当于<strong>SIM卡</strong>，<strong>IP地址</strong>相当于<strong>电话号码</strong></p></blockquote><p>IP地址</p><ul><li>每台联网的电脑上都有IP地址，是保证电脑之间正常通讯的重要设置</li></ul><blockquote><p>注意：每台电脑的IP地址不能相同，否则会出现IP地址冲突，并且没有办法正常通讯</p></blockquote><h5 id="2-2ifconfig"><a href="#2-2ifconfig" class="headerlink" title="2.2ifconfig"></a>2.2ifconfig</h5><ul><li><code>ifconfig</code>可以查看/配置计算机当前的网卡配置信息</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002193943544.png" alt="image-20201002193943544" style="zoom:50%;"><blockquote><p>提示：一台计算机可能有一个<strong>物理网卡</strong>和多个<strong>虚拟网卡</strong>，在Linux中物理网卡的名字通常以<code>ensXXX</code>表示</p></blockquote><ul><li><code>127.0.0.1</code>被视为<code>本地循环</code>/<code>环回地址</code>，一个用来测试本机网卡是否正常</li></ul><h5 id="2-3ping"><a href="#2-3ping" class="headerlink" title="2.3ping"></a>2.3ping</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002194516571.png" alt="image-20201002194516571" style="zoom:50%;"><ul><li><code>ping</code>一般用于检测当前计算机到目标计算机之间的网络<strong>是否通畅，数值越大，速度越慢</strong></li></ul><blockquote><ul><li><code>ping</code>的工作原理与潜水艇的声呐相似，<code>ping</code>这个命令就是取自<strong>声呐的声音</strong></li><li>网络管理员之间也经常讲<code>ping</code>用作动词，–<strong>ping一下计算机x，看他是否开着</strong></li></ul></blockquote><p>原理：网络上的机器都有唯一确定的IP地址，我们给目标IP地址发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在</p><blockquote><p>提示：在Linux中，想要终止一个终端程序的执行，绝大多数都可以使用<strong>CTRL+C</strong></p></blockquote><h4 id="03远程登陆和复制文件"><a href="#03远程登陆和复制文件" class="headerlink" title="03远程登陆和复制文件"></a>03远程登陆和复制文件</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002200119336.png" alt="image-20201002200119336" style="zoom:50%;"><h5 id="3-1ssh基础（重点）"><a href="#3-1ssh基础（重点）" class="headerlink" title="3.1ssh基础（重点）"></a>3.1ssh基础（重点）</h5><p>在Linux中SSH时非常常用的工具，通过SSH客户端我们可以连接到运行了SSH的远程机器上</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/image-20201002200301200.png" alt="image-20201002200301200" style="zoom:50%;"><ul><li><p>SSH客户端是一种使用<code>Secure Shell (SSH)</code>协议连接到远程计算机软件程序</p></li><li><p><code>SSH</code>是目前比较可靠，专门为<strong>远程登录会话</strong>和<strong>其他网络服务</strong>提供安全性的协议。</p><ul><li>利用ssh协议可以有效地防止远程管理过程中的信息泄露</li><li>通过ssh协议可以对所有传输的数据进行加密，也能够防止DNS欺骗和IP欺骗</li></ul></li><li><p><code>SSH</code>的另一项优点是传输数据可以是经过压缩的，所以可以加快传输的速度</p></li></ul><h6 id="1》域名和端口号"><a href="#1》域名和端口号" class="headerlink" title="1》域名和端口号"></a>1》域名和端口号</h6><p>域名</p><ul><li>是有遗传用点分割的名字组成，例如<code>www.itchst.cn</code></li><li>IP地址的别名，方便用户回忆</li></ul><p>端口号</p><ul><li><p>IP地址：通过IP地址找到网络上的计算机</p></li><li><p>端口号：通过端口号可以找到计算机上运行的应用程序</p><ul><li>SSH服务器的默认端口号是<code>22</code>，如果是默认端口号，在连接的时候可以省略</li></ul></li><li><p>常见服务器端口号列表：</p></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002201608419.png" alt="image-20201002201608419" style="zoom:50%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br></pre></td></tr></table></figure><ul><li><code>user</code>是在远程机器上的用户名，如果不指定的话就认为当前用户</li><li><code>remote</code>是远程机器的地址，可以使IP/域名，或者是后面会提到的别名</li><li><code>port</code>是SSH server监听的端口，如果不确定，就默认为<code>22</code></li></ul><blockquote><p>提示：</p><ul><li>使用<code>exit</code>退出当前用户的登陆</li></ul></blockquote><blockquote><p>注意：</p><ul><li><code>ssh</code>这个终端命令只能在<code>Linux</code>系统下使用</li><li>如果在<code>Windows</code>系统中，可以安装<code>PuTTY</code>或者<code>XShell</code>客户端软件即可</li></ul></blockquote><blockquote><p>提示：</p><ul><li>在工作中，ssh服务器端口号很有可能不是22，如果遇到这种情况需要使用<code>-p</code>选项，指定正确的端口号，否则无法正常连接到服务器。</li></ul></blockquote><h6 id="2》-windows下SSH客户端的安装"><a href="#2》-windows下SSH客户端的安装" class="headerlink" title="2》 windows下SSH客户端的安装"></a>2》 windows下SSH客户端的安装</h6><ul><li>Putty</li><li>XShell</li></ul><blockquote><p>建议从官方网站下载正式的安装程序</p></blockquote><h5 id="3-2scp（掌握）"><a href="#3-2scp（掌握）" class="headerlink" title="3.2scp（掌握）"></a>3.2scp（掌握）</h5><ul><li>scp就是secure copy，是一个在Linux下用来运行远程拷贝文件的命令</li><li>他的地址格式与ssh基本相同，需要注意的是，在指定端口时用的是大写的<code>-P</code>，而不是小写的</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/image-20201002210054895.png" alt="image-20201002210054895" style="zoom:50%;"><blockquote><p>注意：</p><ul><li><code>scp</code>这个终端命令只能在<code>Linux</code>或者<code>UNIX</code>系统下使用</li><li>如果在<code>Windows</code>系统中，可以安装<code>PuTTY</code>，使用<code>pscp</code>命令行工具或者安装<code>FileZill</code>啊使用<code>FTP</code>进行文件传输</li></ul><p><code>FileZilla</code>传输文件时，使用的时FTP服务而不是<code>SSH服务</code>，因此端口号应该设置为<code>21</code></p></blockquote><h5 id="3-3SSH高级（知道）"><a href="#3-3SSH高级（知道）" class="headerlink" title="3.3SSH高级（知道）"></a>3.3SSH高级（知道）</h5><ul><li>免密码登录、</li><li>配置别名</li></ul><blockquote><p>提示：有关SSH配置信息都保存在用户家目录下的<code>.ssh</code>目录下</p></blockquote><h6 id="1）免密码登录"><a href="#1）免密码登录" class="headerlink" title="1）免密码登录"></a>1）免密码登录</h6><p>步骤</p><ul><li>配置公匙<ul><li>执行ssh-keygen即可生成SSH要是，一键回车即可</li></ul></li><li>上传公匙到服务器<ul><li>执行<code>ssh-copy-id -p port user@remote</code>，可以让远程服务器记住我们的公匙</li></ul></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002212158438.png" alt="image-20201002212158438" style="zoom:50%;"><blockquote><p>非对称加密算法</p><ul><li>使用公钥解密的数据，需要使用私钥进行解密</li><li>使用私钥加密的数据，需要使用公钥进行解密</li></ul></blockquote><h6 id="2）配置别名"><a href="#2）配置别名" class="headerlink" title="2）配置别名"></a>2）配置别名</h6><p>每次输入<code>ssh -p port user@remote</code>，时间久了会觉得很麻烦，特别是当<code>usert</code>，<code>renote</code>和<code>port</code>都得输入，而且还不好记忆</p><p>而配置别名可以让我们进一步偷懒，譬如： <code>ssh mac</code>来代替name一长串，那么就在<code>~/.ssh/config</code> 里边加以追加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host mac</span><br><span class="line">HostName ip地址</span><br><span class="line">user：guolong</span><br><span class="line">Port:22</span><br></pre></td></tr></table></figure><p>保存之后，即可用<code>ssh mac</code>实现远程登陆了，<code>scp</code>同样可以使用</p><h3 id="用户权限的相关命令"><a href="#用户权限的相关命令" class="headerlink" title="用户权限的相关命令"></a>用户权限的相关命令</h3><h4 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h4><ul><li><code>用户</code>和<code>权限</code>的基本概念</li><li>用户<code>管理</code>终结命令</li><li>组<code>管理</code>终端命令</li><li><code>修改权限</code> 终端命令</li></ul><h4 id="01用户和权限的基本概念"><a href="#01用户和权限的基本概念" class="headerlink" title="01用户和权限的基本概念"></a>01用户和权限的基本概念</h4><p>1.1基本概念</p><ul><li>用户是Linux系统工作中重要的一环，用户管理包括<code>用户</code>与<code>组</code>管理</li><li>在Linux系统中，不论是由本机或者是远程登陆系统，每个系统都必须拥有一个账号，并且对于不同的系统资源拥有不同的权限</li><li>对<code>文件</code>/<code>目录</code>的权限包括：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201003215318653-1601992425721.png" alt="image-20201003215318653" style="zoom:50%;"><ul><li>在Linux中，可以指定每一个用户针对不同的文件或者目录的不同权限。</li></ul><h5 id="1-2组"><a href="#1-2组" class="headerlink" title="1.2组"></a>1.2组</h5><ul><li>为了方便用户管理，提出了组的概念。如下图所示</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201003215541737-1601992427859.png" alt="image-20201003215541737" style="zoom:50%;"><ul><li>在实际应用中，可以预计先针对设置好的权限，然后将不同的用户添加到对应的组中，从而不用依次为每一个用户设置权限</li></ul><h5 id="1-3ls-l-扩展"><a href="#1-3ls-l-扩展" class="headerlink" title="1.3ls -l 扩展"></a>1.3ls -l 扩展</h5><ul><li><code>ls -l</code>可以查看文件夹下文件的详细信息，从左到右依次是<ul><li>权限：第一个字符如果是d表示目录</li><li>硬连接数：通俗地讲，就是有多少种方式，可以访问当前目录/文件</li><li>拥有者：家目录下文件、目录的拥有者通常都是当前用户</li><li>组：在Linux中，很多时候，会出现组名和用户名相同的情况，后续会将</li><li>大小</li><li>时间</li><li>名称</li></ul></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201003220205236-1601992429736.png" alt="image-20201003220205236" style="zoom:50%;"><h5 id="1-4chmod简单使用（重要）"><a href="#1-4chmod简单使用（重要）" class="headerlink" title="1.4chmod简单使用（重要）"></a>1.4chmod简单使用（重要）</h5><ul><li>chmod可以修改用户/组 对文件/目录的权限</li><li>命令格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +&#x2F;- rwx 文件名|目录名</span><br></pre></td></tr></table></figure><h5 id="1-5超级用户"><a href="#1-5超级用户" class="headerlink" title="1.5超级用户"></a>1.5超级用户</h5><ul><li><code>Linux</code>系统中的root账号通常用于<strong>系统的维护和管理</strong>，对操作系统的所有资源*<em>具有所有访问****</em>权限**</li><li>在大多数版本的Linux中，都不推荐直接使用<code>root</code>账号登录系统</li><li>在Linux安装过程中，系统会自动创建一个用户账号，而这个默认的用户就称为”标准用户“</li></ul><p>sudo</p><ul><li><p><code>su</code>是<code>substitute use</code>r的缩写，表示使用另一个用户的身份</p></li><li><p><code>sudo</code>命令用来以其他身份来执行命令，预设的身份为<code>root</code></p></li><li><p>用户使用<code>sudo</code>时，必须先输入密码，之后有五分钟的有效期限，超过期限则必须重新输入密码</p></li></ul><blockquote><p>若其未经授权的用户企图使用<code>sudo</code>，则会发出警告邮件给管理员</p></blockquote><h4 id="02组管理终端命令"><a href="#02组管理终端命令" class="headerlink" title="02组管理终端命令"></a>02组管理终端命令</h4><blockquote><p>提示：创建组/删除组的终端命令都要通过sudo执行</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004200712571-1601992432375.png" alt="image-20201004200712571" style="zoom:50%;"><blockquote><p>提示：</p><ul><li>族信息保存在<code>/etc/group</code>文件中</li><li><code>/etc</code>目录是专门用来保存系统配置信息的目录</li></ul></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004200826151-1601992434188.png" alt="image-20201004200826151" style="zoom:50%;"><ul><li>在实际应用中，可以预先针对<strong>组</strong>设置好权限，然后将不同的用户添加到对应的组中，从而不用一次为每一个用户<strong>设置权限</strong></li></ul><h4 id="03用户管理-终端用户"><a href="#03用户管理-终端用户" class="headerlink" title="03用户管理 终端用户"></a>03用户管理 终端用户</h4><blockquote><p>提示：<strong>创建用户</strong>/<strong>删除用户</strong>/<strong>修改其他用户密码</strong> 的终端命令都需要通过<code>sudo</code>执行</p></blockquote><h5 id="3-1创建用户-设置密码-删除用户"><a href="#3-1创建用户-设置密码-删除用户" class="headerlink" title="3.1创建用户/设置密码/删除用户"></a>3.1创建用户/设置密码/删除用户</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004202246712-1601992436381.png" alt="image-20201004202246712" style="zoom:50%;"><blockquote><p>提示：</p><ul><li><p>创建用户时，如果忘记添加-m选项指定新用户的家目录–最简单的方法就是删除用户，重新创建。</p></li><li><p>创建用户时，默认会创建一个和用户名同名的组名</p></li><li><h4 id="用户信息保存在-etc-group文件中"><a href="#用户信息保存在-etc-group文件中" class="headerlink" title="用户信息保存在/etc/group文件中"></a>用户信息保存在/etc/group文件中</h4></li></ul></blockquote><h5 id="3-2查看用户信息"><a href="#3-2查看用户信息" class="headerlink" title="3.2查看用户信息"></a>3.2查看用户信息</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004204449502-1601992438645.png" alt="image-20201004204449502" style="zoom:50%;"><p>passwd文件</p><p>/etc/passwd 文件存放的是用户的信息，由6个分好组成的7个信息，分别是</p><p>1.用户名</p><p>2.密码（x，表示加密的密码）</p><p>3.<code>UID</code>（用户标识）</p><p>4.<code>GID</code>（组标识）</p><p>5.用户全名或本地账号</p><p>6.家目录</p><p>7.登录使用的Shell，就是登陆之后，使用终端命令，<code>ubuntu</code>默认是<code>dash</code></p><p>usermod</p><ul><li>usermod可以用来设置用户的主组/附加组和登录Shell，命令格式如下：</li><li>主组：通常在新建用户时指定，在etc/passwd 的第四列GID对应的组</li><li>附加组：在etc/group 中最后一列表示改组的用户列表，用于指定雍虎德附加权限</li></ul><blockquote><p>提示：设置了用户的附加组之后，需要重新登录才能生效！</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004205338553-1601992443282.png" alt="image-20201004205338553" style="zoom:50%;"><blockquote><p>注意：默认使用useradd添加的用户是没有权限使用sudo以root身份执行命令的，可以使用以下命令，将用户添加到sudo添加组中</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -G sudo 用户名</span><br></pre></td></tr></table></figure><p>which(重要)</p><blockquote><p>提示：</p><ul><li>/etc/passwd 适用于保存用户信息的文件</li><li>/usr/bin/passwd 适用于修改用户密码的程序</li></ul></blockquote><ul><li>which命令可以查看执行命令所在位置，例如：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211038670-1601992445223.png" alt="image-20201004211038670" style="zoom:50%;"><p>bin和sbin</p><p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211411599-1601992448074.png" alt="image-20201004211411599"></p><blockquote><p>提示：</p><ul><li><code>cd</code>这个终端命令是内置在系统内核中的，没有独立的文件，因此是<code>which</code>无法找到<code>cd</code>命令的位置</li></ul></blockquote><h5 id="3-3切换用户"><a href="#3-3切换用户" class="headerlink" title="3.3切换用户"></a>3.3切换用户</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211556223-1601992450566.png" alt="image-20201004211556223" style="zoom:50%;"><ul><li>su不接用户名，可以切换到root，但是不推荐使用，因为不安全</li><li>exit提示图如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211705032-1601992452322.png" alt="image-20201004211705032" style="zoom:50%;"><h4 id="04修改文件权限"><a href="#04修改文件权限" class="headerlink" title="04修改文件权限"></a>04修改文件权限</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004212418725-1601992453929.png" alt="image-20201004212418725" style="zoom:50%;"><ul><li>命令格式如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004212442822-1601992456099.png" alt="image-20201004212442822" style="zoom:50%;"><ul><li><code>chmod</code>在设置权限时，<strong>可以</strong>简单的使用三个数字分别对应<code>拥有者</code>/<code>组</code>和<code>其他</code>用户的权限</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004213004439-1601992457983.png" alt="image-20201004213004439" style="zoom:50%;"><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004213130832-1601992459649.png" alt="image-20201004213130832" style="zoom:50%;"><h3 id="系统信息相关命令"><a href="#系统信息相关命令" class="headerlink" title="系统信息相关命令"></a>系统信息相关命令</h3><ul><li>本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前系统日期和时间/磁盘空间占用情况/程序执行情况</li><li>本小结学习的终端命令基本都是查询命令，通过这些命令对系统资源的使用有个了解</li></ul><p>目标</p><ul><li>时间和日期<ul><li><code>date</code></li><li><code>cal</code></li></ul></li><li>磁盘和目录空间<ul><li><code>df</code></li><li><code>du</code></li></ul></li><li>进程信息<ul><li><code>ps</code></li><li><code>top</code></li><li><code>kill</code></li></ul></li></ul><h4 id="01时间和日期"><a href="#01时间和日期" class="headerlink" title="01时间和日期"></a>01时间和日期</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004213954093-1601992462540.png" alt="image-20201004213954093" style="zoom:50%;"><h4 id="02磁盘信息"><a href="#02磁盘信息" class="headerlink" title="02磁盘信息"></a>02磁盘信息</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214017309-1601992464073.png" alt="image-20201004214017309" style="zoom:50%;"><p>选项 说明：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214248454-1601992465731.png" alt="image-20201004214248454" style="zoom:50%;"><h4 id="03进程信息"><a href="#03进程信息" class="headerlink" title="03进程信息"></a>03进程信息</h4><ul><li>所谓进程，通俗讲就是当前正在执行的程序</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214822885-1601992467494.png" alt="image-20201004214822885" style="zoom:50%;"><blockquote><p><code>ps</code>默认只会显示当前用户通过终端启动的应用程序</p></blockquote><ul><li><code>ps</code>选项说明功能</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214917933-1601992469251.png" alt="image-20201004214917933" style="zoom:50%;"><blockquote><p>提示：使用<code>kill</code>命令时，最好只终止当前用户开启的用户，而不要终止<code>root</code>身份开启的进程，否则可能导致系统崩溃</p><ul><li>要退出<code>top</code>可以直接输入<code>q</code></li></ul></blockquote><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><p>目标</p><ul><li>查找文件<ul><li><code>find</code></li></ul></li><li>软链接<ul><li><code>ln</code></li></ul></li><li>打包和压缩<ul><li><code>tar</code></li></ul></li><li>软件安装<ul><li><code>apt-get</code></li></ul></li></ul><h4 id="01查找文件"><a href="#01查找文件" class="headerlink" title="01查找文件"></a>01查找文件</h4><ul><li><code>find</code>命令功能非常强大，通常用来在特定目录下搜索符合条件的文件</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004220538085-1601992472100.png" alt="image-20201004220538085" style="zoom:50%;"><ul><li>如果省略路径，表示在当前文件夹下查找</li><li>之前学习的通配符，在使用<code>find</code>命令时同时可用</li></ul><h5 id="01软链接"><a href="#01软链接" class="headerlink" title="01软链接"></a>01软链接</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005113913946-1601992473706.png" alt="image-20201005113913946" style="zoom:50%;"><ul><li>注意：</li><li>1.没有-s选项建立的是一个硬链接文件<ul><li>两个文件占用相同大小的硬盘空间，工作中几乎不会建立文件的硬链接</li></ul></li><li>2.源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</li></ul><p>硬链接简介（知道）</p><ul><li>在使用<code>ln</code>创建链接时，如果没有<code>-s</code>选项，会创建一个硬链接，而不是软链接。</li></ul><p>文件软硬链接的示意图</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005115940085-1601992475721.png" alt="image-20201005115940085" style="zoom:50%;"><blockquote><p>在Linux中，文件名和文件的数量是分开存储的</p></blockquote><p>提示：</p><ul><li>在Linux中，只有文件的硬连接数==0才会被删除</li><li>使用ls -l可以查看一个文件的硬链接数量</li><li>在日常生活中，几乎不会建立文件的硬链接，知道即可</li></ul><h4 id="03打包压缩"><a href="#03打包压缩" class="headerlink" title="03打包压缩"></a>03打包压缩</h4><ul><li>打包压缩是日常工作中备份文件的一种方式</li><li>在不同操作系统中，常用的打包压缩方式是不同的<ul><li><code>windows</code>常用<code>rar</code></li><li><code>Mac</code>常用<code>zip</code></li><li><code>Linux</code> 常用<code>tar.gz</code></li></ul></li></ul><h5 id="3-1打包-解包"><a href="#3-1打包-解包" class="headerlink" title="3.1打包/解包"></a>3.1打包/解包</h5><ul><li><code>tar</code>是Linux中常用的备份工具，此命令可以吧一系列文件打包到一个打文件中，也可以把一个打包的打文件恢复成一系列文件</li><li><code>tar</code>的命令格式如下：、</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005121056678-1601992478393.png" alt="image-20201005121056678" style="zoom:50%;"><ul><li><code>tar</code>选项说明</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005121136433-1601992481056.png" alt="image-20201005121136433" style="zoom:50%;"><blockquote><p>注意：<code>f</code>选项必须放在最后，其它选项顺序可以随意</p></blockquote><h5 id="3-2压缩-解压缩"><a href="#3-2压缩-解压缩" class="headerlink" title="3.2压缩/解压缩"></a>3.2压缩/解压缩</h5><p>1）gzip</p><ul><li><code>tar</code>与<code>gzip</code>命令结合可以使用实现文件打包和压缩<ul><li><code>tar</code>只负责打包文件，但不压缩</li><li>用<code>gzip</code>压缩<code>tar</code>打包后的文件，其拓展名一般用<code>xxx.tar.gz</code></li></ul></li></ul><blockquote><p>在Linux中，最常见的压缩文件格式就是xxx.tar.gz</p></blockquote><ul><li>在<code>tar</code>命令中有一个选项<code>-z</code>可以调佣<code>gzip</code>，从而可以方便的实现压缩和解压缩的功能</li><li>命令格式如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005122119874-1601992482986.png" alt="image-20201005122119874" style="zoom:50%;"><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/images/ubuntu%E6%80%BB%E7%BB%93/image-20201005122134265.png" alt="image-20201005122134265" style="zoom:50%;"><p>2）bzip2（two）</p><ul><li><code>tar</code>与<code>bzip2</code>命令结合可以使用实现文件打包和压缩（用法和<code>gzip</code>一样）<ul><li><code>tar</code>只负责打包文件，但不压缩</li><li>用<code>bzip2</code>压缩<code>tar</code>打包后的文件，其拓展名一般用<code>xxx.tar.bz2</code></li></ul></li><li>在<code>tar</code>命令中有一个选项<code>-j</code>可以调用<code>bzip2</code>，从而可以方便的实现压缩和解压的功能</li><li>命令格式如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005171036209-1601992485164.png" alt="image-20201005171036209" style="zoom:50%;"><h4 id="04软件安装"><a href="#04软件安装" class="headerlink" title="04软件安装"></a>04软件安装</h4><h5 id="4-1通过apt安装-卸载软件"><a href="#4-1通过apt安装-卸载软件" class="headerlink" title="4.1通过apt安装/卸载软件"></a>4.1通过apt安装/卸载软件</h5><ul><li><code>apt</code>是Advanced Packing Tool，是Linux下的一款安装包管理工具</li><li>可以再终端中方便的安装/卸载/更新软件</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005171958722-1601992486895.png" alt="image-20201005171958722" style="zoom:50%;"><h5 id="4-2配置软件源"><a href="#4-2配置软件源" class="headerlink" title="4.2配置软件源"></a>4.2配置软件源</h5><ul><li>如果希望在<code>ubuntu</code>中安装软件，更加快速，可以通过设置软件源，选择一个访问网速更快的服务器，来提供软件下载安装服务</li><li>提示：更换服务器后，需要一个相对较长时间的更新，需要耐心等待，更新完成后，在安装软件机会从新设置的服务器下载软件了</li></ul><blockquote><p>所谓镜像源，就是所有服务器的内容是相同的（镜像），但是根据所在位置不同，国内服务器访问速度更快一些！</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005173022899-1601992488863.png" alt="image-20201005173022899" style="zoom:50%;">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;ubuntu学习笔记，基础知识点。&quot;&gt;&lt;a href=&quot;#ubuntu学习笔记，基础知识点。&quot; class=&quot;headerlink&quot; title=&quot;ubuntu学习笔记，基础知识点。&quot;&gt;&lt;/a&gt;ubuntu学习笔记，基础知识点。&lt;/h2&gt;</summary>
    
    
    
    <category term="ubuntu笔记" scheme="http://www.acrazydragon.github.io/categories/ubuntu%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ubuntu笔记" scheme="http://www.acrazydragon.github.io/tags/ubuntu%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
