<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ACrazyDragon的博客</title>
  
  
  <link href="http://www.acrazydragon.github.io/atom.xml" rel="self"/>
  
  <link href="http://www.acrazydragon.github.io/"/>
  <updated>2020-10-08T14:09:22.152Z</updated>
  <id>http://www.acrazydragon.github.io/</id>
  
  <author>
    <name>Long Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaWeb笔记</title>
    <link href="http://www.acrazydragon.github.io/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.acrazydragon.github.io/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-10-06T04:12:07.000Z</published>
    <updated>2020-10-08T14:09:22.152Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu学习笔记，基础知识点。</p><p>JavaWeb学习笔记</p><a id="more"></a><h2 id="Javaweb学习"><a href="#Javaweb学习" class="headerlink" title="Javaweb学习"></a>Javaweb学习</h2><p>java   Web</p><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><h4 id="1-1前言"><a href="#1-1前言" class="headerlink" title="1.1前言"></a>1.1前言</h4><p>web开发：</p><ul><li><p>web, 网页的意思，<a href="http://www.baidu.com/">www.baidu.com</a></p></li><li><p>静态web</p><ul><li>html, css</li><li>提供给所有人看的数据始终不会变化！</li></ul></li><li><p>动态web</p><ul><li><p>淘宝，几乎所有的网站。</p></li><li><p>提供给所有人看的数据始终会变化！每个人在不同的时间，在不同的地点看到的信息各不相同！</p></li><li><p>技术栈：servlet，jsp，ASP，PHP。</p></li></ul></li></ul><p>在java中，动态web开发的技术统称为javaWeb：</p><h4 id="1-2web应用程序"><a href="#1-2web应用程序" class="headerlink" title="1.2web应用程序"></a>1.2web应用程序</h4><p>什么是程序：可以提供浏览器访问的程序；</p><ul><li>a.html   b.html…..多个web资源，这些资源可以被外界访问，对外界提供服务;</li><li>你们能访问到的任何一个资源，都存在在世界的某一个角落的计算机上。</li><li>URL</li><li>这些统一的web资源会被放在同一个文件夹，web应用程序-&gt;Tomcat：服务器</li><li>一个web应用由多部分组成（静态web，动态web）<ul><li>html，css，js</li><li>jsp，servlet</li><li>java程序</li><li>jar包</li><li>配置文件（properties）</li></ul></li></ul><p>web应用程序编写完成后，若想被外界访问：需要一个服务器来统一管理；</p><h4 id="1-3静态web"><a href="#1-3静态web" class="headerlink" title="1.3静态web"></a>1.3静态web</h4><ul><li><em>.html，</em>.html这些都是网页的后缀，如果服务器上一直存在这些东西，我们就可以直接进行读取。通络：</li></ul><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006103151298.png" alt="image-20201006103151298" style="zoom:50%;"><ul><li>静态web存在的缺点<ul><li>web页面无法动态更新，所有用户看到的是同一个页面<ul><li>轮播图，点击特效：伪动态</li><li>JavaScript[实际开发中，他用的最多]</li><li>VBScript</li></ul></li><li>无法和数据库交互（数据无法持久化，用户无法交互）</li></ul></li></ul><h4 id="1-4动态web"><a href="#1-4动态web" class="headerlink" title="1.4动态web"></a>1.4动态web</h4><p>页面会动态展示：”Web的页面展示的效果因人而异“</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006103846117.png" alt="image-20201006103846117" style="zoom:67%;"><p>缺点：</p><ul><li>加入服务器动态web资源发生错误，我们需要重新编写我们的<strong>后台程序</strong>，重新发布；<ul><li>停机维护</li></ul></li></ul><p>有点：</p><ul><li>web页面无法动态更新，所有用户看到的不是同一个页面</li><li>他可以和数据库交互（数据持久化：注册，商品信息，用户信息。。。）</li></ul><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006104206453.png" alt="image-20201006104206453" style="zoom:67%;"><p>新手村:–魔鬼训练（分析原理，看源码）–&gt;PK厂 </p><h3 id="2-Web服务器"><a href="#2-Web服务器" class="headerlink" title="2.Web服务器"></a>2.Web服务器</h3><hr><h4 id="2-1技术讲解"><a href="#2-1技术讲解" class="headerlink" title="2.1技术讲解"></a>2.1技术讲解</h4><p><strong>ASP</strong></p><ul><li>微软：国内最早流行的就是ASP；</li><li>在HTML中嵌入了VB脚本，ASP+COM；</li><li>在ASP开发中，基本一个页面都有几千行的业务代码，页面机器混乱</li><li>维护成本高！</li><li>C#</li><li>IIS服务器</li></ul><p>PHP</p><ul><li><p>PHP开发速度很快，功能很强大，跨平台，代码简单（70%，WP）</p></li><li><p>无法承载大访问量的情况（局限性）</p></li></ul><p>JSP/Servlet：</p><p>B/S：浏览器和服务器</p><p>C/S：客户端和服务器</p><ul><li><p>sun公司主推的B/S架构</p></li><li><p>基于java语言的（所有的大公司，或者一些开源的组件，都是用java写的）</p></li><li><p>可以承载三高问题带来的影响；</p></li><li><p>语法像ASP，ASP-&gt;jsp，加强市场强度；</p></li></ul><h4 id="2-2Web服务器"><a href="#2-2Web服务器" class="headerlink" title="2.2Web服务器"></a>2.2Web服务器</h4><p>服务器是一种被动操作，用来处理用户的一些请求和给用户一些响应信息；</p><p>IIS</p><ul><li>微软的：ASP……Windows中自带的</li></ul><p>Tomcat</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006110453774.png" alt="image-20201006110453774" style="zoom:67%;"><p>面向百度编程：</p><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由<a href="https://baike.baidu.com/item/Apache/6265">Apache</a>、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个学习javaWeb的初学者来说，他是最佳选择</p><p>诀窍是，当配置正确时，Apache 为HTML页面服务，而Tomcat 实际上运行JSP 页面和Servlet。目前Tomcat最新版本为9.0.37<strong>。</strong></p><p>….</p><p><strong>工作3-5年之后，可以调试手写Tomcat服务器；</strong></p><p>下载tomcat：</p><p>1.安装 or 解压；</p><p>2.了解配置文件及目录文件</p><p>3.这个东西的作用</p><h3 id="3-Tomcat"><a href="#3-Tomcat" class="headerlink" title="3.Tomcat"></a>3.Tomcat</h3><h4 id="3-1安装Tomcat"><a href="#3-1安装Tomcat" class="headerlink" title="3.1安装Tomcat"></a>3.1安装Tomcat</h4><p>tomcat官网：<a href="http://tomcat.apache.org/">http://tomcat.apache.org/</a></p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006111847110.png" alt="image-20201006111847110" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006111911045.png" alt="image-20201006111911045"></p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006111924512.png" alt="image-20201006111924512" style="zoom:67%;"><h4 id="3-2Tomcat使用和配置"><a href="#3-2Tomcat使用和配置" class="headerlink" title="3.2Tomcat使用和配置"></a>3.2Tomcat使用和配置</h4><p>文件夹的作用：</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006112639289.png" alt="image-20201006112639289" style="zoom:67%;"><p>启动，关闭Tomcat</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006112807654.png" alt="image-20201006112807654" style="zoom:67%;"><p>访问测试：<a href="http://localhost:8080/">http://localhost:8080/</a></p><p>可能遇到的问题：</p><p>​    1.java环境变量没有配置</p><p>​    2.闪退问题：需要配置兼容性</p><p>​    3.乱码问题：修改配置文件</p><h4 id="3-3配置"><a href="#3-3配置" class="headerlink" title="3.3配置"></a>3.3配置</h4><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006113958098.png" alt="image-20201006113958098" style="zoom:67%;"><p>可以配置主机的端口号</p><ul><li><p>Tomcat默认端口号为：8080</p></li><li><p>mysql：3306</p></li><li><p>http：80</p></li><li><p>https：443</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">              <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>可以配置主机的名称</p><ul><li>默认的主机名为：localhost-&gt;127.0.0.1</li><li>默认的网站应用存放的位置为：webapps</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>高难度面试题</strong>：</p><p>请你谈谈网站是如何进行访问的！</p><p>1.输入一个域名：回车</p><p>2.检查本机的C:\\Windows\System32\drivers\etc\hosts配置文件下有没有这个域名映射</p><p>​    1.有 ，直接返回对应的IP地址。这个地址中有我们需要访问的Web程序， 可以直接访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>   www.gxl.com</span><br></pre></td></tr></table></figure><p>​    2.没有：去DNS服务器找</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/images/Javaweb%E5%AD%A6%E4%B9%A0/image-20201006115631006.png" alt="image-20201006115631006" style="zoom:67%;"><p>3.配置一下环境变量（可选性）</p><h4 id="3-4发布一个web网站"><a href="#3-4发布一个web网站" class="headerlink" title="3.4发布一个web网站"></a>3.4发布一个web网站</h4><p>不会就先模仿</p><ul><li>将自己写的网站，放到服务器（Tomcat）中指定的web应用的文件夹（webapps）下，就可以访问了</li></ul><p>网站应该有的结构</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">--webapps : Tomcat服务器的Web目录</span><br><span class="line">    -Root</span><br><span class="line">    -kuangstudy : 网站的目录名</span><br><span class="line">        -WEB-INF</span><br><span class="line">        -classes : java程序</span><br><span class="line">            -lib : web应用所依赖的jar包</span><br><span class="line">        -web.xml</span><br><span class="line">        -index.html 默认的首页</span><br><span class="line">        -<span class="keyword">static</span></span><br><span class="line">                -css</span><br><span class="line">                -style.css</span><br><span class="line">                -js</span><br><span class="line">                -img</span><br><span class="line">-.......</span><br></pre></td></tr></table></figure><p>HTTP协议：面试</p><p>Maven：构建工具</p><ul><li>Maven安装包</li></ul><p>Servlet入门</p><ul><li>HelloWorld！</li><li>Servlet配置</li><li>原理</li></ul><h3 id="4-Http"><a href="#4-Http" class="headerlink" title="4.Http"></a>4.Http</h3><hr><h4 id="4-1什么是Http"><a href="#4-1什么是Http" class="headerlink" title="4.1什么是Http"></a>4.1什么是Http</h4><p>Http（超文本传输协议）是一个简单的请求-响应协议，它通常运行在TCP之上。</p><ul><li>文本：html，字符串，~…..</li><li>超文本：图片，音乐，视频，定位，地图…..</li><li>默认端口：80</li></ul><p>Https（安全的）：默认端口：443</p><h4 id="4-2两个时代"><a href="#4-2两个时代" class="headerlink" title="4.2两个时代"></a>4.2两个时代</h4><ul><li>http1.0<ul><li>Http/1.0：客户端可以与web服务器连接后，只能获得一个web资源，断开连接</li></ul></li><li>http2.0<ul><li>HTTP/1.1：客户端可以与web服务器连接后，只能获得多个web资源</li></ul></li></ul><h4 id="4-3Http请求"><a href="#4-3Http请求" class="headerlink" title="4.3Http请求"></a>4.3Http请求</h4><ul><li>客户端—发请求到（Request）—服务器</li></ul><p>百度：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">请求 URL: https:<span class="comment">//www.baidu.com/请求地址</span></span><br><span class="line">请求方法: GETget方法/post方法</span><br><span class="line">状态代码: <span class="number">200</span> OK状态码：<span class="number">200</span></span><br><span class="line">远程地址: <span class="number">39.156</span>.<span class="number">66.18</span>:<span class="number">443</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Accept-Language: zh-CN,zh;q=<span class="number">0.9</span>,en;q=<span class="number">0.8</span>,en-GB;q=<span class="number">0.7</span>,en-US;q=<span class="number">0.6</span></span><br><span class="line">Cache-Control: max-age=<span class="number">0</span></span><br><span class="line">Connection: keep-alive</span><br></pre></td></tr></table></figure><h5 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h5><ul><li>请求行中的请求方式：GET</li><li>请求方式：Get，Post…..<ul><li>get：请求能够携带的参数比较小，大小有限制，会在浏览器的URL地址栏显示数据内容，不安全，但高效。</li><li>post：请求能够携带的参数没有限制，大小没有限制，不会在浏览器的URL地址栏显示数据内容，安全，但不高效。</li></ul></li></ul><h5 id="2-消息头"><a href="#2-消息头" class="headerlink" title="2.消息头"></a>2.消息头</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Accept：告诉浏览器，它所支持的类型</span><br><span class="line">Accept-Encoding: 支持哪种编码格式  GBK  UTF-<span class="number">8</span>   GB2312   ISO8859-<span class="number">1</span></span><br><span class="line">Accept-Language: 告诉浏览器，他的语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 高速浏览器，请求完成是断开还是保持连接</span><br><span class="line">Host：主机..../</span><br></pre></td></tr></table></figure><h4 id="4-4Http响应"><a href="#4-4Http响应" class="headerlink" title="4.4Http响应"></a>4.4Http响应</h4><ul><li>服务器—响应—客户端</li></ul><p>百度：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Cache-Control: <span class="keyword">private</span>缓存控制</span><br><span class="line">Connection: keep-alive连接：保持活跃</span><br><span class="line">Content-Encoding: gzip编码</span><br><span class="line">Content-Type: text/html;类型</span><br></pre></td></tr></table></figure><h5 id="1-响应体"><a href="#1-响应体" class="headerlink" title="1.响应体"></a>1.响应体</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Accept：告诉浏览器，它所支持的类型</span><br><span class="line">Accept-Encoding: 支持哪种编码格式  GBK  UTF-<span class="number">8</span>   GB2312   ISO8859-<span class="number">1</span></span><br><span class="line">Accept-Language: 告诉浏览器，他的语言环境</span><br><span class="line">Cache-Control: 缓存控制</span><br><span class="line">Connection: 高速浏览器，请求完成是断开还是保持连接</span><br><span class="line">Host：主机..../</span><br><span class="line">Reflush：告诉客户端，多久刷新一次</span><br><span class="line">Location：让网页重新定位</span><br></pre></td></tr></table></figure><h5 id="2-响应状态码"><a href="#2-响应状态码" class="headerlink" title="2.响应状态码"></a>2.响应状态码</h5><p>200：请求响应成功</p><p>3**：请求重定向</p><ul><li>重定向：你重新到我给你的新位置去</li></ul><p>4xx：找不到资源 404</p><ul><li>资源不存在；</li></ul><p>5xx：服务器代码错误  500   502：网关错误</p><p>常见面试题：</p><p>当你的浏览器中地址栏输入地址并回车的一瞬间到页面能够展示回来，经历了什么？</p><h3 id="5Maven"><a href="#5Maven" class="headerlink" title="5Maven"></a>5Maven</h3><p>我为什么要去学这个技术？</p><p>1.在javaweb开发中，与要使用大量的jar包，我们手动去导入。</p><p>2.如何能够让一个东西自动倒入和配置这个jar包。</p><p>​    由此，Maven诞生了</p><h4 id="5-1Maven项目架构管理工具"><a href="#5-1Maven项目架构管理工具" class="headerlink" title="5.1Maven项目架构管理工具"></a>5.1Maven项目架构管理工具</h4><p>我们目前就是用它来导入jar包的！</p><p>Maven的核心思想：约定大于配置</p><ul><li>有约束不要去违反。</li></ul><p>Maven会规定好你如何去编写好我们的java代码，必须要按照这个规范来。</p><p>官网：<a href="https://maven.apache.org/">https://maven.apache.org/</a></p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007142931846.png" alt="image-20201007142931846" style="zoom:67%;"><h4 id="5-2下载安装Maven"><a href="#5-2下载安装Maven" class="headerlink" title="5.2下载安装Maven"></a>5.2下载安装Maven</h4><p>下载完成后，解压即可：</p><h4 id="5-3配置环境变量"><a href="#5-3配置环境变量" class="headerlink" title="5.3配置环境变量"></a>5.3配置环境变量</h4><p>在我们的系统环境变量中</p><p>配置如下配置：</p><ul><li>M2_HOME  maven目录下的bin目录</li><li>MAVEN_HOME    maven的目录</li><li>在系统的path中配置</li></ul><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007145742761.png" alt="image-20201007145742761" style="zoom:67%;"><p>测试Maven是否安装成功，保证必须配置完成！</p><h4 id="5-4阿里云镜像"><a href="#5-4阿里云镜像" class="headerlink" title="5.4阿里云镜像"></a>5.4阿里云镜像</h4><ul><li><p>镜像：mirrors</p><ul><li>作用：加快我们的下载速度</li></ul></li><li><p>国内建议使用阿里云镜像</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>       </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span> </span><br></pre></td></tr></table></figure><h4 id="5-5本地仓库"><a href="#5-5本地仓库" class="headerlink" title="5.5本地仓库"></a>5.5本地仓库</h4><p>建立一个仓库，远程仓库</p><p>建立一个本地仓库：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\environment\apache-maven-3.5.0\maven_repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-6在IDEA中使用Maven"><a href="#5-6在IDEA中使用Maven" class="headerlink" title="5.6在IDEA中使用Maven"></a>5.6在IDEA中使用Maven</h4><p>1.启动IDEA</p><p>2.创建一个MavenWeb项目</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007151600466.png" alt="image-20201007151600466" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007151731207.png" alt="image-20201007151731207" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007151925305.png" alt="image-20201007151925305" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007152054809.png" alt="image-20201007152054809" style="zoom:67%;"><p>3.等待项目初始化完毕</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007152530148.png" alt="image-20201007152530148" style="zoom: 50%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007153554689.png" alt="image-20201007153554689" style="zoom: 67%;"><p>4.观察Maven仓库中多了什么东西</p><p>5.IDEA中的Maven设置</p><p>​    IDEA项目创建成功后，看一眼Maven的配置，</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007153711540.png" alt="image-20201007153711540" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007153909531.png" alt="image-20201007153909531" style="zoom:67%;"><p>6.到这里，Maven在IDEA中的配置和使用就OK了！</p><h4 id="5-7创建一个普通的Maven项目"><a href="#5-7创建一个普通的Maven项目" class="headerlink" title="5.7创建一个普通的Maven项目"></a>5.7创建一个普通的Maven项目</h4><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007154516872.png" alt="image-20201007154516872" style="zoom: 67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007154640791.png" alt="image-20201007154640791" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007154746370.png" alt="image-20201007154746370"><h4 id="5-8标记文件夹功能"><a href="#5-8标记文件夹功能" class="headerlink" title="5.8标记文件夹功能"></a>5.8标记文件夹功能</h4><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155124556.png" alt="image-20201007155124556" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155326325.png" alt="image-20201007155326325"></p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155508922.png" alt="image-20201007155508922" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007155605651.png" alt="image-20201007155605651" style="zoom:67%;"><h4 id="5-9在IDEA中配置tomcat"><a href="#5-9在IDEA中配置tomcat" class="headerlink" title="5.9在IDEA中配置tomcat"></a>5.9在IDEA中配置tomcat</h4><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160035178.png" alt="image-20201007160035178" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160407436.png" alt="image-20201007160407436" style="zoom:67%;"><p>解决警告问题</p><p><strong>为什么会有这个问题：我们访问一个网站，需要制定一个文件夹的名字；</strong></p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160519102.png" alt="image-20201007160519102" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160750386.png" alt="image-20201007160750386" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007160932266.png" alt="image-20201007160932266" style="zoom:67%;"><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007161731491.png" alt="image-20201007161731491" style="zoom:67%;"><h4 id="5-10pom文件"><a href="#5-10pom文件" class="headerlink" title="5.10pom文件"></a>5.10pom文件</h4><p>pom.xml是Maven的核心配置文件</p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007162112816.png" alt="image-20201007162112816" style="zoom:67%;"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--Maven的版本和头文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  这是我们刚才配置的GAV--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.long<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javaweb01-Maven<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!--   Package：项目的打包方式</span></span><br><span class="line"><span class="comment">      jar：java应用</span></span><br><span class="line"><span class="comment">      war；javaweb应用  </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>javaweb01-Maven Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    项目的默认编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    编码版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  项目依赖--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    具体依赖的jar包的配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--  项目构建用的东西--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>javaweb01-Maven<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.22.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包"><a href="#Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包" class="headerlink" title="Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包"></a>Maven的高级之处在于它不仅可以导入jar包，他还可以帮你导入这个jar包所依赖的其他jar包</h4><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007163730156.png" alt="image-20201007163730156" style="zoom:67%;"><h4 id="Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题"><a href="#Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题" class="headerlink" title="Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题"></a>Maven由于他的约定大于配置，我们之后可能遇到我们写的文件无法被导出，或者生效的问题</h4><h4 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    在build中配置resources，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>false<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="5-12IDEA操作"><a href="#5-12IDEA操作" class="headerlink" title="5.12IDEA操作"></a>5.12IDEA操作</h4><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201007164306986.png" alt="image-20201007164306986" style="zoom:67%;"><h4 id="5-13解决遇到的问题"><a href="#5-13解决遇到的问题" class="headerlink" title="5.13解决遇到的问题"></a>5.13解决遇到的问题</h4><h5 id="1-Maven-3-6-2"><a href="#1-Maven-3-6-2" class="headerlink" title="1.Maven 3.6.2"></a>1.Maven 3.6.2</h5><p>解决方法：降级为3.6.1</p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008160259153.png" alt="image-20201008160259153"></p><h5 id="2-Tomcat闪退"><a href="#2-Tomcat闪退" class="headerlink" title="2.Tomcat闪退"></a>2.Tomcat闪退</h5><h5 id="3-IDEA中每次都要重复配置Maven"><a href="#3-IDEA中每次都要重复配置Maven" class="headerlink" title="3.IDEA中每次都要重复配置Maven"></a>3.IDEA中每次都要重复配置Maven</h5><ul><li>在IDEA中的全局默认配置中去配置</li><li><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008161206082.png" alt="image-20201008161206082" style="zoom:67%;"></li></ul><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008161447247.png" alt="image-20201008161447247" style="zoom:67%;"><p>4.Maven项目中Tomcat无法配置</p><h4 id="5-Maven默认项目中的web-xml版本问题"><a href="#5-Maven默认项目中的web-xml版本问题" class="headerlink" title="5.Maven默认项目中的web.xml版本问题"></a>5.Maven默认项目中的web.xml版本问题</h4><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008162228694.png" alt="image-20201008162228694" style="zoom:67%;"><h4 id="6-替换为webapp4-0版本和tomcat一致"><a href="#6-替换为webapp4-0版本和tomcat一致" class="headerlink" title="6.替换为webapp4.0版本和tomcat一致"></a>6.替换为webapp4.0版本和tomcat一致</h4><h4 id="7-Maven仓库的使用"><a href="#7-Maven仓库的使用" class="headerlink" title="7.Maven仓库的使用"></a>7.Maven仓库的使用</h4><p>地址：<a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163339976.png" alt="image-20201008163339976"></p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163518040.png" alt="image-20201008163518040"></p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163645267.png" alt="image-20201008163645267"></p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008163724903.png" alt="image-20201008163724903"></p><h3 id="6Servlet"><a href="#6Servlet" class="headerlink" title="6Servlet"></a>6Servlet</h3><hr><h4 id="6-1Servlet简介"><a href="#6-1Servlet简介" class="headerlink" title="6.1Servlet简介"></a>6.1Servlet简介</h4><ul><li>Servlet就是sun公司开发动态web的一门技术</li><li>Sun在这些API中提供一个接口叫做：Servlet，如果你想开发一个Servlet程序，只需要完成两个小步骤：<ul><li>编写一个类实现Servlet接口</li><li>把开发好的java类部署到web服务器中</li></ul></li></ul><p><strong>把实现了Servlet接口的java程序叫做Servlet</strong></p><h4 id="6-2HelloServlet"><a href="#6-2HelloServlet" class="headerlink" title="6.2HelloServlet"></a>6.2HelloServlet</h4><p>Servlet在sun公司有两个默认的实现类：HttpServlet，</p><h6 id="1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；"><a href="#1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；" class="headerlink" title="1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；"></a>1，构建一个普通的Maven项目，删掉里边的sec目录，以后我们的学习就在这个项目里边建立module；</h6><ul><li>这个空的工程就是Maven的主工程；</li></ul><h6 id="2，关于Maven父子工程的理解；"><a href="#2，关于Maven父子工程的理解；" class="headerlink" title="2，关于Maven父子工程的理解；"></a>2，关于Maven父子工程的理解；</h6><ul><li>在父项目中会有</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;modules&gt;</span><br><span class="line">       &lt;module&gt;Servlet-01&lt;/module&gt;</span><br><span class="line">   &lt;/modules&gt;</span><br></pre></td></tr></table></figure><p>子项目中有时候会有parents;</p><p>父项目中的java子项目可以直接使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">son extends father</span><br></pre></td></tr></table></figure><h6 id="3-Maven环境优化"><a href="#3-Maven环境优化" class="headerlink" title="3.Maven环境优化"></a>3.Maven环境优化</h6><p>​    1.修改web.xml为最新的</p><p>​    2.将Maven的结构搭建完整</p><h6 id="4-编写一个Servlet程序"><a href="#4-编写一个Servlet程序" class="headerlink" title="4.编写一个Servlet程序"></a>4.编写一个Servlet程序</h6><p>​    1.编写一个普通类</p><p>​    2.实现Servlet接口，这里我们直接继承HttpServlet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="comment">//由于get或者post知识请求实现的不同的方式，可以互相调用，业务逻辑都一样</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">      PrintWriter writer=resp.getWriter();<span class="comment">//响应流</span></span><br><span class="line">        writer.print(<span class="string">&quot;hello,servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="5-编写Servlet映射"><a href="#5-编写Servlet映射" class="headerlink" title="5.编写Servlet映射"></a>5.编写Servlet映射</h6><p>​    为什么需要映射：我们写的是java程序，但是要通过浏览器访问，而浏览器要连接web服务器，所以我们需要在web服务器中注册我们写的Servlet，还需要给他一个浏览器能够访问的路径；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">   &lt;servlet-name&gt;hello&lt;/servlet-name&gt;</span><br><span class="line">   &lt;servlet-<span class="class"><span class="keyword">class</span>&gt;<span class="title">com</span>.<span class="title">HelloServlet</span>&lt;/<span class="title">servlet</span>-<span class="title">class</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">servlet</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br><span class="line"><span class="class">   &lt;<span class="title">servlet</span>-<span class="title">name</span>&gt;<span class="title">hello</span>&lt;/<span class="title">servlet</span>-<span class="title">name</span>&gt;</span></span><br><span class="line"><span class="class">   &lt;<span class="title">url</span>-<span class="title">pattern</span>&gt;/<span class="title">hello</span>&lt;/<span class="title">url</span>-<span class="title">pattern</span>&gt;</span></span><br><span class="line"><span class="class"> &lt;/<span class="title">servlet</span>-<span class="title">mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="6-配置Tomcat"><a href="#6-配置Tomcat" class="headerlink" title="6.配置Tomcat"></a>6.配置Tomcat</h6><p>注意：配置项目发布的路径就可以了</p><h6 id="7-启动测试"><a href="#7-启动测试" class="headerlink" title="7.启动测试"></a>7.启动测试</h6><h4 id="6-3Servlet原理"><a href="#6-3Servlet原理" class="headerlink" title="6.3Servlet原理"></a>6.3Servlet原理</h4><p>Servlet是由web服务器调用，web服务器在收到浏览器的请求之后，会：</p><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008202033590.png" alt="image-20201008202033590"></p><h4 id="6-4Mapping"><a href="#6-4Mapping" class="headerlink" title="6.4Mapping"></a>6.4Mapping</h4><h5 id="1-一个servlet可以指定一个映射路径"><a href="#1-一个servlet可以指定一个映射路径" class="headerlink" title="1.一个servlet可以指定一个映射路径"></a>1.一个servlet可以指定一个映射路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-一个servlet可以指定多个映射路径"><a href="#2-一个servlet可以指定多个映射路径" class="headerlink" title="2.一个servlet可以指定多个映射路径"></a>2.一个servlet可以指定多个映射路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello2<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello3<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello4<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello5<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-一个servlet可以指定通用映射路径"><a href="#3-一个servlet可以指定通用映射路径" class="headerlink" title="3.一个servlet可以指定通用映射路径"></a>3.一个servlet可以指定通用映射路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-默认请求路径"><a href="#4-默认请求路径" class="headerlink" title="4.默认请求路径"></a>4.默认请求路径</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="5-指定一些后缀或者前缀等"><a href="#5-指定一些后缀或者前缀等" class="headerlink" title="5.指定一些后缀或者前缀等"></a>5.指定一些后缀或者前缀等</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--可以自定义后缀实现请求映射</span><br><span class="line">注意点，*前边不能加项目映射的路径</span><br><span class="line">hello&#x2F;sajdkajda.guoxiulong,只要结尾匹配即可--&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">   &lt;servlet-name&gt;hello&lt;&#x2F;servlet-name&gt;</span><br><span class="line">   &lt;url-pattern&gt;*.guoxiulong&lt;&#x2F;url-pattern&gt;</span><br><span class="line"> &lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h5 id="6-优先级问题"><a href="#6-优先级问题" class="headerlink" title="6.优先级问题"></a>6.优先级问题</h5><p>制定了固有的映射路径优先级最高，如果找不到会走默认的处理请求；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">  &lt;servlet-name&gt;error&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;servlet-class&gt;com.ErrorServlet&lt;&#x2F;servlet-class&gt;</span><br><span class="line">&lt;&#x2F;servlet&gt;</span><br><span class="line">&lt;servlet-mapping&gt;</span><br><span class="line">  &lt;servlet-name&gt;error&lt;&#x2F;servlet-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;</span><br><span class="line">&lt;&#x2F;servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h4 id="6-5ServletContext"><a href="#6-5ServletContext" class="headerlink" title="6.5ServletContext"></a>6.5ServletContext</h4><p>web容器在启动的时候，他会为每个web程序都创建一个servletcontext对象，他代表了当前的web应用</p><h5 id="1-共享数据"><a href="#1-共享数据" class="headerlink" title="1.共享数据"></a>1.共享数据</h5><p>我在这个servlet中保存的数据，可以在另一个Servlet中拿到；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">&#x2F;&#x2F;        this.getInitParameter()   初始化参数</span><br><span class="line">&#x2F;&#x2F;          this.getServletConfig()   Servlet配置</span><br><span class="line">&#x2F;&#x2F;        this.getServletContext()    servlet上下文</span><br><span class="line">        ServletContext context&#x3D; this.getServletContext();</span><br><span class="line"></span><br><span class="line">        String username&#x3D;&quot;龙&quot;;&#x2F;&#x2F;数据</span><br><span class="line">        context.setAttribute(&quot;username&quot;,username);&#x2F;&#x2F;将一个数据保存在了servletcontext中，名字为：username</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;hello&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">&#x2F;&#x2F;        this.getInitParameter()   初始化参数</span><br><span class="line">&#x2F;&#x2F;          this.getServletConfig()   Servlet配置</span><br><span class="line">&#x2F;&#x2F;        this.getServletContext()    servlet上下文</span><br><span class="line">        ServletContext context&#x3D; this.getServletContext();</span><br><span class="line"></span><br><span class="line">        String username&#x3D;&quot;龙&quot;;&#x2F;&#x2F;数据</span><br><span class="line">        context.setAttribute(&quot;username&quot;,username);&#x2F;&#x2F;将一个数据保存在了servletcontext中，名字为：username</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;hello&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>测试访问结界：</p><h5 id="2-获取初始化参数"><a href="#2-获取初始化参数" class="headerlink" title="2.获取初始化参数"></a>2.获取初始化参数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--配置一些web应用的初始化参数--&gt;</span><br><span class="line">&lt;context-param&gt;</span><br><span class="line">  &lt;param-name&gt;url&lt;&#x2F;param-name&gt;</span><br><span class="line">  &lt;param-value&gt;jbdc:mysql:&#x2F;&#x2F;localhost:3306&#x2F;mybatis&lt;&#x2F;param-value&gt;</span><br><span class="line">&lt;&#x2F;context-param&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">    String url = context.getInitParameter(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">    resp.getWriter().print(url);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="3-请求转发"><a href="#3-请求转发" class="headerlink" title="3.请求转发"></a>3.请求转发</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">     ServletContext context = <span class="keyword">this</span>.getServletContext();</span><br><span class="line"></span><br><span class="line">     System.out.println(<span class="string">&quot;进入了demo04&quot;</span>);</span><br><span class="line">     <span class="comment">//RequestDispatcher requestDispatcher = context.getRequestDispatcher(&quot;/demo3&quot;);//转发的请求路径</span></span><br><span class="line">     <span class="comment">//requestDispatcher.forward(req,resp);//调用forward实现请求转发；</span></span><br><span class="line">     context.getRequestDispatcher(<span class="string">&quot;/demo3&quot;</span>).forward(req,resp);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/10/06/Javaweb%E5%AD%A6%E4%B9%A0/assets/Javaweb%E5%AD%A6%E4%B9%A0/image-20201008214350572.png" alt="image-20201008214350572">*</p><ul><li>上图中，第一个图是请求转发，第二个图是重定向</li></ul><h5 id="4-读取资源文件"><a href="#4-读取资源文件" class="headerlink" title="4.读取资源文件"></a>4.读取资源文件</h5><p>Piroperties</p><ul><li>在java目录下新建properties</li><li>在resources目录下新建properties</li></ul><p>发现：都被打包到了同一路径下：classes，我们俗称这个路径为类路径：classpath</p><p>思路：需要一个文件流；</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"><span class="keyword">import</span> java.util.PropertyPermission;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * user: Xiu long</span></span><br><span class="line"><span class="comment"> * dote: 2020/10/8</span></span><br><span class="line"><span class="comment"> * time: 21:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServletDemo5</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        InputStream is = <span class="keyword">this</span>.getServletContext().getResourceAsStream(<span class="string">&quot;/WEB-INF/classes/db.properties&quot;</span>);</span><br><span class="line"></span><br><span class="line">        Properties prop = <span class="keyword">new</span> Properties();</span><br><span class="line">        prop.load(is);</span><br><span class="line">        String user= prop.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        String pwd=prop.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        resp.getWriter().print(user+<span class="string">&quot;:&quot;</span>+pwd);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问测试即可ok；</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;ubuntu学习笔记，基础知识点。&lt;/p&gt;
&lt;p&gt;JavaWeb学习笔记&lt;/p&gt;</summary>
    
    
    
    <category term="JavaWeb笔记" scheme="http://www.acrazydragon.github.io/categories/JavaWeb%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaWeb笔记" scheme="http://www.acrazydragon.github.io/tags/JavaWeb%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于ubuntu用户目录下没有.ssh文件夹的问题解决</title>
    <link href="http://www.acrazydragon.github.io/2020/10/03/2020-10-3-ubuntu%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.acrazydragon.github.io/2020/10/03/2020-10-3-ubuntu%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-03T12:49:43.000Z</published>
    <updated>2020-10-05T10:26:06.711Z</updated>
    
    <content type="html"><![CDATA[<p>关于ubuntu用户目录下没有<code>.ssh</code>文件夹的问题解决</p><a id="more"></a><h3 id="关于ubuntu用户目录下没有-ssh文件夹的问题解决"><a href="#关于ubuntu用户目录下没有-ssh文件夹的问题解决" class="headerlink" title="关于ubuntu用户目录下没有.ssh文件夹的问题解决"></a>关于ubuntu用户目录下没有<code>.ssh</code>文件夹的问题解决</h3><p>原因分析：因为<code>.ssh</code>是记录密码信息的文件夹，如果没有登陆过<code>root</code>账户的话就不会有<code>.ssh</code>文件夹，因此登录依次<code>localhost</code>就可以了。</p><p>解决问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure><p>执行一次上诉命令，即可使得问题解决。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;关于ubuntu用户目录下没有&lt;code&gt;.ssh&lt;/code&gt;文件夹的问题解决&lt;/p&gt;</summary>
    
    
    
    <category term="Ubuntu笔记" scheme="http://www.acrazydragon.github.io/categories/Ubuntu%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Ubuntu笔记" scheme="http://www.acrazydragon.github.io/tags/Ubuntu%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>dpkg被中断问题解决方法</title>
    <link href="http://www.acrazydragon.github.io/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://www.acrazydragon.github.io/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2020-10-02T13:52:47.000Z</published>
    <updated>2020-10-03T12:45:45.696Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Ubuntu安装软件过程中出现的dpkg被中断问题解决方法</strong></p><a id="more"></a><h3 id="Ubuntu安装软件过程中出现的dpkg被中断问题解决方法"><a href="#Ubuntu安装软件过程中出现的dpkg被中断问题解决方法" class="headerlink" title="Ubuntu安装软件过程中出现的dpkg被中断问题解决方法"></a><strong>Ubuntu安装软件过程中出现的dpkg被中断问题解决方法</strong></h3><p>在安装ssh过程中出现dpkg被中断的现象，如图：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/images/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002213917673.png" alt="image-20201002213917673"></p><p>然而根据提示进行操作，并没有解决问题：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/images/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002213949697.png" alt="image-20201002213949697"></p><h4 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h4><p>这个问题的主要原因是因为/var/lib/dpkg/updates文件下的文件有问题，可能是其他软件安装过程或是其他原因导致的，这里删除掉然后重建即可</p><p>解决方案：</p><blockquote><p>1.执行<code>sudo rm /var/lib/dpkg/updates/*</code> 删除文件夹下的文件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm &#x2F;var&#x2F;lib&#x2F;dpkg&#x2F;updates&#x2F;*</span><br></pre></td></tr></table></figure><blockquote><p>2.然后执行<code>sudo apt-get update</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/images/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002214805141.png" alt="image-20201002214805141"></p><blockquote><p>3.最后执行<code>sudo apt-get upgrade</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>执行结果：</p><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/images/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002214946375.png" alt="image-20201002214946375"></p><blockquote><p>4.进行到这一步已经解决问题啦，重新运行安装软件命令行，发现成功啦</p></blockquote><p><img src="/2020/10/02/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/images/2020-10-2-dpkg%E8%A2%AB%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/image-20201002215121030.png" alt="image-20201002215121030"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;Ubuntu安装软件过程中出现的dpkg被中断问题解决方法&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="ubuntu" scheme="http://www.acrazydragon.github.io/categories/ubuntu/"/>
    
    <category term="dpkg" scheme="http://www.acrazydragon.github.io/categories/ubuntu/dpkg/"/>
    
    
    <category term="ubuntu" scheme="http://www.acrazydragon.github.io/tags/ubuntu/"/>
    
    <category term="dpkg" scheme="http://www.acrazydragon.github.io/tags/dpkg/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu笔记</title>
    <link href="http://www.acrazydragon.github.io/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/"/>
    <id>http://www.acrazydragon.github.io/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/</id>
    <published>2020-09-28T12:29:03.000Z</published>
    <updated>2020-10-06T13:54:50.333Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu学习笔记，基础知识点。</p><a id="more"></a><p>常用命令：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu总结/image-20200918211130919.png" alt="image-20200918211130919" style="zoom:50%;"><h3 id="1Linux终端命令格式："><a href="#1Linux终端命令格式：" class="headerlink" title="1Linux终端命令格式："></a>1Linux终端命令格式：</h3><ul><li>command [-options] [parameter]</li></ul><blockquote><p>说明：1.command：命令名，相应功能的英文单词的缩写。</p><p>​          2.[-options]：选项，可以用来对命令进行控制，也可以省略。</p><p>​          3.parameter：传给命令的参数，可以是零个，一个或者多个。</p></blockquote><p>​     <u>注：”[ ]”的意思是可以选也可以不选。</u></p><h3 id="2查询命令帮助信息（知道）"><a href="#2查询命令帮助信息（知道）" class="headerlink" title="2查询命令帮助信息（知道）"></a>2查询命令帮助信息（知道）</h3><ul><li>现阶段只需要知道通过两种方式查询命令的帮助信息。</li><li>先学习常用命令及常用选项即可，工作中如果遇到问题可以借助网络进行搜索。</li></ul><h4 id="2-1–help"><a href="#2-1–help" class="headerlink" title="2.1–help"></a>2.1–help</h4><ul><li><u>command-help</u></li></ul><blockquote><p>说明：command命令的帮助信息。</p></blockquote><h4 id="2-2man"><a href="#2-2man" class="headerlink" title="2.2man"></a>2.2man</h4><ul><li><u>man command</u></li></ul><blockquote><p>说明：查询command命令的使用手册。</p><p>man是manual的缩写，是Linux提供的一个手册，包含了绝大部分的命令，函数的详细使用的说明。</p></blockquote><p>man的基本操作键位：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200918214257193-1601992202938.png" alt="image-20200918214257193" style="zoom:50%;"><h3 id="文件和目录常用命令："><a href="#文件和目录常用命令：" class="headerlink" title="文件和目录常用命令："></a>文件和目录常用命令：</h3><h5 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h5><ul><li>查看目录内容：ls</li><li>切换目录：cd</li><li>创建和删除操作：touch，rm，mkdir</li><li>拷贝和移动文件：cp，mv</li><li>查看文件内容：cat，more，grep</li><li>其他：echo，重定向&gt;和&gt;&gt;，管道 |</li></ul><h4 id="01查看目录内容"><a href="#01查看目录内容" class="headerlink" title="01查看目录内容"></a>01查看目录内容</h4><h5 id="1-1终端实用技巧"><a href="#1-1终端实用技巧" class="headerlink" title="1.1终端实用技巧"></a>1.1终端实用技巧</h5><h6 id="1自动补全"><a href="#1自动补全" class="headerlink" title="1自动补全"></a>1自动补全</h6><ul><li>在敲出文件/目录/命令 的前几个字母之后，按下 tab键<ul><li>如果输入没有歧义，系统自动补全。</li><li>如果还存在其他文件/目录/命令，再按一下tab键，系统会提示可能存在的命令。</li></ul></li></ul><h6 id="2曾经使用过的命令"><a href="#2曾经使用过的命令" class="headerlink" title="2曾经使用过的命令"></a>2曾经使用过的命令</h6><ul><li>按  上/下 光标可以在曾经使用过的命令之间来回切换。</li><li>如果想要退出选项，并且不想执行当前选中的命令，可以按 ctrl + c。</li></ul><h5 id="1-2ls命令说明"><a href="#1-2ls命令说明" class="headerlink" title="1.2ls命令说明"></a>1.2ls命令说明</h5><ul><li>ls是英文单词list的简写，其功能为列出目录的内容，是用户最常用的命令之一，类似于DOS下的dir命令。</li></ul><p>Linux下文件和睦路的特点：</p><ul><li>Linux文件或者目录名称最长可以有 256 个字符</li><li>以  .   开头的文件为隐藏文件，需要用  -a   参数才能显示</li><li>.   代表当前目录。</li><li>..   代表上一级目录。</li></ul><p>ls常用选项：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919152103953-1601992215731.png" alt="image-20200919152103953" style="zoom:50%;"><h5 id="1-3ls通配符的使用"><a href="#1-3ls通配符的使用" class="headerlink" title="1.3ls通配符的使用"></a>1.3ls通配符的使用</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919152934049-1601992220110.png" alt="image-20200919152934049" style="zoom:50%;"><h4 id="02切换目录"><a href="#02切换目录" class="headerlink" title="02切换目录"></a>02切换目录</h4><h5 id="2-1cd"><a href="#2-1cd" class="headerlink" title="2.1cd"></a>2.1cd</h5><ul><li><p>cd  是英文单词嫦娥 directory 的缩写，其功能为更改当前的工作目录，也是用户最常用的命令之一。</p><p>注意：Linux所有的目录和文件夹名都是大小写敏感的。</p></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919153529897-1601992222862.png" alt="image-20200919153529897" style="zoom:50%;"><h5 id="2-2相对路径和绝对路径"><a href="#2-2相对路径和绝对路径" class="headerlink" title="2.2相对路径和绝对路径"></a>2.2相对路径和绝对路径</h5><ul><li>相对路径 ：在输入路径时，最前面不是 / 或者 ~，表示相对 当前目录所在的目录位置。</li><li>绝对路径 ：在输入路径时，最前面是 /  或者 ~，表示从根目录/家目录 开始具体目录位置。</li></ul><h4 id="03创建和删除操作"><a href="#03创建和删除操作" class="headerlink" title="03创建和删除操作"></a>03创建和删除操作</h4><h5 id="3-1touch"><a href="#3-1touch" class="headerlink" title="3.1touch"></a>3.1touch</h5><ul><li>创建文件或修改文件<ul><li>如果文件不存在，可以创建一个空白文件。</li><li>如果文件已经存在，可以修改文件末次修改日期。</li></ul></li></ul><h5 id="3-2mkdir"><a href="#3-2mkdir" class="headerlink" title="3.2mkdir"></a>3.2mkdir</h5><ul><li>创建一个新的目录</li></ul><blockquote><p>-p      可以递归创建目录。</p><p>新目录的名称  不能与当前目录中已有的目录或文件同名。</p></blockquote><h5 id="3-3rm"><a href="#3-3rm" class="headerlink" title="3.3rm"></a>3.3rm</h5><ul><li>可以删除文件和目录</li></ul><blockquote><p>使用   rm  命令要小心，因为文件删除后不能恢复。</p><p>使用rm的时候也可以使用通配符进行操作。</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919155443260-1601992228659.png" alt="image-20200919155443260" style="zoom:50%;"><h4 id="04拷贝和移动文件"><a href="#04拷贝和移动文件" class="headerlink" title="04拷贝和移动文件"></a>04拷贝和移动文件</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919160048797-1601992230471.png" alt="image-20200919160048797" style="zoom:50%;"><h5 id="4-1tree"><a href="#4-1tree" class="headerlink" title="4.1tree"></a>4.1tree</h5><ul><li>tree 命令可以以树状图列出文件目录结构。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919160159837-1601992233396.png" alt="image-20200919160159837" style="zoom:50%;"><h5 id="4-2cp"><a href="#4-2cp" class="headerlink" title="4.2cp"></a>4.2cp</h5><ul><li>cp 命令的功能是将给出的文件 或 目录复制到另一个文件 或 目录中，相当于DOS下的copy命令。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919160936308-1601992234706.png" alt="image-20200919160936308" style="zoom:50%;"><h5 id="4-3mv"><a href="#4-3mv" class="headerlink" title="4.3mv"></a>4.3mv</h5><ul><li>mv 命令可以用来移动文件或目录，也可以给文件或目录重命名。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919162603461-1601992238835.png" alt="image-20200919162603461" style="zoom:50%;"><h4 id="05查看文件内容"><a href="#05查看文件内容" class="headerlink" title="05查看文件内容"></a>05查看文件内容</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919163131083-1601992237414.png" alt="image-20200919163131083" style="zoom:50%;"><h5 id="5-1cat"><a href="#5-1cat" class="headerlink" title="5.1cat"></a>5.1cat</h5><ul><li>cat 命令可以用来查看文件内容，创建文件，文件合并，追加问价那内容等功能。</li><li>cat  会一次显示所有的内容，适合查看内容较少的文本文件。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919164005314-1601992241676.png" alt="image-20200919164005314" style="zoom:50%;"><blockquote><p>Linux中海油一个nl的命令和 cat    -b    的效果等价。</p></blockquote><h5 id="5-2more"><a href="#5-2more" class="headerlink" title="5.2more"></a>5.2more</h5><ul><li>more命令可以用于分屏显示文件内容，每次只显示一页内容。</li><li>适合于查看内容较多的文本文件。</li></ul><h5 id="5-3grep"><a href="#5-3grep" class="headerlink" title="5.3grep"></a>5.3grep</h5><ul><li>Linux系统中 grep 命令是一种强大的搜索工具。</li><li><code>grep</code> 允许对文本进行 模式查找，所谓模式查找，又被称为正则表达式。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919164453274-1601992244334.png" alt="image-20200919164453274" style="zoom:50%;"><ul><li>常用的两种查找模式。</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20200919164529345-1601992245890.png" alt="image-20200919164529345" style="zoom:50%;"><h4 id="06其他"><a href="#06其他" class="headerlink" title="06其他"></a>06其他</h4><h5 id="6-1echo-文字内容"><a href="#6-1echo-文字内容" class="headerlink" title="6.1echo 文字内容"></a>6.1echo 文字内容</h5><ul><li><code>echo</code>  会在终端中显示参数指定的文字，通常会和重定向联合使用。</li></ul><h5 id="6-2重定向-gt-和-gt-gt"><a href="#6-2重定向-gt-和-gt-gt" class="headerlink" title="6.2重定向&gt;和&gt;&gt;"></a>6.2重定向&gt;和&gt;&gt;</h5><ul><li>Linux允许将命令执行结果重定向到一个文件。</li><li>将本应该显示在终端上的内容输出/追加到指定文件中</li></ul><p>其中</p><ul><li><code>&gt;</code>表示输出，会覆盖文件原有内容。</li><li><code>&gt;&gt;</code>表示追加，会将内容追加到已有文件的末尾。</li></ul><h5 id="6-3管道"><a href="#6-3管道" class="headerlink" title="6.3管道"></a>6.3管道</h5><ul><li><p>Linux允许将一个命令的输出可以通过管道作为另一个</p></li><li><p>可以理解现实生活中的管子，罐子的一头塞东西进去，另一头取出来，这里 ‘ | ’的左右分为两端，左端塞东西（写），右边取东西（读）。</p></li></ul><p>常用的命令有：</p><ul><li><code>more</code>：分屏显示内容</li><li><code>grep</code>：在命令执行结果的基础上查询指定的文本。</li></ul><h3 id="远程管理常用命令："><a href="#远程管理常用命令：" class="headerlink" title="远程管理常用命令："></a>远程管理常用命令：</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><ul><li><p>关机/重启</p><ul><li><code>shutdown</code></li></ul></li><li><p>查看配置网卡信息</p><ul><li><code>config</code></li><li><code>ping</code></li></ul></li><li><p>远程登录和复制文件</p><ul><li><code>ssh</code></li><li><code>scp</code></li></ul></li></ul><h4 id="01关机-重启"><a href="#01关机-重启" class="headerlink" title="01关机/重启"></a>01关机/重启</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002191508436.png" alt="image-20201002191508436" style="zoom:50%;"><h5 id="1-1shutdown"><a href="#1-1shutdown" class="headerlink" title="1.1shutdown"></a>1.1shutdown</h5><ul><li>shutdown``命令可以安全关闭或者重新自动系统</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/image-20201002191744472.png" alt="image-20201002191744472" style="zoom:50%;"><blockquote><p>提示：</p><ul><li>不指定选项和参数，默认一分钟后关闭电脑</li><li>远程维护服务器时，最好不要关闭系统，而应该重新启动系统</li></ul></blockquote><ul><li>常用命令示例</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002192123168.png" alt="image-20201002192123168" style="zoom:50%;"><h4 id="02查看或配置网卡信息"><a href="#02查看或配置网卡信息" class="headerlink" title="02查看或配置网卡信息"></a>02查看或配置网卡信息</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002192341769.png" alt="image-20201002192341769" style="zoom:50%;"><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002193918500.png" alt="image-20201002193918500" style="zoom:50%;"><h5 id="2-1网卡和IP配置"><a href="#2-1网卡和IP配置" class="headerlink" title="2.1网卡和IP配置"></a>2.1网卡和IP配置</h5><p>网卡</p><ul><li>网卡是一个专门负责网络通讯的硬件设备</li><li><strong>IP地址</strong>是设置在网卡上的地址信息</li></ul><blockquote><p>我们可以吧<strong>电脑</strong>比作<strong>电话</strong>，<strong>网卡</strong>相当于<strong>SIM卡</strong>，<strong>IP地址</strong>相当于<strong>电话号码</strong></p></blockquote><p>IP地址</p><ul><li>每台联网的电脑上都有IP地址，是保证电脑之间正常通讯的重要设置</li></ul><blockquote><p>注意：每台电脑的IP地址不能相同，否则会出现IP地址冲突，并且没有办法正常通讯</p></blockquote><h5 id="2-2ifconfig"><a href="#2-2ifconfig" class="headerlink" title="2.2ifconfig"></a>2.2ifconfig</h5><ul><li><code>ifconfig</code>可以查看/配置计算机当前的网卡配置信息</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002193943544.png" alt="image-20201002193943544" style="zoom:50%;"><blockquote><p>提示：一台计算机可能有一个<strong>物理网卡</strong>和多个<strong>虚拟网卡</strong>，在Linux中物理网卡的名字通常以<code>ensXXX</code>表示</p></blockquote><ul><li><code>127.0.0.1</code>被视为<code>本地循环</code>/<code>环回地址</code>，一个用来测试本机网卡是否正常</li></ul><h5 id="2-3ping"><a href="#2-3ping" class="headerlink" title="2.3ping"></a>2.3ping</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002194516571.png" alt="image-20201002194516571" style="zoom:50%;"><ul><li><code>ping</code>一般用于检测当前计算机到目标计算机之间的网络<strong>是否通畅，数值越大，速度越慢</strong></li></ul><blockquote><ul><li><code>ping</code>的工作原理与潜水艇的声呐相似，<code>ping</code>这个命令就是取自<strong>声呐的声音</strong></li><li>网络管理员之间也经常讲<code>ping</code>用作动词，–<strong>ping一下计算机x，看他是否开着</strong></li></ul></blockquote><p>原理：网络上的机器都有唯一确定的IP地址，我们给目标IP地址发送一个数据包，对方就要返回一个数据包，根据返回的数据包以及时间，我们可以确定目标主机的存在</p><blockquote><p>提示：在Linux中，想要终止一个终端程序的执行，绝大多数都可以使用<strong>CTRL+C</strong></p></blockquote><h4 id="03远程登陆和复制文件"><a href="#03远程登陆和复制文件" class="headerlink" title="03远程登陆和复制文件"></a>03远程登陆和复制文件</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002200119336.png" alt="image-20201002200119336" style="zoom:50%;"><h5 id="3-1ssh基础（重点）"><a href="#3-1ssh基础（重点）" class="headerlink" title="3.1ssh基础（重点）"></a>3.1ssh基础（重点）</h5><p>在Linux中SSH时非常常用的工具，通过SSH客户端我们可以连接到运行了SSH的远程机器上</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/image-20201002200301200.png" alt="image-20201002200301200" style="zoom:50%;"><ul><li><p>SSH客户端是一种使用<code>Secure Shell (SSH)</code>协议连接到远程计算机软件程序</p></li><li><p><code>SSH</code>是目前比较可靠，专门为<strong>远程登录会话</strong>和<strong>其他网络服务</strong>提供安全性的协议。</p><ul><li>利用ssh协议可以有效地防止远程管理过程中的信息泄露</li><li>通过ssh协议可以对所有传输的数据进行加密，也能够防止DNS欺骗和IP欺骗</li></ul></li><li><p><code>SSH</code>的另一项优点是传输数据可以是经过压缩的，所以可以加快传输的速度</p></li></ul><h6 id="1》域名和端口号"><a href="#1》域名和端口号" class="headerlink" title="1》域名和端口号"></a>1》域名和端口号</h6><p>域名</p><ul><li>是有遗传用点分割的名字组成，例如<code>www.itchst.cn</code></li><li>IP地址的别名，方便用户回忆</li></ul><p>端口号</p><ul><li><p>IP地址：通过IP地址找到网络上的计算机</p></li><li><p>端口号：通过端口号可以找到计算机上运行的应用程序</p><ul><li>SSH服务器的默认端口号是<code>22</code>，如果是默认端口号，在连接的时候可以省略</li></ul></li><li><p>常见服务器端口号列表：</p></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002201608419.png" alt="image-20201002201608419" style="zoom:50%;"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [-p port] user@remote</span><br></pre></td></tr></table></figure><ul><li><code>user</code>是在远程机器上的用户名，如果不指定的话就认为当前用户</li><li><code>remote</code>是远程机器的地址，可以使IP/域名，或者是后面会提到的别名</li><li><code>port</code>是SSH server监听的端口，如果不确定，就默认为<code>22</code></li></ul><blockquote><p>提示：</p><ul><li>使用<code>exit</code>退出当前用户的登陆</li></ul></blockquote><blockquote><p>注意：</p><ul><li><code>ssh</code>这个终端命令只能在<code>Linux</code>系统下使用</li><li>如果在<code>Windows</code>系统中，可以安装<code>PuTTY</code>或者<code>XShell</code>客户端软件即可</li></ul></blockquote><blockquote><p>提示：</p><ul><li>在工作中，ssh服务器端口号很有可能不是22，如果遇到这种情况需要使用<code>-p</code>选项，指定正确的端口号，否则无法正常连接到服务器。</li></ul></blockquote><h6 id="2》-windows下SSH客户端的安装"><a href="#2》-windows下SSH客户端的安装" class="headerlink" title="2》 windows下SSH客户端的安装"></a>2》 windows下SSH客户端的安装</h6><ul><li>Putty</li><li>XShell</li></ul><blockquote><p>建议从官方网站下载正式的安装程序</p></blockquote><h5 id="3-2scp（掌握）"><a href="#3-2scp（掌握）" class="headerlink" title="3.2scp（掌握）"></a>3.2scp（掌握）</h5><ul><li>scp就是secure copy，是一个在Linux下用来运行远程拷贝文件的命令</li><li>他的地址格式与ssh基本相同，需要注意的是，在指定端口时用的是大写的<code>-P</code>，而不是小写的</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/image-20201002210054895.png" alt="image-20201002210054895" style="zoom:50%;"><blockquote><p>注意：</p><ul><li><code>scp</code>这个终端命令只能在<code>Linux</code>或者<code>UNIX</code>系统下使用</li><li>如果在<code>Windows</code>系统中，可以安装<code>PuTTY</code>，使用<code>pscp</code>命令行工具或者安装<code>FileZill</code>啊使用<code>FTP</code>进行文件传输</li></ul><p><code>FileZilla</code>传输文件时，使用的时FTP服务而不是<code>SSH服务</code>，因此端口号应该设置为<code>21</code></p></blockquote><h5 id="3-3SSH高级（知道）"><a href="#3-3SSH高级（知道）" class="headerlink" title="3.3SSH高级（知道）"></a>3.3SSH高级（知道）</h5><ul><li>免密码登录、</li><li>配置别名</li></ul><blockquote><p>提示：有关SSH配置信息都保存在用户家目录下的<code>.ssh</code>目录下</p></blockquote><h6 id="1）免密码登录"><a href="#1）免密码登录" class="headerlink" title="1）免密码登录"></a>1）免密码登录</h6><p>步骤</p><ul><li>配置公匙<ul><li>执行ssh-keygen即可生成SSH要是，一键回车即可</li></ul></li><li>上传公匙到服务器<ul><li>执行<code>ssh-copy-id -p port user@remote</code>，可以让远程服务器记住我们的公匙</li></ul></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201002212158438.png" alt="image-20201002212158438" style="zoom:50%;"><blockquote><p>非对称加密算法</p><ul><li>使用公钥解密的数据，需要使用私钥进行解密</li><li>使用私钥加密的数据，需要使用公钥进行解密</li></ul></blockquote><h6 id="2）配置别名"><a href="#2）配置别名" class="headerlink" title="2）配置别名"></a>2）配置别名</h6><p>每次输入<code>ssh -p port user@remote</code>，时间久了会觉得很麻烦，特别是当<code>usert</code>，<code>renote</code>和<code>port</code>都得输入，而且还不好记忆</p><p>而配置别名可以让我们进一步偷懒，譬如： <code>ssh mac</code>来代替name一长串，那么就在<code>~/.ssh/config</code> 里边加以追加以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host mac</span><br><span class="line">HostName ip地址</span><br><span class="line">user：guolong</span><br><span class="line">Port:22</span><br></pre></td></tr></table></figure><p>保存之后，即可用<code>ssh mac</code>实现远程登陆了，<code>scp</code>同样可以使用</p><h3 id="用户权限的相关命令"><a href="#用户权限的相关命令" class="headerlink" title="用户权限的相关命令"></a>用户权限的相关命令</h3><h4 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h4><ul><li><code>用户</code>和<code>权限</code>的基本概念</li><li>用户<code>管理</code>终结命令</li><li>组<code>管理</code>终端命令</li><li><code>修改权限</code> 终端命令</li></ul><h4 id="01用户和权限的基本概念"><a href="#01用户和权限的基本概念" class="headerlink" title="01用户和权限的基本概念"></a>01用户和权限的基本概念</h4><p>1.1基本概念</p><ul><li>用户是Linux系统工作中重要的一环，用户管理包括<code>用户</code>与<code>组</code>管理</li><li>在Linux系统中，不论是由本机或者是远程登陆系统，每个系统都必须拥有一个账号，并且对于不同的系统资源拥有不同的权限</li><li>对<code>文件</code>/<code>目录</code>的权限包括：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201003215318653-1601992425721.png" alt="image-20201003215318653" style="zoom:50%;"><ul><li>在Linux中，可以指定每一个用户针对不同的文件或者目录的不同权限。</li></ul><h5 id="1-2组"><a href="#1-2组" class="headerlink" title="1.2组"></a>1.2组</h5><ul><li>为了方便用户管理，提出了组的概念。如下图所示</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201003215541737-1601992427859.png" alt="image-20201003215541737" style="zoom:50%;"><ul><li>在实际应用中，可以预计先针对设置好的权限，然后将不同的用户添加到对应的组中，从而不用依次为每一个用户设置权限</li></ul><h5 id="1-3ls-l-扩展"><a href="#1-3ls-l-扩展" class="headerlink" title="1.3ls -l 扩展"></a>1.3ls -l 扩展</h5><ul><li><code>ls -l</code>可以查看文件夹下文件的详细信息，从左到右依次是<ul><li>权限：第一个字符如果是d表示目录</li><li>硬连接数：通俗地讲，就是有多少种方式，可以访问当前目录/文件</li><li>拥有者：家目录下文件、目录的拥有者通常都是当前用户</li><li>组：在Linux中，很多时候，会出现组名和用户名相同的情况，后续会将</li><li>大小</li><li>时间</li><li>名称</li></ul></li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201003220205236-1601992429736.png" alt="image-20201003220205236" style="zoom:50%;"><h5 id="1-4chmod简单使用（重要）"><a href="#1-4chmod简单使用（重要）" class="headerlink" title="1.4chmod简单使用（重要）"></a>1.4chmod简单使用（重要）</h5><ul><li>chmod可以修改用户/组 对文件/目录的权限</li><li>命令格式如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +&#x2F;- rwx 文件名|目录名</span><br></pre></td></tr></table></figure><h5 id="1-5超级用户"><a href="#1-5超级用户" class="headerlink" title="1.5超级用户"></a>1.5超级用户</h5><ul><li><code>Linux</code>系统中的root账号通常用于<strong>系统的维护和管理</strong>，对操作系统的所有资源*<em>具有所有访问****</em>权限**</li><li>在大多数版本的Linux中，都不推荐直接使用<code>root</code>账号登录系统</li><li>在Linux安装过程中，系统会自动创建一个用户账号，而这个默认的用户就称为”标准用户“</li></ul><p>sudo</p><ul><li><p><code>su</code>是<code>substitute use</code>r的缩写，表示使用另一个用户的身份</p></li><li><p><code>sudo</code>命令用来以其他身份来执行命令，预设的身份为<code>root</code></p></li><li><p>用户使用<code>sudo</code>时，必须先输入密码，之后有五分钟的有效期限，超过期限则必须重新输入密码</p></li></ul><blockquote><p>若其未经授权的用户企图使用<code>sudo</code>，则会发出警告邮件给管理员</p></blockquote><h4 id="02组管理终端命令"><a href="#02组管理终端命令" class="headerlink" title="02组管理终端命令"></a>02组管理终端命令</h4><blockquote><p>提示：创建组/删除组的终端命令都要通过sudo执行</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004200712571-1601992432375.png" alt="image-20201004200712571" style="zoom:50%;"><blockquote><p>提示：</p><ul><li>族信息保存在<code>/etc/group</code>文件中</li><li><code>/etc</code>目录是专门用来保存系统配置信息的目录</li></ul></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004200826151-1601992434188.png" alt="image-20201004200826151" style="zoom:50%;"><ul><li>在实际应用中，可以预先针对<strong>组</strong>设置好权限，然后将不同的用户添加到对应的组中，从而不用一次为每一个用户<strong>设置权限</strong></li></ul><h4 id="03用户管理-终端用户"><a href="#03用户管理-终端用户" class="headerlink" title="03用户管理 终端用户"></a>03用户管理 终端用户</h4><blockquote><p>提示：<strong>创建用户</strong>/<strong>删除用户</strong>/<strong>修改其他用户密码</strong> 的终端命令都需要通过<code>sudo</code>执行</p></blockquote><h5 id="3-1创建用户-设置密码-删除用户"><a href="#3-1创建用户-设置密码-删除用户" class="headerlink" title="3.1创建用户/设置密码/删除用户"></a>3.1创建用户/设置密码/删除用户</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004202246712-1601992436381.png" alt="image-20201004202246712" style="zoom:50%;"><blockquote><p>提示：</p><ul><li><p>创建用户时，如果忘记添加-m选项指定新用户的家目录–最简单的方法就是删除用户，重新创建。</p></li><li><p>创建用户时，默认会创建一个和用户名同名的组名</p></li><li><h4 id="用户信息保存在-etc-group文件中"><a href="#用户信息保存在-etc-group文件中" class="headerlink" title="用户信息保存在/etc/group文件中"></a>用户信息保存在/etc/group文件中</h4></li></ul></blockquote><h5 id="3-2查看用户信息"><a href="#3-2查看用户信息" class="headerlink" title="3.2查看用户信息"></a>3.2查看用户信息</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004204449502-1601992438645.png" alt="image-20201004204449502" style="zoom:50%;"><p>passwd文件</p><p>/etc/passwd 文件存放的是用户的信息，由6个分好组成的7个信息，分别是</p><p>1.用户名</p><p>2.密码（x，表示加密的密码）</p><p>3.<code>UID</code>（用户标识）</p><p>4.<code>GID</code>（组标识）</p><p>5.用户全名或本地账号</p><p>6.家目录</p><p>7.登录使用的Shell，就是登陆之后，使用终端命令，<code>ubuntu</code>默认是<code>dash</code></p><p>usermod</p><ul><li>usermod可以用来设置用户的主组/附加组和登录Shell，命令格式如下：</li><li>主组：通常在新建用户时指定，在etc/passwd 的第四列GID对应的组</li><li>附加组：在etc/group 中最后一列表示改组的用户列表，用于指定雍虎德附加权限</li></ul><blockquote><p>提示：设置了用户的附加组之后，需要重新登录才能生效！</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004205338553-1601992443282.png" alt="image-20201004205338553" style="zoom:50%;"><blockquote><p>注意：默认使用useradd添加的用户是没有权限使用sudo以root身份执行命令的，可以使用以下命令，将用户添加到sudo添加组中</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -G sudo 用户名</span><br></pre></td></tr></table></figure><p>which(重要)</p><blockquote><p>提示：</p><ul><li>/etc/passwd 适用于保存用户信息的文件</li><li>/usr/bin/passwd 适用于修改用户密码的程序</li></ul></blockquote><ul><li>which命令可以查看执行命令所在位置，例如：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211038670-1601992445223.png" alt="image-20201004211038670" style="zoom:50%;"><p>bin和sbin</p><p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211411599-1601992448074.png" alt="image-20201004211411599"></p><blockquote><p>提示：</p><ul><li><code>cd</code>这个终端命令是内置在系统内核中的，没有独立的文件，因此是<code>which</code>无法找到<code>cd</code>命令的位置</li></ul></blockquote><h5 id="3-3切换用户"><a href="#3-3切换用户" class="headerlink" title="3.3切换用户"></a>3.3切换用户</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211556223-1601992450566.png" alt="image-20201004211556223" style="zoom:50%;"><ul><li>su不接用户名，可以切换到root，但是不推荐使用，因为不安全</li><li>exit提示图如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004211705032-1601992452322.png" alt="image-20201004211705032" style="zoom:50%;"><h4 id="04修改文件权限"><a href="#04修改文件权限" class="headerlink" title="04修改文件权限"></a>04修改文件权限</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004212418725-1601992453929.png" alt="image-20201004212418725" style="zoom:50%;"><ul><li>命令格式如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004212442822-1601992456099.png" alt="image-20201004212442822" style="zoom:50%;"><ul><li><code>chmod</code>在设置权限时，<strong>可以</strong>简单的使用三个数字分别对应<code>拥有者</code>/<code>组</code>和<code>其他</code>用户的权限</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004213004439-1601992457983.png" alt="image-20201004213004439" style="zoom:50%;"><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004213130832-1601992459649.png" alt="image-20201004213130832" style="zoom:50%;"><h3 id="系统信息相关命令"><a href="#系统信息相关命令" class="headerlink" title="系统信息相关命令"></a>系统信息相关命令</h3><ul><li>本节内容主要是为了方便通过远程终端维护服务器时，查看服务器上当前系统日期和时间/磁盘空间占用情况/程序执行情况</li><li>本小结学习的终端命令基本都是查询命令，通过这些命令对系统资源的使用有个了解</li></ul><p>目标</p><ul><li>时间和日期<ul><li><code>date</code></li><li><code>cal</code></li></ul></li><li>磁盘和目录空间<ul><li><code>df</code></li><li><code>du</code></li></ul></li><li>进程信息<ul><li><code>ps</code></li><li><code>top</code></li><li><code>kill</code></li></ul></li></ul><h4 id="01时间和日期"><a href="#01时间和日期" class="headerlink" title="01时间和日期"></a>01时间和日期</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004213954093-1601992462540.png" alt="image-20201004213954093" style="zoom:50%;"><h4 id="02磁盘信息"><a href="#02磁盘信息" class="headerlink" title="02磁盘信息"></a>02磁盘信息</h4><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214017309-1601992464073.png" alt="image-20201004214017309" style="zoom:50%;"><p>选项 说明：</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214248454-1601992465731.png" alt="image-20201004214248454" style="zoom:50%;"><h4 id="03进程信息"><a href="#03进程信息" class="headerlink" title="03进程信息"></a>03进程信息</h4><ul><li>所谓进程，通俗讲就是当前正在执行的程序</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214822885-1601992467494.png" alt="image-20201004214822885" style="zoom:50%;"><blockquote><p><code>ps</code>默认只会显示当前用户通过终端启动的应用程序</p></blockquote><ul><li><code>ps</code>选项说明功能</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004214917933-1601992469251.png" alt="image-20201004214917933" style="zoom:50%;"><blockquote><p>提示：使用<code>kill</code>命令时，最好只终止当前用户开启的用户，而不要终止<code>root</code>身份开启的进程，否则可能导致系统崩溃</p><ul><li>要退出<code>top</code>可以直接输入<code>q</code></li></ul></blockquote><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><p>目标</p><ul><li>查找文件<ul><li><code>find</code></li></ul></li><li>软链接<ul><li><code>ln</code></li></ul></li><li>打包和压缩<ul><li><code>tar</code></li></ul></li><li>软件安装<ul><li><code>apt-get</code></li></ul></li></ul><h4 id="01查找文件"><a href="#01查找文件" class="headerlink" title="01查找文件"></a>01查找文件</h4><ul><li><code>find</code>命令功能非常强大，通常用来在特定目录下搜索符合条件的文件</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201004220538085-1601992472100.png" alt="image-20201004220538085" style="zoom:50%;"><ul><li>如果省略路径，表示在当前文件夹下查找</li><li>之前学习的通配符，在使用<code>find</code>命令时同时可用</li></ul><h5 id="01软链接"><a href="#01软链接" class="headerlink" title="01软链接"></a>01软链接</h5><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005113913946-1601992473706.png" alt="image-20201005113913946" style="zoom:50%;"><ul><li>注意：</li><li>1.没有-s选项建立的是一个硬链接文件<ul><li>两个文件占用相同大小的硬盘空间，工作中几乎不会建立文件的硬链接</li></ul></li><li>2.源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，仍然能够正常使用</li></ul><p>硬链接简介（知道）</p><ul><li>在使用<code>ln</code>创建链接时，如果没有<code>-s</code>选项，会创建一个硬链接，而不是软链接。</li></ul><p>文件软硬链接的示意图</p><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005115940085-1601992475721.png" alt="image-20201005115940085" style="zoom:50%;"><blockquote><p>在Linux中，文件名和文件的数量是分开存储的</p></blockquote><p>提示：</p><ul><li>在Linux中，只有文件的硬连接数==0才会被删除</li><li>使用ls -l可以查看一个文件的硬链接数量</li><li>在日常生活中，几乎不会建立文件的硬链接，知道即可</li></ul><h4 id="03打包压缩"><a href="#03打包压缩" class="headerlink" title="03打包压缩"></a>03打包压缩</h4><ul><li>打包压缩是日常工作中备份文件的一种方式</li><li>在不同操作系统中，常用的打包压缩方式是不同的<ul><li><code>windows</code>常用<code>rar</code></li><li><code>Mac</code>常用<code>zip</code></li><li><code>Linux</code> 常用<code>tar.gz</code></li></ul></li></ul><h5 id="3-1打包-解包"><a href="#3-1打包-解包" class="headerlink" title="3.1打包/解包"></a>3.1打包/解包</h5><ul><li><code>tar</code>是Linux中常用的备份工具，此命令可以吧一系列文件打包到一个打文件中，也可以把一个打包的打文件恢复成一系列文件</li><li><code>tar</code>的命令格式如下：、</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005121056678-1601992478393.png" alt="image-20201005121056678" style="zoom:50%;"><ul><li><code>tar</code>选项说明</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005121136433-1601992481056.png" alt="image-20201005121136433" style="zoom:50%;"><blockquote><p>注意：<code>f</code>选项必须放在最后，其它选项顺序可以随意</p></blockquote><h5 id="3-2压缩-解压缩"><a href="#3-2压缩-解压缩" class="headerlink" title="3.2压缩/解压缩"></a>3.2压缩/解压缩</h5><p>1）gzip</p><ul><li><code>tar</code>与<code>gzip</code>命令结合可以使用实现文件打包和压缩<ul><li><code>tar</code>只负责打包文件，但不压缩</li><li>用<code>gzip</code>压缩<code>tar</code>打包后的文件，其拓展名一般用<code>xxx.tar.gz</code></li></ul></li></ul><blockquote><p>在Linux中，最常见的压缩文件格式就是xxx.tar.gz</p></blockquote><ul><li>在<code>tar</code>命令中有一个选项<code>-z</code>可以调佣<code>gzip</code>，从而可以方便的实现压缩和解压缩的功能</li><li>命令格式如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005122119874-1601992482986.png" alt="image-20201005122119874" style="zoom:50%;"><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/images/ubuntu%E6%80%BB%E7%BB%93/image-20201005122134265.png" alt="image-20201005122134265" style="zoom:50%;"><p>2）bzip2（two）</p><ul><li><code>tar</code>与<code>bzip2</code>命令结合可以使用实现文件打包和压缩（用法和<code>gzip</code>一样）<ul><li><code>tar</code>只负责打包文件，但不压缩</li><li>用<code>bzip2</code>压缩<code>tar</code>打包后的文件，其拓展名一般用<code>xxx.tar.bz2</code></li></ul></li><li>在<code>tar</code>命令中有一个选项<code>-j</code>可以调用<code>bzip2</code>，从而可以方便的实现压缩和解压的功能</li><li>命令格式如下：</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005171036209-1601992485164.png" alt="image-20201005171036209" style="zoom:50%;"><h4 id="04软件安装"><a href="#04软件安装" class="headerlink" title="04软件安装"></a>04软件安装</h4><h5 id="4-1通过apt安装-卸载软件"><a href="#4-1通过apt安装-卸载软件" class="headerlink" title="4.1通过apt安装/卸载软件"></a>4.1通过apt安装/卸载软件</h5><ul><li><code>apt</code>是Advanced Packing Tool，是Linux下的一款安装包管理工具</li><li>可以再终端中方便的安装/卸载/更新软件</li></ul><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005171958722-1601992486895.png" alt="image-20201005171958722" style="zoom:50%;"><h5 id="4-2配置软件源"><a href="#4-2配置软件源" class="headerlink" title="4.2配置软件源"></a>4.2配置软件源</h5><ul><li>如果希望在<code>ubuntu</code>中安装软件，更加快速，可以通过设置软件源，选择一个访问网速更快的服务器，来提供软件下载安装服务</li><li>提示：更换服务器后，需要一个相对较长时间的更新，需要耐心等待，更新完成后，在安装软件机会从新设置的服务器下载软件了</li></ul><blockquote><p>所谓镜像源，就是所有服务器的内容是相同的（镜像），但是根据所在位置不同，国内服务器访问速度更快一些！</p></blockquote><img src="/2020/09/28/ubuntu%E6%80%BB%E7%BB%93/assets/ubuntu%E6%80%BB%E7%BB%93/image-20201005173022899-1601992488863.png" alt="image-20201005173022899" style="zoom:50%;">]]></content>
    
    
    <summary type="html">&lt;p&gt;ubuntu学习笔记，基础知识点。&lt;/p&gt;</summary>
    
    
    
    <category term="ubuntu笔记" scheme="http://www.acrazydragon.github.io/categories/ubuntu%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="ubuntu笔记" scheme="http://www.acrazydragon.github.io/tags/ubuntu%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
